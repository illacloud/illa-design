{"version":3,"file":"statistic.stories-ad90b6a5.js","sources":["../../../../packages/statistic/src/statistic.tsx"],"sourcesContent":["import {\n  forwardRef,\n  useMemo,\n  useEffect,\n  useRef,\n  useState,\n  useImperativeHandle,\n} from \"react\"\nimport { StatisticProps } from \"./interface\"\nimport { animate, AnimationPlaybackControls } from \"framer-motion\"\nimport { Skeleton } from \"@illa-design/skeleton\"\nimport dayjs, { Dayjs } from \"dayjs\"\nimport {\n  statisticStyle,\n  statisticContentStyle,\n  applyStatisticDecoratorStyle,\n  statisticTitleStyle,\n  statisticValueStyle,\n  statisticExtraStyle,\n} from \"./style\"\nimport { isObject } from \"@illa-design/system\"\nimport { applyBoxStyle, deleteCssProps } from \"@illa-design/theme\"\n\ntype StatisticHandle = {\n  onCountUp: () => void\n}\n\nexport const Statistic = forwardRef<any, StatisticProps>((props, ref) => {\n  const {\n    title,\n    value = 0,\n    decimalSeparator = \".\",\n    format,\n    groupSeparator = \",\",\n    loading,\n    precision,\n    suffix,\n    prefix,\n    extra,\n    countUp,\n    countFrom = 0,\n    countDuration = 2000,\n    ...restProps\n  } = props\n\n  const [currentValue, setValue] = useState<string | number | Dayjs>(value)\n\n  const controlRef = useRef<AnimationPlaybackControls | null>()\n\n  function onCountUp(from = countFrom, to = value) {\n    if (from !== to) {\n      controlRef.current = animate(from, Number(to), {\n        duration: Math.floor(countDuration / 1000),\n        ease: \"easeOut\",\n        onUpdate: (latest) => {\n          setValue(latest)\n        },\n        onComplete: () => {\n          setValue(to)\n        },\n      })\n    }\n  }\n\n  useEffect(() => {\n    if (props.countUp) {\n      if (controlRef.current) {\n        controlRef.current.stop()\n      }\n      if (currentValue !== value) {\n        onCountUp(Number(currentValue), value)\n      } else {\n        onCountUp()\n      }\n    } else {\n      setValue(value)\n    }\n\n    return () => {\n      controlRef.current && controlRef.current.stop()\n      controlRef.current = null\n    }\n  }, [value])\n\n  useImperativeHandle<any, StatisticHandle>(ref, () => ({\n    onCountUp,\n  }))\n\n  const renderValue = useMemo<string | number | Dayjs>(() => {\n    if (format) {\n      return dayjs(currentValue).format(format)\n    }\n    let temp: number | string = Number(currentValue)\n    if (!isFinite(temp)) {\n      return currentValue\n    }\n    if (precision !== void 0) {\n      temp = temp.toFixed(precision)\n    }\n    let [int, decimal] = String(temp).split(\".\")\n    int = int.replace(/\\B(?=(\\d{3})+(?!\\d))/g, groupSeparator)\n\n    return decimal !== void 0 ? int + decimalSeparator + decimal : int\n  }, [format, value, groupSeparator, decimalSeparator, precision, currentValue])\n\n  return (\n    <div\n      css={[statisticStyle, applyBoxStyle(props)]}\n      {...deleteCssProps(restProps)}\n    >\n      {title && <div css={statisticTitleStyle}>{title}</div>}\n      <div>\n        <Skeleton\n          animation\n          visible={!!loading}\n          text={{ rows: 1, width: \"100%\" }}\n        >\n          <div css={statisticContentStyle}>\n            {prefix && (\n              <span css={applyStatisticDecoratorStyle(true, !isObject(prefix))}>\n                {prefix}\n              </span>\n            )}\n            <span css={statisticValueStyle}>{renderValue.toString()}</span>\n            {suffix && (\n              <span\n                css={applyStatisticDecoratorStyle(false, !isObject(suffix))}\n              >\n                {suffix}\n              </span>\n            )}\n          </div>\n        </Skeleton>\n        {extra && <div css={statisticExtraStyle}>{extra}</div>}\n      </div>\n    </div>\n  )\n})\n\nStatistic.displayName = \"Statistic\"\n"],"names":["Statistic","forwardRef","props","ref","title","value","decimalSeparator","format","groupSeparator","loading","precision","suffix","prefix","extra","countUp","countFrom","countDuration","restProps","currentValue","setValue","useState","controlRef","useRef","onCountUp","from","to","animate","latest","useEffect","useImperativeHandle","renderValue","useMemo","dayjs","temp","int","decimal","jsxs","statisticStyle","applyBoxStyle","deleteCssProps","jsx","statisticTitleStyle","Skeleton","statisticContentStyle","applyStatisticDecoratorStyle","isObject","statisticValueStyle","statisticExtraStyle"],"mappings":"uzBA2BO,MAAAA,EAAAC,EAAA,WAAA,CAAAC,EAAAC,IAAA,CACL,KAAA,CAAM,MAAAC,EACJ,MAAAC,EAAA,EACQ,iBAAAC,EAAA,IACW,OAAAC,EACnB,eAAAC,EAAA,IACiB,QAAAC,EACjB,UAAAC,EACA,OAAAC,EACA,OAAAC,EACA,MAAAC,EACA,QAAAC,EACA,UAAAC,EAAA,EACY,cAAAC,EAAA,IACI,GAAAC,CACb,EAAAf,EAGL,CAAAgB,EAAAC,CAAA,EAAAC,EAAA,SAAAf,CAAA,EAEAgB,EAAAC,EAAAA,SAEA,SAAAC,EAAAC,EAAAT,EAAAU,EAAApB,EAAA,CACEmB,IAAAC,IACEJ,EAAA,QAAAK,EAAAF,EAAA,OAAAC,CAAA,EAAA,CAA+C,SAAA,KAAA,MAAAT,EAAA,GAAA,EACJ,KAAA,UACnC,SAAAW,GAAA,CAEJR,EAAAQ,CAAA,CAAe,EACjB,WAAA,IAAA,CAEER,EAAAM,CAAA,CAAW,CACb,CAAA,EAEJ,CAGFG,EAAAA,UAAA,KACE1B,EAAA,SACEmB,EAAA,SACEA,EAAA,QAAA,OAEFH,IAAAb,EACEkB,EAAA,OAAAL,CAAA,EAAAb,CAAA,EAEAkB,KAGFJ,EAAAd,CAAA,EAGF,IAAA,CACEgB,EAAA,SAAAA,EAAA,QAAA,KAAA,EACAA,EAAA,QAAA,IAAqB,GACvB,CAAAhB,CAAA,CAAA,EAGFwB,EAAA,oBAAA1B,EAAA,KAAA,CAAsD,UAAAoB,CACpD,EAAA,EAGF,MAAAO,EAAAC,EAAAA,QAAA,IAAA,CACE,GAAAxB,EACE,OAAAyB,EAAAd,CAAA,EAAA,OAAAX,CAAA,EAEF,IAAA0B,EAAA,OAAAf,CAAA,EACA,GAAA,CAAA,SAAAe,CAAA,EACE,OAAAf,EAEFR,IAAA,SACEuB,EAAAA,EAAA,QAAAvB,CAAA,GAEF,GAAA,CAAAwB,EAAAC,CAAA,EAAA,OAAAF,CAAA,EAAA,MAAA,GAAA,EACA,OAAAC,EAAAA,EAAA,QAAA,wBAAA1B,CAAA,EAEA2B,IAAA,OAAAD,EAAA5B,EAAA6B,EAAAD,CAA+D,EAAA,CAAA3B,EAAAF,EAAAG,EAAAF,EAAAI,EAAAQ,CAAA,CAAA,EAGjE,OAAAkB,EACE,MAAC,CAAA,IAAA,CAAAC,EAAAC,EAAApC,CAAA,CAAA,EAC2C,GAAAqC,EAAAtB,CAAA,EACd,SAAA,CAE3Bb,GAAAoC,EAAA,MAAA,CAAA,IAAAC,EAAA,SAAArC,EAAA,EAA+CgC,EAAA,MAAA,CAAA,SAAA,CAE9CI,EAAAE,EAAC,CAAA,UAAA,GACU,QAAA,CAAA,CAAAjC,EACE,KAAA,CAAA,KAAA,EAAA,MAAA,MAAA,EACoB,SAAA2B,EAAA,MAAA,CAAA,IAAAO,EAAA,SAAA,CAG5B/B,GAAA4B,EAAA,OAAA,CAAA,IAAAI,EAAA,GAAA,CAAAC,EAAAjC,CAAA,CAAA,EAAA,SAAAA,CAAA,CAAA,EAGC4B,EAAA,OAAA,CAAA,IAAAM,EAAA,SAAAhB,EAAA,SAAA,EAAA,EAEsDnB,GAAA6B,EAEtD,OAAC,CAAA,IAAAI,EAAA,GAAA,CAAAC,EAAAlC,CAAA,CAAA,EAC2D,SAAAA,CAEzD,CAAA,CACH,EAAA,CAEJ,CAAA,EACFE,GAAA2B,EAAA,MAAA,CAAA,IAAAO,EAAA,SAAAlC,EAAA,CACgD,EAAA,CAClD,CAAA,CAAA,CAGN,CAAA,EAEAb,EAAA,YAAA;;;;;;;;;;;;;;;"}