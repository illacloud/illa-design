{"version":3,"file":"space-0de4b3ea.js","sources":["../../../../packages/space/src/style.ts","../../../../packages/space/src/space.tsx"],"sourcesContent":["import { SpaceAlign, SpaceDirection, SpaceSize } from \"./interface\"\nimport { css, SerializedStyles } from \"@emotion/react\"\n\nexport function applyContainer(\n  direction: SpaceDirection,\n  align: SpaceAlign,\n  wrap: boolean,\n  size: SpaceSize | SpaceSize[],\n): SerializedStyles {\n  let cssDirection: SerializedStyles = css``\n  switch (direction) {\n    case \"horizontal\":\n      cssDirection = css`\n        flex-direction: row;\n        justify-content: ${align};\n      `\n      break\n    case \"vertical\":\n      cssDirection = css`\n        flex-direction: column;\n        align-items: ${align};\n      `\n      break\n  }\n\n  let backStyle = css``\n  if (wrap) {\n    if (typeof size == \"string\") {\n      if (direction == \"horizontal\") {\n        backStyle = css`\n          margin-bottom: -${getSpaceSize(size)};\n        `\n      } else {\n        backStyle = css`\n          margin-right: -${getSpaceSize(size)};\n        `\n      }\n    } else {\n      if (size.length == 1) {\n        if (direction == \"horizontal\") {\n          backStyle = css`\n            margin-bottom: -${size[0]};\n          `\n        } else {\n          backStyle = css`\n            margin-right: -${size[0]};\n          `\n        }\n      }\n      if (size.length >= 2) {\n        if (direction == \"horizontal\") {\n          backStyle = css`\n            margin-bottom: -${size[1]};\n          `\n        } else {\n          backStyle = css`\n            margin-right: -${size[0]};\n          `\n        }\n      }\n    }\n  }\n\n  return css`\n    display: inline-flex;\n    vertical-align: middle;\n    flex-wrap: ${wrap ? \"wrap\" : \"nowrap\"};\n    ${backStyle};\n    ${cssDirection};\n  `\n}\n\nexport function applyDividerSizeSingle(\n  size: SpaceSize,\n  direction: SpaceDirection,\n  wrap: boolean,\n  isLast: boolean,\n): SerializedStyles {\n  let horSpace, verSpace: string\n  switch (direction) {\n    case \"horizontal\":\n      horSpace =\n        direction == \"horizontal\" && !isLast ? getSpaceSize(size) : \"0px\"\n      verSpace = wrap ? getSpaceSize(size) : \"0px\"\n      break\n    case \"vertical\":\n      verSpace = direction == \"vertical\" && !isLast ? getSpaceSize(size) : \"0px\"\n      horSpace = wrap ? getSpaceSize(size) : \"0px\"\n      break\n  }\n  return css`\n    display: inline-flex;\n    margin-right: ${horSpace};\n    margin-bottom: ${verSpace};\n  `\n}\n\nexport function applyDividerMultiSize(\n  size: SpaceSize[],\n  direction: SpaceDirection,\n  isLast: boolean,\n): SerializedStyles {\n  let horSpace, verSpace: string\n  switch (direction) {\n    case \"horizontal\":\n      horSpace =\n        direction == \"horizontal\" && !isLast ? getSpaceSize(size[0]) : \"0px\"\n      verSpace = getSpaceSize(size[1])\n      break\n    case \"vertical\":\n      verSpace =\n        direction == \"vertical\" && !isLast ? getSpaceSize(size[1]) : \"0px\"\n      horSpace = getSpaceSize(size[0])\n      break\n  }\n  return css`\n    display: inline-flex;\n    margin-right: ${horSpace};\n    margin-bottom: ${verSpace};\n  `\n}\n\nexport function applyDividerSize(\n  size: SpaceSize | SpaceSize[],\n  direction: SpaceDirection,\n  wrap: boolean,\n  isLast: boolean,\n): SerializedStyles {\n  if (typeof size == \"string\") {\n    return applyDividerSizeSingle(size, direction, wrap, isLast)\n  } else {\n    if (size.length == 1) {\n      return applyDividerSizeSingle(size[0], direction, wrap, isLast)\n    }\n    if (size.length >= 2) {\n      if (wrap) {\n        return applyDividerMultiSize(size, direction, isLast)\n      } else {\n        switch (direction) {\n          case \"horizontal\":\n            return applyDividerSizeSingle(size[0], direction, wrap, isLast)\n          case \"vertical\":\n            return applyDividerSizeSingle(size[1], direction, wrap, isLast)\n        }\n      }\n    } else {\n      return css``\n    }\n  }\n}\n\nexport function getSpaceSize(size: SpaceSize): string {\n  switch (size) {\n    case \"mini\":\n      return \"4px\"\n    case \"small\":\n      return \"8px\"\n    case \"medium\":\n      return \"16px\"\n    case \"large\":\n      return \"24px\"\n    default:\n      return size\n  }\n}\n","import { Children, forwardRef, Fragment, ReactElement } from \"react\"\nimport { SpaceProps } from \"./interface\"\nimport { Divider, DividerDirection } from \"@illa-design/divider\"\nimport { applyContainer, applyDividerSize } from \"./style\"\nimport { applyBoxStyle, deleteCssProps } from \"@illa-design/theme\"\n\nexport const Space = forwardRef<HTMLDivElement, SpaceProps>((props, ref) => {\n  const {\n    size = \"small\",\n    align = \"start\",\n    direction = \"horizontal\",\n    divider,\n    wrap,\n    ...otherProps\n  } = props\n\n  let childrenArray = Children.toArray(props.children)\n\n  return (\n    <div\n      css={[\n        applyContainer(direction, align, wrap ?? false, size),\n        applyBoxStyle(props),\n      ]}\n      ref={ref}\n      {...deleteCssProps(otherProps)}\n    >\n      {childrenArray.map((child, index) => {\n        return (\n          <Fragment key={(child as ReactElement)?.key || index}>\n            {index != 0 && divider ? (\n              <Divider\n                css={applyDividerSize(size, direction, wrap ?? false, false)}\n                direction={\n                  direction == \"horizontal\"\n                    ? (\"vertical\" as DividerDirection)\n                    : (\"horizontal\" as DividerDirection)\n                }\n              />\n            ) : null}\n            <div\n              css={applyDividerSize(\n                size,\n                direction,\n                wrap ?? false,\n                index == childrenArray.length - 1,\n              )}\n            >\n              {child}\n            </div>\n          </Fragment>\n        )\n      })}\n    </div>\n  )\n})\n\nSpace.displayName = \"Space\"\n"],"names":["applyContainer","direction","align","wrap","size","cssDirection","css","backStyle","getSpaceSize","applyDividerSizeSingle","isLast","horSpace","verSpace","applyDividerMultiSize","applyDividerSize","Space","forwardRef","props","ref","divider","otherProps","childrenArray","Children","jsx","applyBoxStyle","deleteCssProps","child","index","jsxs","Fragment","Divider"],"mappings":"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"}