{"version":3,"file":"menu.stories-8a5db95b.js","sources":["../../../../packages/menu/src/horizontal/style.ts","../../../../packages/menu/src/menu-context.tsx","../../../../packages/menu/src/horizontal/horizontal-sub-menu.tsx","../../../../packages/menu/src/horizontal/horizontal-menu-item.tsx","../../../../packages/menu/src/horizontal/horizontal-menu.tsx","../../../../packages/menu/src/vertical/style.ts","../../../../packages/menu/src/vertical/vertical-sub-menu.tsx","../../../../packages/menu/src/vertical/vertical-menu-item.tsx","../../../../packages/menu/src/vertical/vertical-menu.tsx","../../../../packages/menu/src/menu.tsx"],"sourcesContent":["import { css, SerializedStyles } from \"@emotion/react\"\nimport { MenuColorScheme, MenuHorizontalAlign } from \"../interface\"\nimport { getColor } from \"@illa-design/theme\"\n\nexport const horizontalMenuContainerStyle = css`\n  height: 48px;\n  position: relative;\n  width: 100%;\n  overflow-x: hidden;\n`\n\nexport function applyHorizontalMenuListContainerStyle(\n  horizontalAlign: MenuHorizontalAlign,\n  isScroll: boolean,\n): SerializedStyles {\n  return css`\n    display: flex;\n    flex-direction: row;\n    justify-content: ${isScroll ? \"flex-start\" : horizontalAlign};\n    overflow-x: auto;\n    height: 100%;\n    width: 100%;\n\n    &::-webkit-scrollbar {\n      display: none;\n    }\n  `\n}\n\nexport function applyActionContainerStyle(\n  action: \"left\" | \"right\",\n): SerializedStyles {\n  const positionStyle =\n    action === \"left\"\n      ? css`\n          left: 0;\n          top: 0;\n          bottom: 0;\n        `\n      : css`\n          right: 0;\n          top: 0;\n          bottom: 0;\n        `\n  const bgStyle =\n    action === \"left\"\n      ? css`\n          mask-image: linear-gradient(90deg, #000 0, transparent);\n        `\n      : css`\n          mask-image: linear-gradient(-90deg, #000 0, transparent);\n        `\n  return css`\n    background: transparent;\n    color: ${getColor(\"grayBlue\", \"02\")};\n    position: absolute;\n    width: 28px;\n    display: inline-flex;\n    cursor: pointer;\n    align-items: center;\n    justify-content: center;\n    ${bgStyle};\n    ${positionStyle};\n  `\n}\n\nexport function applyHorizontalSubMenuItemContainer(\n  colorScheme: MenuColorScheme,\n  selected?: boolean,\n  disabled?: boolean,\n): SerializedStyles {\n  const colorStyle = disabled\n    ? css`\n        color: ${getColor(\"grayBlue\", \"05\")};\n      `\n    : selected\n    ? css`\n        color: ${getColor(colorScheme, \"03\")};\n        font-weight: 500;\n      `\n    : css`\n        color: ${getColor(\"grayBlue\", \"02\")};\n      `\n  return css`\n    cursor: ${disabled ? \"not-allowed\" : \"pointer\"};\n    height: 48px;\n    display: inline-flex;\n    align-items: center;\n    flex-direction: row;\n    ${colorStyle};\n  `\n}\n\nexport function applyHorizontalSubMenuContainer(\n  colorScheme: MenuColorScheme,\n  selected?: boolean,\n  disabled?: boolean,\n): SerializedStyles {\n  const colorStyle = disabled\n    ? css`\n        color: ${getColor(\"grayBlue\", \"05\")};\n      `\n    : selected\n    ? css`\n        color: ${getColor(colorScheme, \"03\")};\n        font-weight: 500;\n\n        &:hover {\n          .horizontalLine {\n            opacity: 1;\n          }\n        }\n      `\n    : css`\n        color: ${getColor(\"grayBlue\", \"02\")};\n\n        &:hover {\n          .horizontalLine {\n            opacity: 1;\n          }\n        }\n      `\n\n  return css`\n    cursor: ${disabled ? \"not-allowed\" : \"pointer\"};\n    position: relative;\n    display: inline-flex;\n    align-items: center;\n    padding: 0 16px;\n    flex-direction: row;\n    ${colorStyle};\n  `\n}\n\nexport function applyHorizontalLine(\n  colorScheme: MenuColorScheme,\n  selected?: boolean,\n  disabled?: boolean,\n): SerializedStyles {\n  const hiddenStyle =\n    selected && !disabled\n      ? css`\n          opacity: 1;\n        `\n      : css`\n          opacity: 0;\n        `\n\n  return css`\n    position: absolute;\n    transition: opacity 0.2s ease-in-out;\n    bottom: 0;\n    height: 2px;\n    left: 0;\n    right: 0;\n    background-color: ${getColor(colorScheme, \"03\")};\n    ${hiddenStyle};\n  `\n}\n\nexport function applyHorizontalSubMenuIcon(\n  onlyShowIcon?: boolean,\n): SerializedStyles {\n  return css`\n  font-size: 14px;\n  display: inline-flex;\n  align-items: center;\n  flex-shrink: 0;\n  justify-content: center;\n  margin-right: ${onlyShowIcon ? \"0\" : \"8px\"}};\n`\n}\n\nexport const horizontalSubMenuLabel = css`\n  overflow-wrap: break-word;\n  word-break: break-all;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  font-size: 14px;\n`\n","import { createContext } from \"react\"\nimport { MenuContextProps } from \"./interface\"\n\nexport const MenuContext = createContext<MenuContextProps>({})\n\nMenuContext.displayName = \"MenuContext\"\n","import { forwardRef, useContext } from \"react\"\nimport { SubMenuProps } from \"../interface\"\nimport {\n  applyHorizontalLine,\n  applyHorizontalSubMenuContainer,\n  applyHorizontalSubMenuIcon,\n  horizontalSubMenuLabel,\n} from \"./style\"\nimport { MenuContext } from \"../menu-context\"\nimport { Dropdown } from \"@illa-design/dropdown\"\nimport { DownIcon } from \"@illa-design/icon\"\nimport { applyBoxStyle, deleteCssProps } from \"@illa-design/theme\"\n\nexport const HorizontalSubMenu = forwardRef<HTMLDivElement, SubMenuProps>(\n  (props, ref) => {\n    const {\n      children,\n      opened,\n      selected,\n      disabled,\n      hidden,\n      icon,\n      label,\n      onVisibleChange,\n      ...otherProps\n    } = props\n\n    const menuContext = useContext(MenuContext)\n    const colorScheme = menuContext?.colorScheme ?? \"blue\"\n    const onlyShowIcon = menuContext?.onlyShowIcon ?? false\n\n    if (hidden) {\n      return null\n    }\n\n    return (\n      <Dropdown\n        trigger=\"hover\"\n        position=\"bottom-start\"\n        popupVisible={opened}\n        disabled={disabled}\n        onVisibleChange={onVisibleChange}\n        dropList={children}\n      >\n        <div\n          css={[\n            applyHorizontalSubMenuContainer(colorScheme, selected, disabled),\n            applyBoxStyle(otherProps),\n          ]}\n          ref={ref}\n          {...deleteCssProps(otherProps)}\n        >\n          {icon && (\n            <span css={applyHorizontalSubMenuIcon(onlyShowIcon)}>{icon}</span>\n          )}\n          {!onlyShowIcon && label && (\n            <span css={horizontalSubMenuLabel}>{label}</span>\n          )}\n          {children && <DownIcon ml=\"8px\" fs=\"14px\" />}\n          <div\n            css={applyHorizontalLine(colorScheme, selected, disabled)}\n            className=\"horizontalLine\"\n          />\n        </div>\n      </Dropdown>\n    )\n  },\n)\n\nHorizontalSubMenu.displayName = \"HorizontalSubMenu\"\n","import { forwardRef, useContext } from \"react\"\nimport { MenuItemProps } from \"../interface\"\nimport { MenuContext } from \"../menu-context\"\nimport {\n  applyHorizontalLine,\n  applyHorizontalSubMenuContainer,\n  applyHorizontalSubMenuIcon,\n  horizontalSubMenuLabel,\n} from \"./style\"\nimport { applyBoxStyle, deleteCssProps } from \"@illa-design/theme\"\n\nexport const HorizontalMenuItem = forwardRef<HTMLDivElement, MenuItemProps>(\n  (props, ref) => {\n    const { selected, disabled, icon, label, value, hidden, ...otherProps } =\n      props\n\n    const menuContext = useContext(MenuContext)\n    const colorScheme = menuContext?.colorScheme ?? \"blue\"\n    const onlyShowIcon = menuContext?.onlyShowIcon ?? false\n\n    if (hidden) {\n      return null\n    }\n\n    return (\n      <div\n        css={[\n          applyHorizontalSubMenuContainer(colorScheme, selected, disabled),\n          applyBoxStyle(otherProps),\n        ]}\n        ref={ref}\n        {...deleteCssProps(otherProps)}\n      >\n        {icon && (\n          <span css={applyHorizontalSubMenuIcon(onlyShowIcon)}>{icon}</span>\n        )}\n        {!onlyShowIcon && label && (\n          <span css={horizontalSubMenuLabel}>{label}</span>\n        )}\n        <div\n          css={applyHorizontalLine(colorScheme, selected, disabled)}\n          className=\"horizontalLine\"\n        />\n      </div>\n    )\n  },\n)\n\nHorizontalMenuItem.displayName = \"HorizontalMenuItem\"\n","import {\n  forwardRef,\n  MouseEvent,\n  ReactNode,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\"\nimport { MenuProps, SubMenuProps } from \"../interface\"\nimport {\n  applyActionContainerStyle,\n  applyHorizontalMenuListContainerStyle,\n  applyHorizontalSubMenuIcon,\n  applyHorizontalSubMenuItemContainer,\n  horizontalMenuContainerStyle,\n  horizontalSubMenuLabel,\n} from \"./style\"\nimport { applyBoxStyle, deleteCssProps } from \"@illa-design/theme\"\nimport { MenuContext } from \"../menu-context\"\nimport { HorizontalSubMenu } from \"./horizontal-sub-menu\"\nimport { HorizontalMenuItem } from \"./horizontal-menu-item\"\nimport { DropList, DropListItem } from \"@illa-design/dropdown\"\nimport { mergeRefs, useMergeValue } from \"@illa-design/system\"\nimport { NextIcon, PreviousIcon } from \"@illa-design/icon\"\nimport { AnimatePresence, motion } from \"framer-motion\"\nimport useMeasure from \"react-use-measure\"\n\nexport const HorizontalMenu = forwardRef<HTMLDivElement, MenuProps>(\n  (props, ref) => {\n    const {\n      defaultOpenedSubMenuValues,\n      defaultSelectedValues,\n      openedSubMenuValues,\n      selectedValues,\n      colorScheme = \"blue\",\n      hoverColorScheme = \"grayBlue\",\n      onClickSubMenu,\n      onClickMenuItem,\n      horizontalAlign = \"flex-start\",\n      items,\n      onMenuSelect,\n      onlyShowIcon,\n      ...otherProps\n    } = props\n\n    const [finalOpenedSubMenuValues, setFinalOpenedSubMenuValues] =\n      useMergeValue<string[]>([], {\n        defaultValue: defaultOpenedSubMenuValues,\n        value: openedSubMenuValues,\n      })\n\n    const [finalSelectedValues, setFinalSelectedValues] = useMergeValue<\n      string[]\n    >([], {\n      defaultValue: defaultSelectedValues,\n      value: selectedValues,\n    })\n\n    const defaultSelectedSubMenu: string[] = []\n    const selectedSubMenu: string[] = []\n\n    items?.forEach((item) => {\n      if (\"children\" in item || \"subItems\" in item || \"opened\" in item) {\n        const subMenu = item as SubMenuProps\n        subMenu.subItems?.forEach((subItem) => {\n          if (defaultSelectedValues?.includes(subItem.value)) {\n            defaultSelectedSubMenu.push(subMenu.value)\n          }\n          if (selectedValues?.includes(subItem.value)) {\n            selectedSubMenu.push(subMenu.value)\n          }\n        })\n      }\n    })\n\n    const [finalSelectedSubMenu, setFinalSelectedSubMenu] = useMergeValue<\n      string[]\n    >([], {\n      defaultValue: defaultSelectedValues ? defaultSelectedSubMenu : undefined,\n      value: selectedValues ? selectedSubMenu : undefined,\n    })\n\n    const [leftScroll, setLeftScroll] = useState<boolean>(false)\n    const [rightScroll, setRightScroll] = useState<boolean>(false)\n\n    const containerRef = useRef<HTMLDivElement>(null)\n\n    const [containerBoundRef, containerBound] = useMeasure()\n\n    useEffect(() => {\n      if (containerRef.current) {\n        const { scrollWidth, clientWidth, scrollLeft } = containerRef.current\n        if (\n          clientWidth < scrollWidth &&\n          scrollLeft + clientWidth < scrollWidth\n        ) {\n          setRightScroll(true)\n        } else {\n          setRightScroll(false)\n        }\n      }\n    }, [containerBound.width, rightScroll])\n\n    const c: ReactNode[] | undefined = items?.map((item, index, array) => {\n      if (\"children\" in item || \"subItems\" in item || \"opened\" in item) {\n        const subMenu = item as SubMenuProps\n\n        const subItems = subMenu.subItems?.map((subItem, index, array) => {\n          return (\n            <DropListItem\n              value={subItem.value}\n              key={subItem.value}\n              hoverColorScheme={hoverColorScheme}\n              disabled={subItem.disabled}\n              hidden={subItem.hidden}\n              title={\n                <div\n                  css={applyHorizontalSubMenuItemContainer(\n                    colorScheme,\n                    subItem.selected ??\n                      finalSelectedValues.some((v) => v === subItem.value),\n                    subItem.disabled,\n                  )}\n                >\n                  {subItem.icon && (\n                    <span css={applyHorizontalSubMenuIcon(onlyShowIcon)}>\n                      {subItem.icon}\n                    </span>\n                  )}\n                  {subItem.label && (\n                    <span css={horizontalSubMenuLabel}>{subItem.label}</span>\n                  )}\n                </div>\n              }\n            />\n          )\n        })\n\n        return (\n          <HorizontalSubMenu\n            ml={index !== 0 ? \"16px\" : \"0\"}\n            key={subMenu.value}\n            value={subMenu.value}\n            icon={subMenu.icon}\n            label={subMenu.label}\n            disabled={subMenu.disabled}\n            hidden={subMenu.hidden}\n            selected={\n              subMenu.selected ??\n              finalSelectedSubMenu.some((v) => v === subMenu.value)\n            }\n            opened={\n              subMenu.opened ??\n              finalOpenedSubMenuValues.some((v) => v === subMenu.value)\n            }\n            onVisibleChange={(opened) => {\n              if (openedSubMenuValues === undefined) {\n                if (opened) {\n                  if (!finalOpenedSubMenuValues.includes(subMenu.value)) {\n                    setFinalOpenedSubMenuValues([\n                      ...finalOpenedSubMenuValues,\n                      subMenu.value,\n                    ])\n                  }\n                } else {\n                  setFinalOpenedSubMenuValues(\n                    finalOpenedSubMenuValues.filter((v) => v !== subMenu.value),\n                  )\n                }\n              }\n            }}\n            onClick={() => {\n              if (subMenu.disabled) return\n              const openedSet = new Set([\n                ...items\n                  ?.filter((i) => \"opened\" in i && i.opened === true)\n                  .map((i) => i.value),\n                ...finalOpenedSubMenuValues,\n              ])\n              onClickSubMenu?.(subMenu.value, [...openedSet], [item.value])\n            }}\n          >\n            <DropList\n              w=\"100%\"\n              onClickItem={(\n                value: string | number,\n                clickedNode: ReactNode,\n                event: MouseEvent,\n              ) => {\n                onClickMenuItem?.(\n                  value as string,\n                  [item.value, value as string],\n                  event,\n                )\n                if (!finalSelectedValues.includes(value as string)) {\n                  if (selectedValues === undefined) {\n                    setFinalSelectedValues([value as string])\n                  }\n                  onMenuSelect?.(\n                    value as string,\n                    [subMenu.value, value as string],\n                    [value as string],\n                  )\n                }\n                if (!finalSelectedSubMenu.includes(item.value)) {\n                  if (selectedValues === undefined) {\n                    setFinalSelectedSubMenu([item.value])\n                  }\n                }\n              }}\n            >\n              {subItems}\n            </DropList>\n          </HorizontalSubMenu>\n        )\n      } else {\n        return (\n          <HorizontalMenuItem\n            ml={index !== 0 ? \"16px\" : \"0\"}\n            key={item.value}\n            value={item.value}\n            icon={item.icon}\n            label={item.label}\n            disabled={item.disabled}\n            hidden={item.hidden}\n            selected={\n              item.selected ?? finalSelectedValues.some((v) => v === item.value)\n            }\n            onClick={(e) => {\n              if (item.disabled) return\n              onClickMenuItem?.(item.value, [item.value], e)\n              if (!finalSelectedValues.includes(item.value)) {\n                if (selectedValues === undefined) {\n                  setFinalSelectedValues([item.value])\n                  setFinalSelectedSubMenu([])\n                }\n                onMenuSelect?.(item.value, [item.value], [item.value])\n              }\n            }}\n          />\n        )\n      }\n    })\n\n    return (\n      <MenuContext.Provider\n        value={{\n          colorScheme,\n          hoverColorScheme,\n          onlyShowIcon,\n        }}\n      >\n        <div\n          css={[horizontalMenuContainerStyle, applyBoxStyle(otherProps)]}\n          ref={mergeRefs(ref, containerBoundRef)}\n          {...deleteCssProps(otherProps)}\n        >\n          <div\n            ref={containerRef}\n            css={applyHorizontalMenuListContainerStyle(\n              horizontalAlign,\n              leftScroll || rightScroll,\n            )}\n            onScroll={(event) => {\n              if (event.currentTarget.scrollLeft > 0) {\n                if (!leftScroll) {\n                  setLeftScroll(true)\n                }\n              } else {\n                if (leftScroll) {\n                  setLeftScroll(false)\n                }\n              }\n              if (\n                event.currentTarget.scrollLeft +\n                  event.currentTarget.clientWidth >=\n                event.currentTarget.scrollWidth\n              ) {\n                if (rightScroll) {\n                  setRightScroll(false)\n                }\n              }\n              if (\n                event.currentTarget.clientWidth <\n                event.currentTarget.scrollWidth\n              ) {\n                if (!rightScroll) {\n                  setRightScroll(true)\n                }\n              }\n            }}\n          >\n            {c}\n          </div>\n          <AnimatePresence initial={false}>\n            {leftScroll && (\n              <motion.div\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ duration: 0.2 }}\n                exit={{ opacity: 0 }}\n                css={applyActionContainerStyle(\"left\")}\n                onClick={() => {\n                  if (containerRef.current) {\n                    containerRef.current?.scrollBy({\n                      left: -containerRef.current.clientWidth,\n                      behavior: \"smooth\",\n                    })\n                  }\n                }}\n              >\n                <PreviousIcon />\n              </motion.div>\n            )}\n          </AnimatePresence>\n          <AnimatePresence initial={false}>\n            {rightScroll && (\n              <motion.div\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ duration: 0.2 }}\n                exit={{ opacity: 0 }}\n                css={applyActionContainerStyle(\"right\")}\n                onClick={() => {\n                  if (containerRef.current) {\n                    containerRef.current?.scrollBy({\n                      left: containerRef.current.clientWidth,\n                      behavior: \"smooth\",\n                    })\n                  }\n                }}\n              >\n                <NextIcon />\n              </motion.div>\n            )}\n          </AnimatePresence>\n        </div>\n      </MenuContext.Provider>\n    )\n  },\n)\n\nHorizontalMenu.displayName = \"HorizontalMenu\"\n","import { css, SerializedStyles } from \"@emotion/react\"\nimport { MenuColorScheme } from \"../interface\"\nimport { getColor } from \"@illa-design/theme\"\n\nexport function applyVerticalListContainer(): SerializedStyles {\n  return css`\n    display: flex;\n    width: 100%;\n    overflow: hidden;\n    flex-direction: column;\n  `\n}\n\nexport function applyVerticalSubMenuContentContainer(\n  colorScheme: MenuColorScheme,\n  hoverColorScheme: MenuColorScheme,\n  selected?: boolean,\n  disabled?: boolean,\n): SerializedStyles {\n  const colorStyle = disabled\n    ? css`\n        color: ${getColor(\"grayBlue\", \"05\")};\n      `\n    : selected\n    ? css`\n        color: ${getColor(colorScheme, \"03\")};\n        font-weight: 500;\n\n        &:hover {\n          background-color: ${getColor(hoverColorScheme, \"09\")};\n        }\n      `\n    : css`\n        color: ${getColor(\"grayBlue\", \"02\")};\n\n        &:hover {\n          background-color: ${getColor(hoverColorScheme, \"09\")};\n        }\n      `\n\n  return css`\n    cursor: ${disabled ? \"not-allowed\" : \"pointer\"};\n    display: inline-flex;\n    box-sizing: border-box;\n    align-items: center;\n    width: 100%;\n    height: 48px;\n    padding: 0 24px;\n    flex-direction: row;\n    ${colorStyle};\n  `\n}\n\nexport function applyVerticalMenuItemContainer(\n  colorScheme: MenuColorScheme,\n  hoverColorScheme: MenuColorScheme,\n  selected?: boolean,\n  disabled?: boolean,\n  sub?: boolean,\n): SerializedStyles {\n  const colorStyle = disabled\n    ? css`\n        color: ${getColor(\"grayBlue\", \"05\")};\n      `\n    : selected\n    ? css`\n        color: ${getColor(colorScheme, \"03\")};\n        font-weight: 500;\n\n        &:hover {\n          background-color: ${getColor(hoverColorScheme, \"09\")};\n        }\n      `\n    : css`\n        color: ${getColor(\"grayBlue\", \"02\")};\n\n        &:hover {\n          background-color: ${getColor(hoverColorScheme, \"09\")};\n        }\n      `\n\n  const paddingStyle = sub\n    ? css`\n        padding: 0 24px 0 40px;\n      `\n    : css`\n        padding: 0 24px 0 24px;\n      `\n\n  return css`\n    cursor: ${disabled ? \"not-allowed\" : \"pointer\"};\n    display: inline-flex;\n    box-sizing: border-box;\n    align-items: center;\n    width: 100%;\n    padding: 0 24px 0 40px;\n    height: 48px;\n    flex-direction: row;\n    ${colorStyle};\n    ${paddingStyle};\n  `\n}\n\nexport const verticalDivider = css`\n  flex-grow: 1;\n`\n\nexport const verticalSubMenuIcon = css`\n  font-size: 14px;\n  flex-shrink: 0;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 8px;\n`\n\nexport const verticalSubMenuLabel = css`\n  overflow-wrap: break-word;\n  overflow: hidden;\n  word-break: break-all;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  font-size: 14px;\n  flex-shrink: 1;\n`\n\nexport const verticalMenuContainerStyle = css`\n  display: flex;\n  padding: 8px 0;\n  overflow-y: hidden;\n  border-radius: 2px;\n  width: 200px;\n  flex-direction: column;\n`\n\nexport function applyVerticalSubMenuItemContainer(\n  colorScheme: MenuColorScheme,\n  selected?: boolean,\n  disabled?: boolean,\n): SerializedStyles {\n  const colorStyle = disabled\n    ? css`\n        color: ${getColor(\"grayBlue\", \"05\")};\n      `\n    : selected\n    ? css`\n        color: ${getColor(colorScheme, \"03\")};\n        font-weight: 500;\n      `\n    : css`\n        color: ${getColor(\"grayBlue\", \"02\")};\n      `\n  return css`\n    cursor: ${disabled ? \"not-allowed\" : \"pointer\"};\n    height: 48px;\n    display: inline-flex;\n    align-items: center;\n    flex-direction: row;\n    ${colorStyle};\n  `\n}\n","import { forwardRef, useContext } from \"react\"\nimport { SubMenuProps } from \"../interface\"\nimport { MenuContext } from \"../menu-context\"\nimport {\n  applyVerticalListContainer,\n  applyVerticalSubMenuContentContainer,\n  verticalDivider,\n  verticalSubMenuIcon,\n  verticalSubMenuLabel,\n} from \"./style\"\nimport { deleteCssProps } from \"@illa-design/theme\"\nimport { DownIcon, UpIcon } from \"@illa-design/icon\"\nimport { AnimatePresence, motion } from \"framer-motion\"\n\nexport const VerticalSubMenu = forwardRef<HTMLDivElement, SubMenuProps>(\n  (props, ref) => {\n    const {\n      children,\n      opened,\n      selected,\n      disabled,\n      icon,\n      label,\n      hidden,\n      onVisibleChange,\n      ...otherProps\n    } = props\n\n    const menuContext = useContext(MenuContext)\n    const colorScheme = menuContext?.colorScheme ?? \"blue\"\n    const hoverColorScheme = menuContext?.hoverColorScheme ?? \"grayBlue\"\n\n    if (hidden) {\n      return null\n    }\n\n    return (\n      <>\n        <div\n          css={applyVerticalSubMenuContentContainer(\n            colorScheme,\n            hoverColorScheme,\n            selected,\n            disabled,\n          )}\n          ref={ref}\n          {...deleteCssProps(otherProps)}\n        >\n          {icon && <span css={verticalSubMenuIcon}>{icon}</span>}\n          {label && <span css={verticalSubMenuLabel}>{label}</span>}\n          <div css={verticalDivider} />\n          {children && opened ? (\n            <UpIcon flexShrink=\"0\" ml=\"8px\" fs=\"14px\" />\n          ) : (\n            <DownIcon flexShrink=\"0\" ml=\"8px\" fs=\"14px\" />\n          )}\n        </div>\n        <AnimatePresence>\n          {opened && (\n            <motion.div\n              css={applyVerticalListContainer()}\n              initial={{ height: 0 }}\n              animate={{ height: \"auto\" }}\n              transition={{ duration: 0.2 }}\n              exit={{ height: 0 }}\n            >\n              {children}\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </>\n    )\n  },\n)\n\nVerticalSubMenu.displayName = \"VerticalSubMenu\"\n","import { forwardRef, useContext } from \"react\"\nimport { MenuItemProps, VerticalMenuItemProps } from \"../interface\"\nimport { MenuContext } from \"../menu-context\"\nimport { applyBoxStyle, deleteCssProps } from \"@illa-design/theme\"\nimport {\n  applyVerticalMenuItemContainer,\n  verticalSubMenuIcon,\n  verticalSubMenuLabel,\n} from \"./style\"\n\nexport const VerticalMenuItem = forwardRef<\n  HTMLDivElement,\n  VerticalMenuItemProps\n>((props, ref) => {\n  const { selected, disabled, icon, label, value, sub, hidden, ...otherProps } =\n    props\n\n  const menuContext = useContext(MenuContext)\n  const colorScheme = menuContext?.colorScheme ?? \"blue\"\n  const hoverColorScheme = menuContext?.hoverColorScheme ?? \"grayBlue\"\n\n  if (hidden) {\n    return null\n  }\n\n  return (\n    <div\n      css={[\n        applyVerticalMenuItemContainer(\n          colorScheme,\n          hoverColorScheme,\n          selected,\n          disabled,\n          sub,\n        ),\n        applyBoxStyle(otherProps),\n      ]}\n      ref={ref}\n      {...deleteCssProps(otherProps)}\n    >\n      {icon && <span css={verticalSubMenuIcon}>{icon}</span>}\n      {label && <span css={verticalSubMenuLabel}>{label}</span>}\n    </div>\n  )\n})\n\nVerticalMenuItem.displayName = \"VerticalMenuItem\"\n","import { forwardRef, ReactNode } from \"react\"\nimport { MenuProps, SubMenuProps } from \"../interface\"\nimport { useMergeValue } from \"@illa-design/system\"\nimport { MenuContext } from \"../menu-context\"\nimport { applyBoxStyle, deleteCssProps } from \"@illa-design/theme\"\nimport {\n  applyVerticalSubMenuItemContainer,\n  verticalMenuContainerStyle,\n  verticalSubMenuIcon,\n  verticalSubMenuLabel,\n} from \"./style\"\nimport { VerticalSubMenu } from \"./vertical-sub-menu\"\nimport { VerticalMenuItem } from \"./vertical-menu-item\"\n\nexport const VerticalMenu = forwardRef<HTMLDivElement, MenuProps>(\n  (props, ref) => {\n    const {\n      defaultOpenedSubMenuValues,\n      defaultSelectedValues,\n      hoverColorScheme = \"grayBlue\",\n      openedSubMenuValues,\n      selectedValues,\n      horizontalAlign,\n      colorScheme = \"blue\",\n      onClickSubMenu,\n      onClickMenuItem,\n      items,\n      onMenuSelect,\n      onlyShowIcon,\n      ...otherProps\n    } = props\n\n    const [finalOpenedSubMenuValues, setFinalOpenedSubMenuValues] =\n      useMergeValue<string[]>([], {\n        defaultValue: defaultOpenedSubMenuValues,\n        value: openedSubMenuValues,\n      })\n\n    const [finalSelectedValues, setFinalSelectedValues] = useMergeValue<\n      string[]\n    >([], {\n      defaultValue: defaultSelectedValues,\n      value: selectedValues,\n    })\n\n    const defaultSelectedSubMenu: string[] = []\n    const selectedSubMenu: string[] = []\n\n    items?.forEach((item) => {\n      if (\"children\" in item || \"subItems\" in item || \"opened\" in item) {\n        const subMenu = item as SubMenuProps\n        subMenu.subItems?.forEach((subItem) => {\n          if (defaultSelectedValues?.includes(subItem.value)) {\n            defaultSelectedSubMenu.push(subMenu.value)\n          }\n          if (selectedValues?.includes(subItem.value)) {\n            selectedSubMenu.push(subMenu.value)\n          }\n        })\n      }\n    })\n\n    const [finalSelectedSubMenu, setFinalSelectedSubMenu] = useMergeValue<\n      string[]\n    >([], {\n      defaultValue: defaultSelectedValues ? defaultSelectedSubMenu : undefined,\n      value: selectedValues ? selectedSubMenu : undefined,\n    })\n\n    const c: ReactNode[] | undefined = items?.map((item, index, array) => {\n      if (\"children\" in item || \"subItems\" in item || \"opened\" in item) {\n        const subMenu = item as SubMenuProps\n\n        const subItems = subMenu.subItems?.map((subItem, index, array) => {\n          return (\n            <VerticalMenuItem\n              value={subItem.value}\n              key={subItem.value}\n              sub={true}\n              disabled={subItem.disabled}\n              hidden={subItem.hidden}\n              onClick={(e) => {\n                if (subItem.disabled) return\n                onClickMenuItem?.(\n                  subItem.value,\n                  [subMenu.value, subItem.value],\n                  e,\n                )\n                if (!finalSelectedValues.includes(subItem.value)) {\n                  if (selectedValues === undefined) {\n                    setFinalSelectedValues([subItem.value])\n                  }\n                  onMenuSelect?.(\n                    subItem.value,\n                    [subMenu.value, subItem.value],\n                    [subItem.value],\n                  )\n                }\n                if (!finalSelectedSubMenu.includes(subMenu.value)) {\n                  if (selectedValues === undefined) {\n                    setFinalSelectedSubMenu([subMenu.value])\n                  }\n                }\n              }}\n              label={\n                <div\n                  css={applyVerticalSubMenuItemContainer(\n                    colorScheme,\n                    subItem.selected ??\n                      finalSelectedValues.some((v) => v === subItem.value),\n                    subItem.disabled,\n                  )}\n                >\n                  {subItem.icon && (\n                    <span css={verticalSubMenuIcon}>{subItem.icon}</span>\n                  )}\n                  {subItem.label && (\n                    <span css={verticalSubMenuLabel}>{subItem.label}</span>\n                  )}\n                </div>\n              }\n            />\n          )\n        })\n\n        return (\n          <VerticalSubMenu\n            key={subMenu.value}\n            value={subMenu.value}\n            icon={subMenu.icon}\n            label={subMenu.label}\n            disabled={subMenu.disabled}\n            hidden={subMenu.hidden}\n            selected={\n              subMenu.selected ??\n              finalSelectedSubMenu.some((v) => v === subMenu.value)\n            }\n            opened={\n              subMenu.opened ??\n              finalOpenedSubMenuValues.some((v) => v === subMenu.value)\n            }\n            onClick={() => {\n              if (subMenu.disabled) return\n              const openedSet = new Set([\n                ...items\n                  ?.filter((i) => \"opened\" in i && i.opened === true)\n                  .map((i) => i.value),\n                ...finalOpenedSubMenuValues,\n              ])\n              onClickSubMenu?.(subMenu.value, [...openedSet], [item.value])\n              if (openedSubMenuValues === undefined) {\n                if (!finalOpenedSubMenuValues.includes(subMenu.value)) {\n                  setFinalOpenedSubMenuValues([\n                    ...finalOpenedSubMenuValues,\n                    subMenu.value,\n                  ])\n                } else {\n                  setFinalOpenedSubMenuValues(\n                    finalOpenedSubMenuValues.filter((v) => v !== subMenu.value),\n                  )\n                }\n              }\n            }}\n          >\n            {subItems}\n          </VerticalSubMenu>\n        )\n      } else {\n        return (\n          <VerticalMenuItem\n            key={item.value}\n            value={item.value}\n            icon={item.icon}\n            label={item.label}\n            sub={false}\n            disabled={item.disabled}\n            hidden={item.hidden}\n            selected={\n              item.selected ?? finalSelectedValues.some((v) => v === item.value)\n            }\n            onClick={(e) => {\n              if (item.disabled) return\n              onClickMenuItem?.(item.value, [item.value], e)\n\n              if (!finalSelectedValues.includes(item.value)) {\n                if (selectedValues === undefined) {\n                  setFinalSelectedValues([item.value])\n                  setFinalSelectedSubMenu([])\n                }\n                onMenuSelect?.(item.value, [item.value], [item.value])\n              }\n            }}\n          />\n        )\n      }\n    })\n\n    return (\n      <MenuContext.Provider\n        value={{\n          colorScheme,\n          hoverColorScheme,\n          onlyShowIcon,\n        }}\n      >\n        <div\n          css={[verticalMenuContainerStyle, applyBoxStyle(otherProps)]}\n          ref={ref}\n          {...deleteCssProps(otherProps)}\n        >\n          {c}\n        </div>\n      </MenuContext.Provider>\n    )\n  },\n)\n\nVerticalMenu.displayName = \"VerticalMenu\"\n","import { forwardRef } from \"react\"\nimport { MenuProps } from \"./interface\"\nimport { HorizontalMenu } from \"./horizontal/horizontal-menu\"\nimport { VerticalMenu } from \"./vertical/vertical-menu\"\n\nexport const Menu = forwardRef<HTMLDivElement, MenuProps>((props, ref) => {\n  const { mode = \"horizontal\" } = props\n\n  switch (mode) {\n    case \"horizontal\":\n      return <HorizontalMenu ref={ref} {...props} />\n    case \"vertical\":\n      return <VerticalMenu ref={ref} {...props} />\n  }\n  return <></>\n})\n\nMenu.displayName = \"Menu\"\n"],"names":["horizontalMenuContainerStyle","css","applyHorizontalMenuListContainerStyle","horizontalAlign","isScroll","applyActionContainerStyle","action","positionStyle","bgStyle","getColor","applyHorizontalSubMenuItemContainer","colorScheme","selected","disabled","colorStyle","applyHorizontalSubMenuContainer","applyHorizontalLine","hiddenStyle","applyHorizontalSubMenuIcon","onlyShowIcon","horizontalSubMenuLabel","MenuContext","createContext","HorizontalSubMenu","forwardRef","props","ref","children","opened","hidden","icon","label","onVisibleChange","otherProps","menuContext","useContext","jsx","Dropdown","jsxs","applyBoxStyle","deleteCssProps","DownIcon","HorizontalMenuItem","value","HorizontalMenu","defaultOpenedSubMenuValues","defaultSelectedValues","openedSubMenuValues","selectedValues","hoverColorScheme","onClickSubMenu","onClickMenuItem","items","onMenuSelect","finalOpenedSubMenuValues","setFinalOpenedSubMenuValues","useMergeValue","finalSelectedValues","setFinalSelectedValues","defaultSelectedSubMenu","selectedSubMenu","item","subMenu","_a","subItem","finalSelectedSubMenu","setFinalSelectedSubMenu","leftScroll","setLeftScroll","useState","rightScroll","setRightScroll","containerRef","useRef","containerBoundRef","containerBound","useMeasure","useEffect","scrollWidth","clientWidth","scrollLeft","c","index","array","subItems","index2","array2","DropListItem","v","openedSet","i","DropList","clickedNode","event","e","mergeRefs","AnimatePresence","motion","PreviousIcon","NextIcon","applyVerticalListContainer","applyVerticalSubMenuContentContainer","applyVerticalMenuItemContainer","sub","paddingStyle","verticalDivider","verticalSubMenuIcon","verticalSubMenuLabel","verticalMenuContainerStyle","applyVerticalSubMenuItemContainer","VerticalSubMenu","Fragment","UpIcon","VerticalMenuItem","VerticalMenu","Menu","mode"],"mappings":"2pCAIO,MAAMA,GAA+BC;AAAA;AAAA;AAAA;AAAA;AAAA,EAO5B,SAAAC,GACdC,EACAC,EACkB,CACX,OAAAH;AAAA;AAAA;AAAA,uBAGcG,EAAW,aAAeD,CAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAShE,CAEO,SAASE,GACdC,EACkB,CACZ,MAAAC,EACJD,IAAW,OACPL;AAAA;AAAA;AAAA;AAAA,UAKAA;AAAA;AAAA;AAAA;AAAA,UAKAO,EACJF,IAAW,OACPL;AAAA;AAAA,UAGAA;AAAA;AAAA,UAGC,OAAAA;AAAA;AAAA,aAEIQ,EAAS,WAAY,IAAI,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOjCD,CAAO;AAAA,MACPD,CAAa;AAAA,GAEnB,CAEgB,SAAAG,GACdC,EACAC,EACAC,EACkB,CAClB,MAAMC,EAAaD,EACfZ;AAAA,iBACWQ,EAAS,WAAY,IAAI,CAAC;AAAA,QAErCG,EACAX;AAAA,iBACWQ,EAASE,EAAa,IAAI,CAAC;AAAA;AAAA,QAGtCV;AAAA,iBACWQ,EAAS,WAAY,IAAI,CAAC;AAAA,QAElC,OAAAR;AAAA,cACKY,EAAW,cAAgB,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,MAK5CC,CAAU;AAAA,GAEhB,CAEgB,SAAAC,GACdJ,EACAC,EACAC,EACkB,CAClB,MAAMC,EAAaD,EACfZ;AAAA,iBACWQ,EAAS,WAAY,IAAI,CAAC;AAAA,QAErCG,EACAX;AAAA,iBACWQ,EAASE,EAAa,IAAI,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAStCV;AAAA,iBACWQ,EAAS,WAAY,IAAI,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASlC,OAAAR;AAAA,cACKY,EAAW,cAAgB,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAM5CC,CAAU;AAAA,GAEhB,CAEgB,SAAAE,GACdL,EACAC,EACAC,EACkB,CACZ,MAAAI,EACJL,GAAY,CAACC,EACTZ;AAAA;AAAA,UAGAA;AAAA;AAAA,UAIC,OAAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAOeQ,EAASE,EAAa,IAAI,CAAC;AAAA,MAC7CM,CAAW;AAAA,GAEjB,CAEO,SAASC,GACdC,EACkB,CACX,OAAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMSkB,EAAe,IAAM,KAAK;AAAA,CAE5C,CAEO,MAAMC,GAAyBnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EC1KzBoB,EAAcC,EAAAA,cAAgC,CAAA,CAAE,EAE7DD,EAAY,YAAc,cCQnB,MAAAE,EAAAC,EAAA,WAA0B,CAAAC,EAAAC,IAAA,CAE7B,KAAA,CAAM,SAAAC,EACJ,OAAAC,EACA,SAAAhB,EACA,SAAAC,EACA,OAAAgB,EACA,KAAAC,EACA,MAAAC,EACA,gBAAAC,EACA,GAAAC,CACG,EAAAR,EAGLS,EAAAC,aAAAd,CAAA,EACAV,GAAAuB,GAAA,YAAAA,EAAA,cAAA,OACAf,GAAAe,GAAA,YAAAA,EAAA,eAAA,GAEA,OAAAL,EACE,KAGFO,EACEC,GAAC,CAAA,QAAA,QACS,SAAA,eACC,aAAAT,EACK,SAAAf,EACd,gBAAAmB,EACA,SAAAL,EACU,SAAAW,EAEV,MAAC,CAAA,IAAA,CACMvB,GAAAJ,EAAAC,EAAAC,CAAA,EAC4D0B,EAAAN,CAAA,CACvC,EAC1B,IAAAP,EACA,GAAAc,EAAAP,CAAA,EAC6B,SAAA,CAE5BH,GAAAM,EAAA,OAAA,CAAA,IAAAlB,GAAAC,CAAA,EAAA,SAAAW,EAAA,EAC4D,CAAAX,GAAAY,GAAAK,EAAA,OAAA,CAAA,IAAAhB,GAAA,SAAAW,EAAA,EAGjBJ,GAAAS,EAAAK,GAAA,CAAA,GAAA,MAAA,GAAA,OAAA,EAEFL,EAC1C,MAAC,CAAA,IAAApB,GAAAL,EAAAC,EAAAC,CAAA,EACyD,UAAA,gBAC9C,CAAA,CACZ,CAAA,CAAA,CACF,CAAA,CACF,CAGN,EAEAU,EAAA,YAAA,+8MC1DO,MAAAmB,GAAAlB,EAAA,WAA2B,CAAAC,EAAAC,IAAA,CAE9B,KAAA,CAAA,SAAAd,EAAA,SAAAC,EAAA,KAAAiB,EAAA,MAAAC,EAAA,MAAAY,EAAA,OAAAd,EAAA,GAAAI,CAAA,EAAAR,EAGAS,EAAAC,aAAAd,CAAA,EACAV,GAAAuB,GAAA,YAAAA,EAAA,cAAA,OACAf,GAAAe,GAAA,YAAAA,EAAA,eAAA,GAEA,OAAAL,EACE,KAGFS,EACE,MAAC,CAAA,IAAA,CACMvB,GAAAJ,EAAAC,EAAAC,CAAA,EAC4D0B,EAAAN,CAAA,CACvC,EAC1B,IAAAP,EACA,GAAAc,EAAAP,CAAA,EAC6B,SAAA,CAE5BH,GAAAM,EAAA,OAAA,CAAA,IAAAlB,GAAAC,CAAA,EAAA,SAAAW,EAAA,EAC4D,CAAAX,GAAAY,GAAAK,EAAA,OAAA,CAAA,IAAAhB,GAAA,SAAAW,EAAA,EAGjBK,EAE5C,MAAC,CAAA,IAAApB,GAAAL,EAAAC,EAAAC,CAAA,EACyD,UAAA,gBAC9C,CAAA,CACZ,CAAA,CAAA,CACF,CAGN,EAEA6B,GAAA,YAAA,qpMCrBO,MAAAE,GAAApB,EAAA,WAAuB,CAAAC,EAAAC,IAAA,CAE1B,KAAA,CAAM,2BAAAmB,EACJ,sBAAAC,EACA,oBAAAC,EACA,eAAAC,EACA,YAAArC,EAAA,OACc,iBAAAsC,EAAA,WACK,eAAAC,EACnB,gBAAAC,EACA,gBAAAhD,EAAA,aACkB,MAAAiD,EAClB,aAAAC,EACA,aAAAlC,EACA,GAAAc,CACG,EAAAR,EAGL,CAAA6B,EAAAC,CAAA,EAAAC,EAAA,CAAA,EAAA,CAC8B,aAAAX,EACZ,MAAAE,CACP,CAAA,EAGX,CAAAU,EAAAC,CAAA,EAAAF,EAAA,CAAA,EAAA,CAEM,aAAAV,EACU,MAAAE,CACP,CAAA,EAGTW,EAAA,CAAA,EACAC,EAAA,CAAA,EAEAR,GAAA,MAAAA,EAAA,QAAAS,GAAA,OACE,GAAA,aAAAA,GAAA,aAAAA,GAAA,WAAAA,EAAA,CACE,MAAAC,EAAAD,GACAE,EAAAD,EAAA,WAAA,MAAAC,EAAA,QAAAC,GAAA,CACElB,GAAA,MAAAA,EAAA,SAAAkB,EAAA,QACEL,EAAA,KAAAG,EAAA,KAAA,EAEFd,GAAA,MAAAA,EAAA,SAAAgB,EAAA,QACEJ,EAAA,KAAAE,EAAA,KAAA,CACF,EACD,CACH,GAGF,KAAA,CAAAG,EAAAC,CAAA,EAAAV,EAAA,CAAA,EAAA,CAEM,aAAAV,EAAAa,EAAA,OAC2D,MAAAX,EAAAY,EAAA,MACrB,CAAA,EAG5C,CAAAO,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,EAAA,SAAA,EAAA,EAEAG,EAAAC,SAAA,IAAA,EAEA,CAAAC,EAAAC,EAAA,EAAAC,GAAA,EAEAC,EAAAA,UAAA,IAAA,CACE,GAAAL,EAAA,QAAA,CACE,KAAA,CAAA,YAAAM,EAAA,YAAAC,EAAA,WAAAC,CAAA,EAAAR,EAAA,QACAO,EAAAD,GAAAE,EAAAD,EAAAD,EAIEP,EAAA,EAAA,EAEAA,EAAA,EAAA,CACF,CACF,EAAA,CAAAI,GAAA,MAAAL,CAAA,CAAA,EAGF,MAAAW,EAAA7B,GAAA,YAAAA,EAAA,IAAA,CAAAS,EAAAqB,EAAAC,IAAA,OACE,GAAA,aAAAtB,GAAA,aAAAA,GAAA,WAAAA,EAAA,CACE,MAAAC,EAAAD,EAEAuB,IAAArB,EAAAD,EAAA,WAAA,YAAAC,EAAA,IAAA,CAAAC,EAAAqB,EAAAC,KACElD,EACEmD,GAAC,CAAA,MAAAvB,EAAA,MACgB,iBAAAf,EAEf,SAAAe,EAAA,SACkB,OAAAA,EAAA,OACF,MAAA1B,EAEd,MAAC,CAAA,IAAA5B,GACMC,EACHqD,EAAA,UAAAP,EAAA,KAAA+B,IAAAA,KAAAxB,EAAA,KAAA,EAEqDA,EAAA,QAC7C,EACV,SAAA,CAECA,EAAA,MAAA5B,EAAA,OAAA,CAAA,IAAAlB,GAAAC,CAAA,EAAA,SAAA6C,EAAA,IAAA,CAAA,EAGCA,EAAA,OAAA5B,EAAA,OAAA,CAAA,IAAAhB,GAAA,SAAA4C,EAAA,MAAA,CAGkD,CAAA,CAAA,CAEtD,EAAAA,EAAA,KArBW,GA2BnB,OAAA5B,EACEb,EAAC,CAAA,GAAA2D,IAAA,EAAA,OAAA,IAC4B,MAAApB,EAAA,MAEZ,KAAAA,EAAA,KACD,MAAAA,EAAA,MACC,SAAAA,EAAA,SACG,OAAAA,EAAA,OACF,SAAAA,EAAA,UAAAG,EAAA,KAAAuB,GAAAA,IAAA1B,EAAA,KAAA,EAGsC,OAAAA,EAAA,QAAAR,EAAA,KAAAkC,GAAAA,IAAA1B,EAAA,KAAA,EAII,gBAAAlC,GAAA,CAGxDmB,IAAA,SACEnB,EACE0B,EAAA,SAAAQ,EAAA,KAAA,GACEP,EAAA,CAA4B,GAAAD,EACvBQ,EAAA,KACK,CAAA,EAIZP,EAAAD,EAAA,OAAAkC,GAAAA,IAAA1B,EAAA,KAAA,CAC4D,EAGhE,EACF,QAAA,IAAA,CAEE,GAAAA,EAAA,SAAsB,OACtB,MAAA2B,EAAA,IAAA,IAAA,CAA0B,GAAArC,GAAA,YAAAA,EAAA,OAAAsC,GAAA,WAAAA,GAAAA,EAAA,SAAA,IAAA,IAAAA,GAAAA,EAAA,OAGH,GAAApC,CAClB,CAAA,EAELJ,GAAA,MAAAA,EAAAY,EAAA,MAAA,CAAA,GAAA2B,CAAA,EAAA,CAAA5B,EAAA,KAAA,EAA4D,EAC9D,SAAAzB,EAEAuD,GAAC,CAAA,EAAA,OACG,YAAA,CAAAhD,EAAAiD,EAAAC,KAAA,CAMA1C,GAAA,MAAAA,EAAAR,EACE,CAAAkB,EAAA,MAAAlB,CAAA,EAC4BkD,IAG9BpC,EAAA,SAAAd,CAAA,IACEK,IAAA,QACEU,EAAA,CAAAf,CAAA,CAAA,EAEFU,GAAA,MAAAA,EAAAV,EACE,CAAAmB,EAAA,MAAAnB,CAAA,EAC+B,CAAAA,CAAA,IAInCsB,EAAA,SAAAJ,EAAA,KAAA,GACEb,IAAA,QACEkB,EAAA,CAAAL,EAAA,KAAA,CAAA,CAEJ,EACF,SAAAuB,EAEC,CAAA,CACH,EAAAtB,EAAA,KAvEa,CAwEf,KAGF,QAAA1B,EACEM,GAAC,CAAA,GAAAwC,IAAA,EAAA,OAAA,IAC4B,MAAArB,EAAA,MAEf,KAAAA,EAAA,KACD,MAAAA,EAAA,MACC,SAAAA,EAAA,SACG,OAAAA,EAAA,OACF,SAAAA,EAAA,UAAAJ,EAAA,KAAA+B,GAAAA,IAAA3B,EAAA,KAAA,EAEsD,QAAAiC,GAAA,CAGjEjC,EAAA,WACAV,GAAA,MAAAA,EAAAU,EAAA,MAAA,CAAAA,EAAA,KAAA,EAAAiC,GACArC,EAAA,SAAAI,EAAA,KAAA,IACEb,IAAA,SACEU,EAAA,CAAAG,EAAA,KAAA,CAAA,EACAK,EAAA,CAAA,CAAA,GAEFb,GAAA,MAAAA,EAAAQ,EAAA,MAAA,CAAAA,EAAA,KAAA,EAAA,CAAAA,EAAA,KAAA,IACF,CACF,EAAAA,EAAA,KAnBU,CAsBhB,GAGF,OAAAzB,EACEf,EAAA,SAAa,CAAZ,MAAA,CACQ,YAAAV,EACL,iBAAAsC,EACA,aAAA9B,CACA,EACF,SAAAmB,EAEA,MAAC,CAAA,IAAA,CAAAtC,GAAAuC,EAAAN,CAAA,CAAA,EAC8D,IAAA8D,GAAArE,EAAAgD,CAAA,EACxB,GAAAlC,EAAAP,CAAA,EACR,SAAA,CAE7BG,EAAA,MAAC,CAAA,IAAAoC,EACM,IAAAtE,GACAC,EACHgE,GAAAG,CACc,EAChB,SAAAuB,GAAA,CAEEA,EAAA,cAAA,WAAA,EACE1B,GACEC,EAAA,EAAA,EAGFD,GACEC,EAAA,EAAA,EAGJyB,EAAA,cAAA,WAAAA,EAAA,cAAA,aAAAA,EAAA,cAAA,aAKEvB,GACEC,EAAA,EAAA,EAGJsB,EAAA,cAAA,YAAAA,EAAA,cAAA,cAIEvB,GACEC,EAAA,EAAA,EAEJ,EACF,SAAAU,CAEC,CAAA,EACH7C,EAAA4D,GAAA,CAAA,QAAA,GAAA,SAAA7B,GAAA/B,EAGI6D,GAAA,IAAQ,CAAP,QAAA,CAAA,QAAA,CAAA,EACuB,QAAA,CAAA,QAAA,CAAA,EACA,WAAA,CAAA,SAAA,EAAA,EACM,KAAA,CAAA,QAAA,CAAA,EACT,IAAA5F,GAAA,MAAA,EACkB,QAAA,IAAA,OAEnCmE,EAAA,WACET,EAAAS,EAAA,UAAA,MAAAT,EAAA,SAAA,CAA+B,KAAA,CAAAS,EAAA,QAAA,YACD,SAAA,QAClB,GAEd,EACF,SAAApC,EAAA8D,GAAA,EAAA,CAEc,CAAA,EAAA,EAGpB9D,EAAA4D,GAAA,CAAA,QAAA,GAAA,SAAA1B,GAAAlC,EAGI6D,GAAA,IAAQ,CAAP,QAAA,CAAA,QAAA,CAAA,EACuB,QAAA,CAAA,QAAA,CAAA,EACA,WAAA,CAAA,SAAA,EAAA,EACM,KAAA,CAAA,QAAA,CAAA,EACT,IAAA5F,GAAA,OAAA,EACmB,QAAA,IAAA,OAEpCmE,EAAA,WACET,EAAAS,EAAA,UAAA,MAAAT,EAAA,SAAA,CAA+B,KAAAS,EAAA,QAAA,YACF,SAAA,QACjB,GAEd,EACF,SAAApC,EAAA+D,GAAA,EAAA,CAEU,CAAA,EAAA,CAGhB,CAAA,CAAA,CACF,CAAA,CACF,CAGN,EAEAvD,GAAA,YAAA,wxOClVO,SAASwD,IAA+C,CACtD,OAAAnG;AAAA;AAAA;AAAA;AAAA;AAAA,GAMT,CAEO,SAASoG,GACd1F,EACAsC,EACArC,EACAC,EACkB,CAClB,MAAMC,EAAaD,EACfZ;AAAA,iBACWQ,EAAS,WAAY,IAAI,CAAC;AAAA,QAErCG,EACAX;AAAA,iBACWQ,EAASE,EAAa,IAAI,CAAC;AAAA;AAAA;AAAA;AAAA,8BAIdF,EAASwC,EAAkB,IAAI,CAAC;AAAA;AAAA,QAGxDhD;AAAA,iBACWQ,EAAS,WAAY,IAAI,CAAC;AAAA;AAAA;AAAA,8BAGbA,EAASwC,EAAkB,IAAI,CAAC;AAAA;AAAA,QAIrD,OAAAhD;AAAA,cACKY,EAAW,cAAgB,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQ5CC,CAAU;AAAA,GAEhB,CAEO,SAASwF,GACd3F,EACAsC,EACArC,EACAC,EACA0F,EACkB,CAClB,MAAMzF,EAAaD,EACfZ;AAAA,iBACWQ,EAAS,WAAY,IAAI,CAAC;AAAA,QAErCG,EACAX;AAAA,iBACWQ,EAASE,EAAa,IAAI,CAAC;AAAA;AAAA;AAAA;AAAA,8BAIdF,EAASwC,EAAkB,IAAI,CAAC;AAAA;AAAA,QAGxDhD;AAAA,iBACWQ,EAAS,WAAY,IAAI,CAAC;AAAA;AAAA;AAAA,8BAGbA,EAASwC,EAAkB,IAAI,CAAC;AAAA;AAAA,QAItDuD,EAAeD,EACjBtG;AAAA;AAAA,QAGAA;AAAA;AAAA,QAIG,OAAAA;AAAA,cACKY,EAAW,cAAgB,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQ5CC,CAAU;AAAA,MACV0F,CAAY;AAAA,GAElB,CAEO,MAAMC,GAAkBxG;AAAA;AAAA,EAIlByG,GAAsBzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAStB0G,GAAuB1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUvB2G,GAA6B3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAS1B,SAAA4G,GACdlG,EACAC,EACAC,EACkB,CAClB,MAAMC,EAAaD,EACfZ;AAAA,iBACWQ,EAAS,WAAY,IAAI,CAAC;AAAA,QAErCG,EACAX;AAAA,iBACWQ,EAASE,EAAa,IAAI,CAAC;AAAA;AAAA,QAGtCV;AAAA,iBACWQ,EAAS,WAAY,IAAI,CAAC;AAAA,QAElC,OAAAR;AAAA,cACKY,EAAW,cAAgB,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,MAK5CC,CAAU;AAAA,GAEhB,CClJO,MAAAgG,GAAAtF,EAAA,WAAwB,CAAAC,EAAAC,IAAA,CAE3B,KAAA,CAAM,SAAAC,EACJ,OAAAC,EACA,SAAAhB,EACA,SAAAC,EACA,KAAAiB,EACA,MAAAC,EACA,OAAAF,EACA,gBAAAG,EACA,GAAAC,CACG,EAAAR,EAGLS,EAAAC,aAAAd,CAAA,EACAV,GAAAuB,GAAA,YAAAA,EAAA,cAAA,OACAe,GAAAf,GAAA,YAAAA,EAAA,mBAAA,WAEA,OAAAL,EACE,KAGFS,EAAAyE,GAAA,CAAA,SAAA,CAEIzE,EAAA,MAAC,CAAA,IAAA+D,GACM1F,EACHsC,EACArC,EACAC,CACA,EACF,IAAAa,EACA,GAAAc,EAAAP,CAAA,EAC6B,SAAA,CAE5BH,GAAAM,EAAA,OAAA,CAAA,IAAAsE,GAAA,SAAA5E,EAAA,EAA8CC,GAAAK,EAAA,OAAA,CAAA,IAAAuE,GAAA,SAAA5E,EAAA,EACGK,EAAA,MAAA,CAAA,IAAAqE,EAAA,CAAA,EACvB9E,GAAAC,EAAAQ,EAAA4E,GAAA,CAAA,WAAA,IAAA,GAAA,MAAA,GAAA,MAAA,CAAA,EAAA5E,EAAAK,GAAA,CAAA,WAAA,IAAA,GAAA,MAAA,GAAA,OAAA,CAImB,CAAA,CAAA,EAEhDL,EAAA4D,GAAA,CAAA,SAAApE,GAAAQ,EAGI6D,GAAA,IAAQ,CAAP,IAAAG,GAAA,EACiC,QAAA,CAAA,OAAA,CAAA,EACX,QAAA,CAAA,OAAA,MAAA,EACK,WAAA,CAAA,SAAA,EAAA,EACE,KAAA,CAAA,OAAA,CAAA,EACV,SAAAzE,CAEjB,CAAA,EAAA,CAGP,CAAA,CAAA,CACF,CAGN,EAEAmF,GAAA,YAAA,28MCjEO,MAAAG,EAAAzF,EAAA,WAAA,CAAAC,EAAAC,IAAA,CAIL,KAAA,CAAA,SAAAd,EAAA,SAAAC,EAAA,KAAAiB,EAAA,MAAAC,EAAA,MAAAY,EAAA,IAAA4D,EAAA,OAAA1E,EAAA,GAAAI,CAAA,EAAAR,EAGAS,EAAAC,aAAAd,CAAA,EACAV,GAAAuB,GAAA,YAAAA,EAAA,cAAA,OACAe,GAAAf,GAAA,YAAAA,EAAA,mBAAA,WAEA,OAAAL,EACE,KAGFS,EACE,MAAC,CAAA,IAAA,CACMgE,GACH3F,EACEsC,EACArC,EACAC,EACA0F,CACA,EACFhE,EAAAN,CAAA,CACwB,EAC1B,IAAAP,EACA,GAAAc,EAAAP,CAAA,EAC6B,SAAA,CAE5BH,GAAAM,EAAA,OAAA,CAAA,IAAAsE,GAAA,SAAA5E,EAAA,EAA8CC,GAAAK,EAAA,OAAA,CAAA,IAAAuE,GAAA,SAAA5E,EAAA,CACG,CAAA,CAAA,CAGxD,CAAA,EAEAkF,EAAA,YAAA,iuMChCO,MAAAC,GAAA1F,EAAA,WAAqB,CAAAC,EAAAC,IAAA,CAExB,KAAA,CAAM,2BAAAmB,EACJ,sBAAAC,EACA,iBAAAG,EAAA,WACmB,oBAAAF,EACnB,eAAAC,EACA,gBAAA7C,EACA,YAAAQ,EAAA,OACc,eAAAuC,EACd,gBAAAC,EACA,MAAAC,EACA,aAAAC,EACA,aAAAlC,EACA,GAAAc,CACG,EAAAR,EAGL,CAAA6B,EAAAC,CAAA,EAAAC,EAAA,CAAA,EAAA,CAC8B,aAAAX,EACZ,MAAAE,CACP,CAAA,EAGX,CAAAU,EAAAC,CAAA,EAAAF,EAAA,CAAA,EAAA,CAEM,aAAAV,EACU,MAAAE,CACP,CAAA,EAGTW,EAAA,CAAA,EACAC,EAAA,CAAA,EAEAR,GAAA,MAAAA,EAAA,QAAAS,GAAA,OACE,GAAA,aAAAA,GAAA,aAAAA,GAAA,WAAAA,EAAA,CACE,MAAAC,EAAAD,GACAE,EAAAD,EAAA,WAAA,MAAAC,EAAA,QAAAC,GAAA,CACElB,GAAA,MAAAA,EAAA,SAAAkB,EAAA,QACEL,EAAA,KAAAG,EAAA,KAAA,EAEFd,GAAA,MAAAA,EAAA,SAAAgB,EAAA,QACEJ,EAAA,KAAAE,EAAA,KAAA,CACF,EACD,CACH,GAGF,KAAA,CAAAG,EAAAC,CAAA,EAAAV,EAAA,CAAA,EAAA,CAEM,aAAAV,EAAAa,EAAA,OAC2D,MAAAX,EAAAY,EAAA,MACrB,CAAA,EAG5CqB,EAAA7B,GAAA,YAAAA,EAAA,IAAA,CAAAS,EAAAqB,EAAAC,IAAA,OACE,GAAA,aAAAtB,GAAA,aAAAA,GAAA,WAAAA,EAAA,CACE,MAAAC,EAAAD,EAEAuB,IAAArB,EAAAD,EAAA,WAAA,YAAAC,EAAA,IAAA,CAAAC,EAAAqB,EAAAC,IACElD,EACE6E,EAAC,CAAA,MAAAjD,EAAA,MACgB,IAAA,GAEV,SAAAA,EAAA,SACa,OAAAA,EAAA,OACF,QAAA8B,GAAA,CAEd9B,EAAA,WACAb,GAAA,MAAAA,EAAAa,EAAA,MACU,CAAAF,EAAA,MAAAE,EAAA,KAAA,EACqB8B,GAG/BrC,EAAA,SAAAO,EAAA,KAAA,IACEhB,IAAA,QACEU,EAAA,CAAAM,EAAA,KAAA,CAAA,EAEFX,GAAA,MAAAA,EAAAW,EAAA,MACU,CAAAF,EAAA,MAAAE,EAAA,KAAA,EACqB,CAAAA,EAAA,KAAA,IAIjCC,EAAA,SAAAH,EAAA,KAAA,GACEd,IAAA,QACEkB,EAAA,CAAAJ,EAAA,KAAA,CAAA,EAEJ,EACF,MAAAxB,EAEE,MAAC,CAAA,IAAAuE,GACMlG,EACHqD,EAAA,UAAAP,EAAA,KAAA+B,GAAAA,IAAAxB,EAAA,KAAA,EAEqDA,EAAA,QAC7C,EACV,SAAA,CAECA,EAAA,MAAA5B,EAAA,OAAA,CAAA,IAAAsE,GAAA,SAAA1C,EAAA,KAAA,EAC+CA,EAAA,OAAA5B,EAAA,OAAA,CAAA,IAAAuE,GAAA,SAAA3C,EAAA,MAAA,CAGE,CAAA,CAAA,CAEpD,EAAAA,EAAA,KA1CW,GAgDnB,OAAA5B,EACE0E,GAAC,CAAA,MAAAhD,EAAA,MAEgB,KAAAA,EAAA,KACD,MAAAA,EAAA,MACC,SAAAA,EAAA,SACG,OAAAA,EAAA,OACF,SAAAA,EAAA,UAAAG,EAAA,KAAAuB,GAAAA,IAAA1B,EAAA,KAAA,EAGsC,OAAAA,EAAA,QAAAR,EAAA,KAAAkC,GAAAA,IAAA1B,EAAA,KAAA,EAII,QAAA,IAAA,CAGxD,GAAAA,EAAA,SAAsB,OACtB,MAAA2B,EAAA,IAAA,IAAA,CAA0B,GAAArC,GAAA,YAAAA,EAAA,OAAAsC,GAAA,WAAAA,GAAAA,EAAA,SAAA,IAAA,IAAAA,GAAAA,EAAA,OAGH,GAAApC,CAClB,CAAA,EAELJ,GAAA,MAAAA,EAAAY,EAAA,MAAA,CAAA,GAAA2B,CAAA,EAAA,CAAA5B,EAAA,KAAA,GACAd,IAAA,SACEO,EAAA,SAAAQ,EAAA,KAAA,EAMEP,EAAAD,EAAA,OAAAkC,GAAAA,IAAA1B,EAAA,KAAA,CAC4D,EAN5DP,EAAA,CAA4B,GAAAD,EACvBQ,EAAA,KACK,CAAA,EAOd,EACF,SAAAsB,EAEC,EAAAtB,EAAA,KArCY,CAsCf,KAGF,QAAA1B,EACE6E,EAAC,CAAA,MAAApD,EAAA,MAEa,KAAAA,EAAA,KACD,MAAAA,EAAA,MACC,IAAA,GACP,SAAAA,EAAA,SACU,OAAAA,EAAA,OACF,SAAAA,EAAA,UAAAJ,EAAA,KAAA+B,GAAAA,IAAA3B,EAAA,KAAA,EAEsD,QAAAiC,GAAA,CAGjEjC,EAAA,WACAV,GAAA,MAAAA,EAAAU,EAAA,MAAA,CAAAA,EAAA,KAAA,EAAAiC,GAEArC,EAAA,SAAAI,EAAA,KAAA,IACEb,IAAA,SACEU,EAAA,CAAAG,EAAA,KAAA,CAAA,EACAK,EAAA,CAAA,CAAA,GAEFb,GAAA,MAAAA,EAAAQ,EAAA,MAAA,CAAAA,EAAA,KAAA,EAAA,CAAAA,EAAA,KAAA,IACF,CACF,EAAAA,EAAA,KArBU,CAwBhB,GAGF,OAAAzB,EACEf,EAAA,SAAa,CAAZ,MAAA,CACQ,YAAAV,EACL,iBAAAsC,EACA,aAAA9B,CACA,EACF,SAAAiB,EAEA,MAAC,CAAA,IAAA,CAAAwE,GAAArE,EAAAN,CAAA,CAAA,EAC4D,IAAAP,EAC3D,GAAAc,EAAAP,CAAA,EAC6B,SAAAgD,CAE5B,CAAA,CACH,CAAA,CACF,CAGN,EAEAiC,GAAA,YAAA,kxOCpNO,MAAAC,EAAA3F,EAAA,WAAA,CAAAC,EAAAC,IAAA,CACL,KAAA,CAAA,KAAA0F,EAAA,YAAA,EAAA3F,EAEA,OAAA2F,EAAA,CAAc,IAAA,aAEV,OAAAhF,EAAAQ,GAAA,CAAA,IAAAlB,EAAA,GAAAD,CAAA,CAAA,EAA4C,IAAA,WAE5C,OAAAW,EAAA8E,GAAA,CAAA,IAAAxF,EAAA,GAAAD,CAAA,CAAA,CAA0C,CAE9C,OAAAW,EAAA2E,GAAA,CAAA,CAAA,CACF,CAAA,EAEAI,EAAA,YAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}