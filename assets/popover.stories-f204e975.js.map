{"version":3,"file":"popover.stories-f204e975.js","sources":["../../../../packages/popover/src/style.ts","../../../../packages/popover/src/popover.tsx"],"sourcesContent":["import { css } from \"@emotion/react\"\nimport { TriggerColorScheme } from \"@illa-design/trigger\"\nimport { globalColor, illaPrefix } from \"@illa-design/theme\"\n\nexport const applyTypographyContainer = css`\n  display: flex;\n  flex-direction: column;\n  padding: 12px 16px;\n`\n\nexport function applyTitleColor(colorScheme: TriggerColorScheme) {\n  const textColor =\n    colorScheme == \"white\"\n      ? globalColor(`--${illaPrefix}-grayBlue-02`)\n      : globalColor(`--${illaPrefix}-white-02`)\n  return css`\n    color: ${textColor};\n  `\n}\n\nexport const applyCloseButton = css`\n  margin-top: 4px;\n  align-self: end;\n`\n","import { FC, useContext, useState } from \"react\"\nimport { PopoverProps } from \"./interface\"\nimport { Trigger } from \"@illa-design/trigger\"\nimport { Heading, Typography } from \"@illa-design/typography\"\nimport {\n  applyCloseButton,\n  applyTitleColor,\n  applyTypographyContainer,\n} from \"./style\"\nimport {\n  ConfigProviderContext,\n  ConfigProviderProps,\n  def,\n} from \"@illa-design/config-provider\"\nimport { Link } from \"@illa-design/link\"\n\nexport const Popover: FC<PopoverProps> = (props) => {\n  const {\n    title,\n    content,\n    colorScheme = \"white\",\n    popupVisible,\n    onVisibleChange,\n    trigger = \"click\",\n    hasCloseIcon = true,\n    // must be false\n    closeOnClick = false,\n    defaultPopupVisible,\n    ...otherProps\n  } = props\n\n  const configProviderProps = useContext<ConfigProviderProps>(\n    ConfigProviderContext,\n  )\n\n  const locale = configProviderProps?.locale?.popover ?? def.popover\n\n  const [popoverVisible, setPopoverVisible] = useState(\n    defaultPopupVisible ?? false,\n  )\n\n  return (\n    <Trigger\n      colorScheme={colorScheme}\n      trigger={trigger}\n      popupVisible={popupVisible != undefined ? popupVisible : popoverVisible}\n      closeOnClick={closeOnClick}\n      withoutPadding\n      onVisibleChange={(visible) => {\n        if (onVisibleChange != undefined) {\n          onVisibleChange(visible)\n        }\n        if (popupVisible == undefined) {\n          setPopoverVisible(visible)\n        }\n      }}\n      content={\n        <div css={applyTypographyContainer}>\n          <Typography>\n            {title && (\n              <>\n                <Heading\n                  css={applyTitleColor(colorScheme)}\n                  colorScheme={colorScheme == \"white\" ? \"gray\" : \"white\"}\n                  title={title}\n                  ellipsis={false}\n                  level=\"h6\"\n                >\n                  {title}\n                </Heading>\n                <div style={{ height: \"4px\" }} />\n              </>\n            )}\n            {content}\n          </Typography>\n          {hasCloseIcon && (\n            <Link\n              colorScheme={colorScheme == \"white\" ? \"blue\" : \"white\"}\n              css={applyCloseButton}\n              onClick={() => {\n                if (popupVisible == undefined) {\n                  setPopoverVisible(false)\n                }\n                if (onVisibleChange != undefined) {\n                  onVisibleChange(false)\n                }\n              }}\n            >\n              {locale[\"close\"]}\n            </Link>\n          )}\n        </div>\n      }\n      {...otherProps}\n    >\n      {props.children}\n    </Trigger>\n  )\n}\n\nPopover.displayName = \"Popover\"\n"],"names":["applyTypographyContainer","css","applyTitleColor","colorScheme","textColor","globalColor","illaPrefix","applyCloseButton","Popover","props","title","content","popupVisible","onVisibleChange","trigger","hasCloseIcon","closeOnClick","defaultPopupVisible","otherProps","configProviderProps","useContext","ConfigProviderContext","locale","_a","def","popoverVisible","setPopoverVisible","useState","jsx","Trigger","visible","jsxs","Typography","Fragment","Heading","Link"],"mappings":"2lCAIO,MAAMA,EAA2BC;AAAA;AAAA;AAAA;AAAA,EAMjC,SAASC,EAAgBC,EAAiC,CACzD,MAAAC,EACJD,GAAe,QACXE,EAAY,KAAKC,CAAU,cAAc,EACzCD,EAAY,KAAKC,CAAU,WAAW,EACrC,OAAAL;AAAA,aACIG,CAAS;AAAA,GAEtB,CAEO,MAAMG,EAAmBN;AAAA;AAAA;AAAA,ECJzBO,EAAAC,GAAA,OACL,KAAA,CAAM,MAAAC,EACJ,QAAAC,EACA,YAAAR,EAAA,QACc,aAAAS,EACd,gBAAAC,EACA,QAAAC,EAAA,QACU,aAAAC,EAAA,GACK,aAAAC,EAAA,GAEA,oBAAAC,EACf,GAAAC,CACG,EAAAT,EAGLU,EAAAC,EAAA,WAA4BC,CAC1B,EAGFC,IAAAC,EAAAJ,GAAA,YAAAA,EAAA,SAAA,YAAAI,EAAA,UAAAC,EAAA,QAEA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAA4CV,GAAA,EACnB,EAGzB,OAAAW,EACEC,EAAC,CAAA,YAAA1B,EACC,QAAAW,EACA,aAAAF,GAAAa,EACyD,aAAAT,EACzD,eAAA,GACc,gBAAAc,GAAA,CAEZjB,GAAA,MACEA,EAAAiB,CAAA,EAEFlB,GAAA,MACEc,EAAAI,CAAA,CACF,EACF,QAAAC,EAAA,MAAA,CAAA,IAAA/B,EAAA,SAAA,CAGI+B,EAAAC,EAAA,CAAA,SAAA,CACGtB,GAAAqB,EAAAE,EAAA,CAAA,SAAA,CAEGL,EAAAM,EAAC,CAAA,IAAAhC,EAAAC,CAAA,EACiC,YAAAA,GAAA,QAAA,OAAA,QACe,MAAAO,EAC/C,SAAA,GACU,MAAA,KACJ,SAAAA,CAEL,CAAA,EACHkB,EAAA,MAAA,CAAA,MAAA,CAAA,OAAA,KAAA,EAAA,CAC+B,EAAA,EACjCjB,CAED,EAAA,EACHI,GAAAa,EAEEO,EAAC,CAAA,YAAAhC,GAAA,QAAA,OAAA,QACgD,IAAAI,EAC1C,QAAA,IAAA,CAEHK,GAAA,MACEc,EAAA,EAAA,EAEFb,GAAA,MACEA,EAAA,EAAA,CACF,EACF,SAAAS,EAAA,KAEe,CAAA,CACjB,EAAA,EAEJ,GAAAJ,EAEE,SAAAT,EAAA,QAEG,CAAA,CAGb,EAEAD,EAAA,YAAA;;;;;;"}