{"version":3,"file":"color-palette-2f9095e4.js","sources":["../../../../node_modules/.pnpm/is-arrayish@0.3.2/node_modules/is-arrayish/index.js","../../../../node_modules/.pnpm/simple-swizzle@0.2.2/node_modules/simple-swizzle/index.js","../../../../node_modules/.pnpm/color-string@1.9.1/node_modules/color-string/index.js","../../../../node_modules/.pnpm/color@4.2.3/node_modules/color/index.js","../../../../node_modules/.pnpm/chroma-js@2.4.2/node_modules/chroma-js/chroma.js","../../../../packages/theme/src/color-palette.ts"],"sourcesContent":["module.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n","'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n","/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\nvar hasOwnProperty = Object.hasOwnProperty;\n\nvar reverseNames = Object.create(null);\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (hasOwnProperty.call(colorNames, name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar keyword = /^(\\w+)$/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\tif (!hasOwnProperty.call(colorNames, match[1])) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = Math.round(num).toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n","const colorString = require('color-string');\nconst convert = require('color-convert');\n\nconst skippedModels = [\n\t// To be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// Gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// Shouldn't really be in color-convert either...\n\t'hex',\n];\n\nconst hashedModelKeys = {};\nfor (const model of Object.keys(convert)) {\n\thashedModelKeys[[...convert[model].labels].sort().join('')] = model;\n}\n\nconst limiters = {};\n\nfunction Color(object, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(object, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tlet i;\n\tlet channels;\n\n\tif (object == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (object instanceof Color) {\n\t\tthis.model = object.model;\n\t\tthis.color = [...object.color];\n\t\tthis.valpha = object.valpha;\n\t} else if (typeof object === 'string') {\n\t\tconst result = colorString.get(object);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + object);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (object.length > 0) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tconst newArray = Array.prototype.slice.call(object, 0, channels);\n\t\tthis.color = zeroArray(newArray, channels);\n\t\tthis.valpha = typeof object[channels] === 'number' ? object[channels] : 1;\n\t} else if (typeof object === 'number') {\n\t\t// This is always RGB - can be converted later on.\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(object >> 16) & 0xFF,\n\t\t\t(object >> 8) & 0xFF,\n\t\t\tobject & 0xFF,\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tconst keys = Object.keys(object);\n\t\tif ('alpha' in object) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof object.alpha === 'number' ? object.alpha : 0;\n\t\t}\n\n\t\tconst hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(object));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tconst {labels} = convert[this.model];\n\t\tconst color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(object[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// Perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tconst limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString() {\n\t\treturn this.string();\n\t},\n\n\ttoJSON() {\n\t\treturn this[this.model]();\n\t},\n\n\tstring(places) {\n\t\tlet self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString(places) {\n\t\tconst self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray() {\n\t\treturn this.valpha === 1 ? [...this.color] : [...this.color, this.valpha];\n\t},\n\n\tobject() {\n\t\tconst result = {};\n\t\tconst {channels} = convert[this.model];\n\t\tconst {labels} = convert[this.model];\n\n\t\tfor (let i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray() {\n\t\tconst rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject() {\n\t\tconst rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround(places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color([...this.color.map(roundToPlace(places)), this.valpha], this.model);\n\t},\n\n\talpha(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color([...this.color, Math.max(0, Math.min(1, value))], this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// Rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, value => ((value % 360) + 360) % 360),\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(95.047)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(108.833)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\thexa(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\tconst rgbArray = this.rgb().round().color;\n\n\t\tlet alphaHex = Math.round(this.valpha * 255).toString(16).toUpperCase();\n\t\tif (alphaHex.length === 1) {\n\t\t\talphaHex = '0' + alphaHex;\n\t\t}\n\n\t\treturn colorString.to.hex(rgbArray) + alphaHex;\n\t},\n\n\trgbNumber() {\n\t\tconst rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity() {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tconst rgb = this.rgb().color;\n\n\t\tconst lum = [];\n\t\tfor (const [i, element] of rgb.entries()) {\n\t\t\tconst chan = element / 255;\n\t\t\tlum[i] = (chan <= 0.04045) ? chan / 12.92 : ((chan + 0.055) / 1.055) ** 2.4;\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast(color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tconst lum1 = this.luminosity();\n\t\tconst lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel(color2) {\n\t\t// https://www.w3.org/TR/WCAG/#contrast-enhanced\n\t\tconst contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark() {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tconst rgb = this.rgb().color;\n\t\tconst yiq = (rgb[0] * 2126 + rgb[1] * 7152 + rgb[2] * 722) / 10000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight() {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate() {\n\t\tconst rgb = this.rgb();\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tlighten(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale() {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tconst rgb = this.rgb().color;\n\t\tconst value = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(value, value, value);\n\t},\n\n\tfade(ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer(ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate(degrees) {\n\t\tconst hsl = this.hsl();\n\t\tlet hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix(mixinColor, weight) {\n\t\t// Ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\n\t\tconst color1 = mixinColor.rgb();\n\t\tconst color2 = this.rgb();\n\t\tconst p = weight === undefined ? 0.5 : weight;\n\n\t\tconst w = 2 * p - 1;\n\t\tconst a = color1.alpha() - color2.alpha();\n\n\t\tconst w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2;\n\t\tconst w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n};\n\n// Model conversion methods and static constructors\nfor (const model of Object.keys(convert)) {\n\tif (skippedModels.includes(model)) {\n\t\tcontinue;\n\t}\n\n\tconst {channels} = convert[model];\n\n\t// Conversion methods\n\tColor.prototype[model] = function (...args) {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (args.length > 0) {\n\t\t\treturn new Color(args, model);\n\t\t}\n\n\t\treturn new Color([...assertArray(convert[this.model][model].raw(this.color)), this.valpha], model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (...args) {\n\t\tlet color = args[0];\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(args, channels);\n\t\t}\n\n\t\treturn new Color(color, model);\n\t};\n}\n\nfunction roundTo(number, places) {\n\treturn Number(number.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (number) {\n\t\treturn roundTo(number, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tfor (const m of model) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t}\n\n\tmodel = model[0];\n\n\treturn function (value) {\n\t\tlet result;\n\n\t\tif (value !== undefined) {\n\t\t\tif (modifier) {\n\t\t\t\tvalue = modifier(value);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = value;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(value) {\n\treturn Array.isArray(value) ? value : [value];\n}\n\nfunction zeroArray(array, length) {\n\tfor (let i = 0; i < length; i++) {\n\t\tif (typeof array[i] !== 'number') {\n\t\t\tarray[i] = 0;\n\t\t}\n\t}\n\n\treturn array;\n}\n\nmodule.exports = Color;\n","/**\n * chroma.js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2019, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n * derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * -------------------------------------------------------\n *\n * chroma.js includes colors from colorbrewer2.org, which are released under\n * the following license:\n *\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\n * and The Pennsylvania State University.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n *\n * ------------------------------------------------------\n *\n * Named colors are taken from X11 Color Names.\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @preserve\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.chroma = factory());\n})(this, (function () { 'use strict';\n\n    var limit$2 = function (x, min, max) {\n        if ( min === void 0 ) min=0;\n        if ( max === void 0 ) max=1;\n\n        return x < min ? min : x > max ? max : x;\n    };\n\n    var limit$1 = limit$2;\n\n    var clip_rgb$3 = function (rgb) {\n        rgb._clipped = false;\n        rgb._unclipped = rgb.slice(0);\n        for (var i=0; i<=3; i++) {\n            if (i < 3) {\n                if (rgb[i] < 0 || rgb[i] > 255) { rgb._clipped = true; }\n                rgb[i] = limit$1(rgb[i], 0, 255);\n            } else if (i === 3) {\n                rgb[i] = limit$1(rgb[i], 0, 1);\n            }\n        }\n        return rgb;\n    };\n\n    // ported from jQuery's $.type\n    var classToType = {};\n    for (var i$1 = 0, list$1 = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i$1 < list$1.length; i$1 += 1) {\n        var name = list$1[i$1];\n\n        classToType[(\"[object \" + name + \"]\")] = name.toLowerCase();\n    }\n    var type$p = function(obj) {\n        return classToType[Object.prototype.toString.call(obj)] || \"object\";\n    };\n\n    var type$o = type$p;\n\n    var unpack$B = function (args, keyOrder) {\n        if ( keyOrder === void 0 ) keyOrder=null;\n\n    \t// if called with more than 3 arguments, we return the arguments\n        if (args.length >= 3) { return Array.prototype.slice.call(args); }\n        // with less than 3 args we check if first arg is object\n        // and use the keyOrder string to extract and sort properties\n    \tif (type$o(args[0]) == 'object' && keyOrder) {\n    \t\treturn keyOrder.split('')\n    \t\t\t.filter(function (k) { return args[0][k] !== undefined; })\n    \t\t\t.map(function (k) { return args[0][k]; });\n    \t}\n    \t// otherwise we just return the first argument\n    \t// (which we suppose is an array of args)\n        return args[0];\n    };\n\n    var type$n = type$p;\n\n    var last$4 = function (args) {\n        if (args.length < 2) { return null; }\n        var l = args.length-1;\n        if (type$n(args[l]) == 'string') { return args[l].toLowerCase(); }\n        return null;\n    };\n\n    var PI$2 = Math.PI;\n\n    var utils = {\n    \tclip_rgb: clip_rgb$3,\n    \tlimit: limit$2,\n    \ttype: type$p,\n    \tunpack: unpack$B,\n    \tlast: last$4,\n    \tPI: PI$2,\n    \tTWOPI: PI$2*2,\n    \tPITHIRD: PI$2/3,\n    \tDEG2RAD: PI$2 / 180,\n    \tRAD2DEG: 180 / PI$2\n    };\n\n    var input$h = {\n    \tformat: {},\n    \tautodetect: []\n    };\n\n    var last$3 = utils.last;\n    var clip_rgb$2 = utils.clip_rgb;\n    var type$m = utils.type;\n    var _input = input$h;\n\n    var Color$D = function Color() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var me = this;\n        if (type$m(args[0]) === 'object' &&\n            args[0].constructor &&\n            args[0].constructor === this.constructor) {\n            // the argument is already a Color instance\n            return args[0];\n        }\n\n        // last argument could be the mode\n        var mode = last$3(args);\n        var autodetect = false;\n\n        if (!mode) {\n            autodetect = true;\n            if (!_input.sorted) {\n                _input.autodetect = _input.autodetect.sort(function (a,b) { return b.p - a.p; });\n                _input.sorted = true;\n            }\n            // auto-detect format\n            for (var i = 0, list = _input.autodetect; i < list.length; i += 1) {\n                var chk = list[i];\n\n                mode = chk.test.apply(chk, args);\n                if (mode) { break; }\n            }\n        }\n\n        if (_input.format[mode]) {\n            var rgb = _input.format[mode].apply(null, autodetect ? args : args.slice(0,-1));\n            me._rgb = clip_rgb$2(rgb);\n        } else {\n            throw new Error('unknown format: '+args);\n        }\n\n        // add alpha channel\n        if (me._rgb.length === 3) { me._rgb.push(1); }\n    };\n\n    Color$D.prototype.toString = function toString () {\n        if (type$m(this.hex) == 'function') { return this.hex(); }\n        return (\"[\" + (this._rgb.join(',')) + \"]\");\n    };\n\n    var Color_1 = Color$D;\n\n    var chroma$k = function () {\n    \tvar args = [], len = arguments.length;\n    \twhile ( len-- ) args[ len ] = arguments[ len ];\n\n    \treturn new (Function.prototype.bind.apply( chroma$k.Color, [ null ].concat( args) ));\n    };\n\n    chroma$k.Color = Color_1;\n    chroma$k.version = '2.4.2';\n\n    var chroma_1 = chroma$k;\n\n    var unpack$A = utils.unpack;\n    var max$2 = Math.max;\n\n    var rgb2cmyk$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$A(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r = r / 255;\n        g = g / 255;\n        b = b / 255;\n        var k = 1 - max$2(r,max$2(g,b));\n        var f = k < 1 ? 1 / (1-k) : 0;\n        var c = (1-r-k) * f;\n        var m = (1-g-k) * f;\n        var y = (1-b-k) * f;\n        return [c,m,y,k];\n    };\n\n    var rgb2cmyk_1 = rgb2cmyk$1;\n\n    var unpack$z = utils.unpack;\n\n    var cmyk2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$z(args, 'cmyk');\n        var c = args[0];\n        var m = args[1];\n        var y = args[2];\n        var k = args[3];\n        var alpha = args.length > 4 ? args[4] : 1;\n        if (k === 1) { return [0,0,0,alpha]; }\n        return [\n            c >= 1 ? 0 : 255 * (1-c) * (1-k), // r\n            m >= 1 ? 0 : 255 * (1-m) * (1-k), // g\n            y >= 1 ? 0 : 255 * (1-y) * (1-k), // b\n            alpha\n        ];\n    };\n\n    var cmyk2rgb_1 = cmyk2rgb;\n\n    var chroma$j = chroma_1;\n    var Color$C = Color_1;\n    var input$g = input$h;\n    var unpack$y = utils.unpack;\n    var type$l = utils.type;\n\n    var rgb2cmyk = rgb2cmyk_1;\n\n    Color$C.prototype.cmyk = function() {\n        return rgb2cmyk(this._rgb);\n    };\n\n    chroma$j.cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$C, [ null ].concat( args, ['cmyk']) ));\n    };\n\n    input$g.format.cmyk = cmyk2rgb_1;\n\n    input$g.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$y(args, 'cmyk');\n            if (type$l(args) === 'array' && args.length === 4) {\n                return 'cmyk';\n            }\n        }\n    });\n\n    var unpack$x = utils.unpack;\n    var last$2 = utils.last;\n    var rnd = function (a) { return Math.round(a*100)/100; };\n\n    /*\n     * supported arguments:\n     * - hsl2css(h,s,l)\n     * - hsl2css(h,s,l,a)\n     * - hsl2css([h,s,l], mode)\n     * - hsl2css([h,s,l,a], mode)\n     * - hsl2css({h,s,l,a}, mode)\n     */\n    var hsl2css$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hsla = unpack$x(args, 'hsla');\n        var mode = last$2(args) || 'lsa';\n        hsla[0] = rnd(hsla[0] || 0);\n        hsla[1] = rnd(hsla[1]*100) + '%';\n        hsla[2] = rnd(hsla[2]*100) + '%';\n        if (mode === 'hsla' || (hsla.length > 3 && hsla[3]<1)) {\n            hsla[3] = hsla.length > 3 ? hsla[3] : 1;\n            mode = 'hsla';\n        } else {\n            hsla.length = 3;\n        }\n        return (mode + \"(\" + (hsla.join(',')) + \")\");\n    };\n\n    var hsl2css_1 = hsl2css$1;\n\n    var unpack$w = utils.unpack;\n\n    /*\n     * supported arguments:\n     * - rgb2hsl(r,g,b)\n     * - rgb2hsl(r,g,b,a)\n     * - rgb2hsl([r,g,b])\n     * - rgb2hsl([r,g,b,a])\n     * - rgb2hsl({r,g,b,a})\n     */\n    var rgb2hsl$3 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$w(args, 'rgba');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n\n        r /= 255;\n        g /= 255;\n        b /= 255;\n\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n\n        var l = (max + min) / 2;\n        var s, h;\n\n        if (max === min){\n            s = 0;\n            h = Number.NaN;\n        } else {\n            s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n        }\n\n        if (r == max) { h = (g - b) / (max - min); }\n        else if (g == max) { h = 2 + (b - r) / (max - min); }\n        else if (b == max) { h = 4 + (r - g) / (max - min); }\n\n        h *= 60;\n        if (h < 0) { h += 360; }\n        if (args.length>3 && args[3]!==undefined) { return [h,s,l,args[3]]; }\n        return [h,s,l];\n    };\n\n    var rgb2hsl_1 = rgb2hsl$3;\n\n    var unpack$v = utils.unpack;\n    var last$1 = utils.last;\n    var hsl2css = hsl2css_1;\n    var rgb2hsl$2 = rgb2hsl_1;\n    var round$6 = Math.round;\n\n    /*\n     * supported arguments:\n     * - rgb2css(r,g,b)\n     * - rgb2css(r,g,b,a)\n     * - rgb2css([r,g,b], mode)\n     * - rgb2css([r,g,b,a], mode)\n     * - rgb2css({r,g,b,a}, mode)\n     */\n    var rgb2css$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$v(args, 'rgba');\n        var mode = last$1(args) || 'rgb';\n        if (mode.substr(0,3) == 'hsl') {\n            return hsl2css(rgb2hsl$2(rgba), mode);\n        }\n        rgba[0] = round$6(rgba[0]);\n        rgba[1] = round$6(rgba[1]);\n        rgba[2] = round$6(rgba[2]);\n        if (mode === 'rgba' || (rgba.length > 3 && rgba[3]<1)) {\n            rgba[3] = rgba.length > 3 ? rgba[3] : 1;\n            mode = 'rgba';\n        }\n        return (mode + \"(\" + (rgba.slice(0,mode==='rgb'?3:4).join(',')) + \")\");\n    };\n\n    var rgb2css_1 = rgb2css$1;\n\n    var unpack$u = utils.unpack;\n    var round$5 = Math.round;\n\n    var hsl2rgb$1 = function () {\n        var assign;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$u(args, 'hsl');\n        var h = args[0];\n        var s = args[1];\n        var l = args[2];\n        var r,g,b;\n        if (s === 0) {\n            r = g = b = l*255;\n        } else {\n            var t3 = [0,0,0];\n            var c = [0,0,0];\n            var t2 = l < 0.5 ? l * (1+s) : l+s-l*s;\n            var t1 = 2 * l - t2;\n            var h_ = h / 360;\n            t3[0] = h_ + 1/3;\n            t3[1] = h_;\n            t3[2] = h_ - 1/3;\n            for (var i=0; i<3; i++) {\n                if (t3[i] < 0) { t3[i] += 1; }\n                if (t3[i] > 1) { t3[i] -= 1; }\n                if (6 * t3[i] < 1)\n                    { c[i] = t1 + (t2 - t1) * 6 * t3[i]; }\n                else if (2 * t3[i] < 1)\n                    { c[i] = t2; }\n                else if (3 * t3[i] < 2)\n                    { c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6; }\n                else\n                    { c[i] = t1; }\n            }\n            (assign = [round$5(c[0]*255),round$5(c[1]*255),round$5(c[2]*255)], r = assign[0], g = assign[1], b = assign[2]);\n        }\n        if (args.length > 3) {\n            // keep alpha channel\n            return [r,g,b,args[3]];\n        }\n        return [r,g,b,1];\n    };\n\n    var hsl2rgb_1 = hsl2rgb$1;\n\n    var hsl2rgb = hsl2rgb_1;\n    var input$f = input$h;\n\n    var RE_RGB = /^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/;\n    var RE_RGBA = /^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_RGB_PCT = /^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_RGBA_PCT = /^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_HSL = /^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_HSLA = /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n\n    var round$4 = Math.round;\n\n    var css2rgb$1 = function (css) {\n        css = css.toLowerCase().trim();\n        var m;\n\n        if (input$f.format.named) {\n            try {\n                return input$f.format.named(css);\n            } catch (e) {\n                // eslint-disable-next-line\n            }\n        }\n\n        // rgb(250,20,0)\n        if ((m = css.match(RE_RGB))) {\n            var rgb = m.slice(1,4);\n            for (var i=0; i<3; i++) {\n                rgb[i] = +rgb[i];\n            }\n            rgb[3] = 1;  // default alpha\n            return rgb;\n        }\n\n        // rgba(250,20,0,0.4)\n        if ((m = css.match(RE_RGBA))) {\n            var rgb$1 = m.slice(1,5);\n            for (var i$1=0; i$1<4; i$1++) {\n                rgb$1[i$1] = +rgb$1[i$1];\n            }\n            return rgb$1;\n        }\n\n        // rgb(100%,0%,0%)\n        if ((m = css.match(RE_RGB_PCT))) {\n            var rgb$2 = m.slice(1,4);\n            for (var i$2=0; i$2<3; i$2++) {\n                rgb$2[i$2] = round$4(rgb$2[i$2] * 2.55);\n            }\n            rgb$2[3] = 1;  // default alpha\n            return rgb$2;\n        }\n\n        // rgba(100%,0%,0%,0.4)\n        if ((m = css.match(RE_RGBA_PCT))) {\n            var rgb$3 = m.slice(1,5);\n            for (var i$3=0; i$3<3; i$3++) {\n                rgb$3[i$3] = round$4(rgb$3[i$3] * 2.55);\n            }\n            rgb$3[3] = +rgb$3[3];\n            return rgb$3;\n        }\n\n        // hsl(0,100%,50%)\n        if ((m = css.match(RE_HSL))) {\n            var hsl = m.slice(1,4);\n            hsl[1] *= 0.01;\n            hsl[2] *= 0.01;\n            var rgb$4 = hsl2rgb(hsl);\n            rgb$4[3] = 1;\n            return rgb$4;\n        }\n\n        // hsla(0,100%,50%,0.5)\n        if ((m = css.match(RE_HSLA))) {\n            var hsl$1 = m.slice(1,4);\n            hsl$1[1] *= 0.01;\n            hsl$1[2] *= 0.01;\n            var rgb$5 = hsl2rgb(hsl$1);\n            rgb$5[3] = +m[4];  // default alpha = 1\n            return rgb$5;\n        }\n    };\n\n    css2rgb$1.test = function (s) {\n        return RE_RGB.test(s) ||\n            RE_RGBA.test(s) ||\n            RE_RGB_PCT.test(s) ||\n            RE_RGBA_PCT.test(s) ||\n            RE_HSL.test(s) ||\n            RE_HSLA.test(s);\n    };\n\n    var css2rgb_1 = css2rgb$1;\n\n    var chroma$i = chroma_1;\n    var Color$B = Color_1;\n    var input$e = input$h;\n    var type$k = utils.type;\n\n    var rgb2css = rgb2css_1;\n    var css2rgb = css2rgb_1;\n\n    Color$B.prototype.css = function(mode) {\n        return rgb2css(this._rgb, mode);\n    };\n\n    chroma$i.css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$B, [ null ].concat( args, ['css']) ));\n    };\n\n    input$e.format.css = css2rgb;\n\n    input$e.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$k(h) === 'string' && css2rgb.test(h)) {\n                return 'css';\n            }\n        }\n    });\n\n    var Color$A = Color_1;\n    var chroma$h = chroma_1;\n    var input$d = input$h;\n    var unpack$t = utils.unpack;\n\n    input$d.format.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$t(args, 'rgba');\n        rgb[0] *= 255;\n        rgb[1] *= 255;\n        rgb[2] *= 255;\n        return rgb;\n    };\n\n    chroma$h.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$A, [ null ].concat( args, ['gl']) ));\n    };\n\n    Color$A.prototype.gl = function() {\n        var rgb = this._rgb;\n        return [rgb[0]/255, rgb[1]/255, rgb[2]/255, rgb[3]];\n    };\n\n    var unpack$s = utils.unpack;\n\n    var rgb2hcg$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$s(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n        var delta = max - min;\n        var c = delta * 100 / 255;\n        var _g = min / (255 - delta) * 100;\n        var h;\n        if (delta === 0) {\n            h = Number.NaN;\n        } else {\n            if (r === max) { h = (g - b) / delta; }\n            if (g === max) { h = 2+(b - r) / delta; }\n            if (b === max) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, c, _g];\n    };\n\n    var rgb2hcg_1 = rgb2hcg$1;\n\n    var unpack$r = utils.unpack;\n    var floor$3 = Math.floor;\n\n    /*\n     * this is basically just HSV with some minor tweaks\n     *\n     * hue.. [0..360]\n     * chroma .. [0..1]\n     * grayness .. [0..1]\n     */\n\n    var hcg2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$r(args, 'hcg');\n        var h = args[0];\n        var c = args[1];\n        var _g = args[2];\n        var r,g,b;\n        _g = _g * 255;\n        var _c = c * 255;\n        if (c === 0) {\n            r = g = b = _g;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n            var i = floor$3(h);\n            var f = h - i;\n            var p = _g * (1 - c);\n            var q = p + _c * (1 - f);\n            var t = p + _c * f;\n            var v = p + _c;\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var hcg2rgb_1 = hcg2rgb;\n\n    var unpack$q = utils.unpack;\n    var type$j = utils.type;\n    var chroma$g = chroma_1;\n    var Color$z = Color_1;\n    var input$c = input$h;\n\n    var rgb2hcg = rgb2hcg_1;\n\n    Color$z.prototype.hcg = function() {\n        return rgb2hcg(this._rgb);\n    };\n\n    chroma$g.hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$z, [ null ].concat( args, ['hcg']) ));\n    };\n\n    input$c.format.hcg = hcg2rgb_1;\n\n    input$c.autodetect.push({\n        p: 1,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$q(args, 'hcg');\n            if (type$j(args) === 'array' && args.length === 3) {\n                return 'hcg';\n            }\n        }\n    });\n\n    var unpack$p = utils.unpack;\n    var last = utils.last;\n    var round$3 = Math.round;\n\n    var rgb2hex$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$p(args, 'rgba');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var a = ref[3];\n        var mode = last(args) || 'auto';\n        if (a === undefined) { a = 1; }\n        if (mode === 'auto') {\n            mode = a < 1 ? 'rgba' : 'rgb';\n        }\n        r = round$3(r);\n        g = round$3(g);\n        b = round$3(b);\n        var u = r << 16 | g << 8 | b;\n        var str = \"000000\" + u.toString(16); //#.toUpperCase();\n        str = str.substr(str.length - 6);\n        var hxa = '0' + round$3(a * 255).toString(16);\n        hxa = hxa.substr(hxa.length - 2);\n        switch (mode.toLowerCase()) {\n            case 'rgba': return (\"#\" + str + hxa);\n            case 'argb': return (\"#\" + hxa + str);\n            default: return (\"#\" + str);\n        }\n    };\n\n    var rgb2hex_1 = rgb2hex$2;\n\n    var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n    var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\n    var hex2rgb$1 = function (hex) {\n        if (hex.match(RE_HEX)) {\n            // remove optional leading #\n            if (hex.length === 4 || hex.length === 7) {\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full six-digit\n            if (hex.length === 3) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];\n            }\n            var u = parseInt(hex, 16);\n            var r = u >> 16;\n            var g = u >> 8 & 0xFF;\n            var b = u & 0xFF;\n            return [r,g,b,1];\n        }\n\n        // match rgba hex format, eg #FF000077\n        if (hex.match(RE_HEXA)) {\n            if (hex.length === 5 || hex.length === 9) {\n                // remove optional leading #\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full eight-digit\n            if (hex.length === 4) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2]+hex[3]+hex[3];\n            }\n            var u$1 = parseInt(hex, 16);\n            var r$1 = u$1 >> 24 & 0xFF;\n            var g$1 = u$1 >> 16 & 0xFF;\n            var b$1 = u$1 >> 8 & 0xFF;\n            var a = Math.round((u$1 & 0xFF) / 0xFF * 100) / 100;\n            return [r$1,g$1,b$1,a];\n        }\n\n        // we used to check for css colors here\n        // if _input.css? and rgb = _input.css hex\n        //     return rgb\n\n        throw new Error((\"unknown hex color: \" + hex));\n    };\n\n    var hex2rgb_1 = hex2rgb$1;\n\n    var chroma$f = chroma_1;\n    var Color$y = Color_1;\n    var type$i = utils.type;\n    var input$b = input$h;\n\n    var rgb2hex$1 = rgb2hex_1;\n\n    Color$y.prototype.hex = function(mode) {\n        return rgb2hex$1(this._rgb, mode);\n    };\n\n    chroma$f.hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$y, [ null ].concat( args, ['hex']) ));\n    };\n\n    input$b.format.hex = hex2rgb_1;\n    input$b.autodetect.push({\n        p: 4,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$i(h) === 'string' && [3,4,5,6,7,8,9].indexOf(h.length) >= 0) {\n                return 'hex';\n            }\n        }\n    });\n\n    var unpack$o = utils.unpack;\n    var TWOPI$2 = utils.TWOPI;\n    var min$2 = Math.min;\n    var sqrt$4 = Math.sqrt;\n    var acos = Math.acos;\n\n    var rgb2hsi$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n        */\n        var ref = unpack$o(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r /= 255;\n        g /= 255;\n        b /= 255;\n        var h;\n        var min_ = min$2(r,g,b);\n        var i = (r+g+b) / 3;\n        var s = i > 0 ? 1 - min_/i : 0;\n        if (s === 0) {\n            h = NaN;\n        } else {\n            h = ((r-g)+(r-b)) / 2;\n            h /= sqrt$4((r-g)*(r-g) + (r-b)*(g-b));\n            h = acos(h);\n            if (b > g) {\n                h = TWOPI$2 - h;\n            }\n            h /= TWOPI$2;\n        }\n        return [h*360,s,i];\n    };\n\n    var rgb2hsi_1 = rgb2hsi$1;\n\n    var unpack$n = utils.unpack;\n    var limit = utils.limit;\n    var TWOPI$1 = utils.TWOPI;\n    var PITHIRD = utils.PITHIRD;\n    var cos$4 = Math.cos;\n\n    /*\n     * hue [0..360]\n     * saturation [0..1]\n     * intensity [0..1]\n     */\n    var hsi2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n        */\n        args = unpack$n(args, 'hsi');\n        var h = args[0];\n        var s = args[1];\n        var i = args[2];\n        var r,g,b;\n\n        if (isNaN(h)) { h = 0; }\n        if (isNaN(s)) { s = 0; }\n        // normalize hue\n        if (h > 360) { h -= 360; }\n        if (h < 0) { h += 360; }\n        h /= 360;\n        if (h < 1/3) {\n            b = (1-s)/3;\n            r = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            g = 1 - (b+r);\n        } else if (h < 2/3) {\n            h -= 1/3;\n            r = (1-s)/3;\n            g = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            b = 1 - (r+g);\n        } else {\n            h -= 2/3;\n            g = (1-s)/3;\n            b = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            r = 1 - (g+b);\n        }\n        r = limit(i*r*3);\n        g = limit(i*g*3);\n        b = limit(i*b*3);\n        return [r*255, g*255, b*255, args.length > 3 ? args[3] : 1];\n    };\n\n    var hsi2rgb_1 = hsi2rgb;\n\n    var unpack$m = utils.unpack;\n    var type$h = utils.type;\n    var chroma$e = chroma_1;\n    var Color$x = Color_1;\n    var input$a = input$h;\n\n    var rgb2hsi = rgb2hsi_1;\n\n    Color$x.prototype.hsi = function() {\n        return rgb2hsi(this._rgb);\n    };\n\n    chroma$e.hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$x, [ null ].concat( args, ['hsi']) ));\n    };\n\n    input$a.format.hsi = hsi2rgb_1;\n\n    input$a.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$m(args, 'hsi');\n            if (type$h(args) === 'array' && args.length === 3) {\n                return 'hsi';\n            }\n        }\n    });\n\n    var unpack$l = utils.unpack;\n    var type$g = utils.type;\n    var chroma$d = chroma_1;\n    var Color$w = Color_1;\n    var input$9 = input$h;\n\n    var rgb2hsl$1 = rgb2hsl_1;\n\n    Color$w.prototype.hsl = function() {\n        return rgb2hsl$1(this._rgb);\n    };\n\n    chroma$d.hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$w, [ null ].concat( args, ['hsl']) ));\n    };\n\n    input$9.format.hsl = hsl2rgb_1;\n\n    input$9.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$l(args, 'hsl');\n            if (type$g(args) === 'array' && args.length === 3) {\n                return 'hsl';\n            }\n        }\n    });\n\n    var unpack$k = utils.unpack;\n    var min$1 = Math.min;\n    var max$1 = Math.max;\n\n    /*\n     * supported arguments:\n     * - rgb2hsv(r,g,b)\n     * - rgb2hsv([r,g,b])\n     * - rgb2hsv({r,g,b})\n     */\n    var rgb2hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$k(args, 'rgb');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n        var min_ = min$1(r, g, b);\n        var max_ = max$1(r, g, b);\n        var delta = max_ - min_;\n        var h,s,v;\n        v = max_ / 255.0;\n        if (max_ === 0) {\n            h = Number.NaN;\n            s = 0;\n        } else {\n            s = delta / max_;\n            if (r === max_) { h = (g - b) / delta; }\n            if (g === max_) { h = 2+(b - r) / delta; }\n            if (b === max_) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, s, v]\n    };\n\n    var rgb2hsv$1 = rgb2hsl;\n\n    var unpack$j = utils.unpack;\n    var floor$2 = Math.floor;\n\n    var hsv2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$j(args, 'hsv');\n        var h = args[0];\n        var s = args[1];\n        var v = args[2];\n        var r,g,b;\n        v *= 255;\n        if (s === 0) {\n            r = g = b = v;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n\n            var i = floor$2(h);\n            var f = h - i;\n            var p = v * (1 - s);\n            var q = v * (1 - s * f);\n            var t = v * (1 - s * (1 - f));\n\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r,g,b,args.length > 3?args[3]:1];\n    };\n\n    var hsv2rgb_1 = hsv2rgb;\n\n    var unpack$i = utils.unpack;\n    var type$f = utils.type;\n    var chroma$c = chroma_1;\n    var Color$v = Color_1;\n    var input$8 = input$h;\n\n    var rgb2hsv = rgb2hsv$1;\n\n    Color$v.prototype.hsv = function() {\n        return rgb2hsv(this._rgb);\n    };\n\n    chroma$c.hsv = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$v, [ null ].concat( args, ['hsv']) ));\n    };\n\n    input$8.format.hsv = hsv2rgb_1;\n\n    input$8.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$i(args, 'hsv');\n            if (type$f(args) === 'array' && args.length === 3) {\n                return 'hsv';\n            }\n        }\n    });\n\n    var labConstants = {\n        // Corresponds roughly to RGB brighter/darker\n        Kn: 18,\n\n        // D65 standard referent\n        Xn: 0.950470,\n        Yn: 1,\n        Zn: 1.088830,\n\n        t0: 0.137931034,  // 4 / 29\n        t1: 0.206896552,  // 6 / 29\n        t2: 0.12841855,   // 3 * t1 * t1\n        t3: 0.008856452,  // t1 * t1 * t1\n    };\n\n    var LAB_CONSTANTS$3 = labConstants;\n    var unpack$h = utils.unpack;\n    var pow$a = Math.pow;\n\n    var rgb2lab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$h(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2xyz(r,g,b);\n        var x = ref$1[0];\n        var y = ref$1[1];\n        var z = ref$1[2];\n        var l = 116 * y - 16;\n        return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\n    };\n\n    var rgb_xyz = function (r) {\n        if ((r /= 255) <= 0.04045) { return r / 12.92; }\n        return pow$a((r + 0.055) / 1.055, 2.4);\n    };\n\n    var xyz_lab = function (t) {\n        if (t > LAB_CONSTANTS$3.t3) { return pow$a(t, 1 / 3); }\n        return t / LAB_CONSTANTS$3.t2 + LAB_CONSTANTS$3.t0;\n    };\n\n    var rgb2xyz = function (r,g,b) {\n        r = rgb_xyz(r);\n        g = rgb_xyz(g);\n        b = rgb_xyz(b);\n        var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS$3.Xn);\n        var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS$3.Yn);\n        var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS$3.Zn);\n        return [x,y,z];\n    };\n\n    var rgb2lab_1 = rgb2lab$2;\n\n    var LAB_CONSTANTS$2 = labConstants;\n    var unpack$g = utils.unpack;\n    var pow$9 = Math.pow;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var lab2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$g(args, 'lab');\n        var l = args[0];\n        var a = args[1];\n        var b = args[2];\n        var x,y,z, r,g,b_;\n\n        y = (l + 16) / 116;\n        x = isNaN(a) ? y : y + a / 500;\n        z = isNaN(b) ? y : y - b / 200;\n\n        y = LAB_CONSTANTS$2.Yn * lab_xyz(y);\n        x = LAB_CONSTANTS$2.Xn * lab_xyz(x);\n        z = LAB_CONSTANTS$2.Zn * lab_xyz(z);\n\n        r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);  // D65 -> sRGB\n        g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n        b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n\n        return [r,g,b_,args.length > 3 ? args[3] : 1];\n    };\n\n    var xyz_rgb = function (r) {\n        return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$9(r, 1 / 2.4) - 0.055)\n    };\n\n    var lab_xyz = function (t) {\n        return t > LAB_CONSTANTS$2.t1 ? t * t * t : LAB_CONSTANTS$2.t2 * (t - LAB_CONSTANTS$2.t0)\n    };\n\n    var lab2rgb_1 = lab2rgb$1;\n\n    var unpack$f = utils.unpack;\n    var type$e = utils.type;\n    var chroma$b = chroma_1;\n    var Color$u = Color_1;\n    var input$7 = input$h;\n\n    var rgb2lab$1 = rgb2lab_1;\n\n    Color$u.prototype.lab = function() {\n        return rgb2lab$1(this._rgb);\n    };\n\n    chroma$b.lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$u, [ null ].concat( args, ['lab']) ));\n    };\n\n    input$7.format.lab = lab2rgb_1;\n\n    input$7.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$f(args, 'lab');\n            if (type$e(args) === 'array' && args.length === 3) {\n                return 'lab';\n            }\n        }\n    });\n\n    var unpack$e = utils.unpack;\n    var RAD2DEG = utils.RAD2DEG;\n    var sqrt$3 = Math.sqrt;\n    var atan2$2 = Math.atan2;\n    var round$2 = Math.round;\n\n    var lab2lch$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$e(args, 'lab');\n        var l = ref[0];\n        var a = ref[1];\n        var b = ref[2];\n        var c = sqrt$3(a * a + b * b);\n        var h = (atan2$2(b, a) * RAD2DEG + 360) % 360;\n        if (round$2(c*10000) === 0) { h = Number.NaN; }\n        return [l, c, h];\n    };\n\n    var lab2lch_1 = lab2lch$2;\n\n    var unpack$d = utils.unpack;\n    var rgb2lab = rgb2lab_1;\n    var lab2lch$1 = lab2lch_1;\n\n    var rgb2lch$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$d(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2lab(r,g,b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch$1(l,a,b_);\n    };\n\n    var rgb2lch_1 = rgb2lch$1;\n\n    var unpack$c = utils.unpack;\n    var DEG2RAD = utils.DEG2RAD;\n    var sin$3 = Math.sin;\n    var cos$3 = Math.cos;\n\n    var lch2lab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n        These formulas were invented by David Dalrymple to obtain maximum contrast without going\n        out of gamut if the parameters are in the range 0-1.\n\n        A saturation multiplier was added by Gregor Aisch\n        */\n        var ref = unpack$c(args, 'lch');\n        var l = ref[0];\n        var c = ref[1];\n        var h = ref[2];\n        if (isNaN(h)) { h = 0; }\n        h = h * DEG2RAD;\n        return [l, cos$3(h) * c, sin$3(h) * c]\n    };\n\n    var lch2lab_1 = lch2lab$2;\n\n    var unpack$b = utils.unpack;\n    var lch2lab$1 = lch2lab_1;\n    var lab2rgb = lab2rgb_1;\n\n    var lch2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$b(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab$1 (l,c,h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = lab2rgb (L,a,b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var lch2rgb_1 = lch2rgb$1;\n\n    var unpack$a = utils.unpack;\n    var lch2rgb = lch2rgb_1;\n\n    var hcl2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hcl = unpack$a(args, 'hcl').reverse();\n        return lch2rgb.apply(void 0, hcl);\n    };\n\n    var hcl2rgb_1 = hcl2rgb;\n\n    var unpack$9 = utils.unpack;\n    var type$d = utils.type;\n    var chroma$a = chroma_1;\n    var Color$t = Color_1;\n    var input$6 = input$h;\n\n    var rgb2lch = rgb2lch_1;\n\n    Color$t.prototype.lch = function() { return rgb2lch(this._rgb); };\n    Color$t.prototype.hcl = function() { return rgb2lch(this._rgb).reverse(); };\n\n    chroma$a.lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$t, [ null ].concat( args, ['lch']) ));\n    };\n    chroma$a.hcl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$t, [ null ].concat( args, ['hcl']) ));\n    };\n\n    input$6.format.lch = lch2rgb_1;\n    input$6.format.hcl = hcl2rgb_1;\n\n    ['lch','hcl'].forEach(function (m) { return input$6.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$9(args, m);\n            if (type$d(args) === 'array' && args.length === 3) {\n                return m;\n            }\n        }\n    }); });\n\n    /**\n    \tX11 color names\n\n    \thttp://www.w3.org/TR/css3-color/#svg-color\n    */\n\n    var w3cx11$1 = {\n        aliceblue: '#f0f8ff',\n        antiquewhite: '#faebd7',\n        aqua: '#00ffff',\n        aquamarine: '#7fffd4',\n        azure: '#f0ffff',\n        beige: '#f5f5dc',\n        bisque: '#ffe4c4',\n        black: '#000000',\n        blanchedalmond: '#ffebcd',\n        blue: '#0000ff',\n        blueviolet: '#8a2be2',\n        brown: '#a52a2a',\n        burlywood: '#deb887',\n        cadetblue: '#5f9ea0',\n        chartreuse: '#7fff00',\n        chocolate: '#d2691e',\n        coral: '#ff7f50',\n        cornflower: '#6495ed',\n        cornflowerblue: '#6495ed',\n        cornsilk: '#fff8dc',\n        crimson: '#dc143c',\n        cyan: '#00ffff',\n        darkblue: '#00008b',\n        darkcyan: '#008b8b',\n        darkgoldenrod: '#b8860b',\n        darkgray: '#a9a9a9',\n        darkgreen: '#006400',\n        darkgrey: '#a9a9a9',\n        darkkhaki: '#bdb76b',\n        darkmagenta: '#8b008b',\n        darkolivegreen: '#556b2f',\n        darkorange: '#ff8c00',\n        darkorchid: '#9932cc',\n        darkred: '#8b0000',\n        darksalmon: '#e9967a',\n        darkseagreen: '#8fbc8f',\n        darkslateblue: '#483d8b',\n        darkslategray: '#2f4f4f',\n        darkslategrey: '#2f4f4f',\n        darkturquoise: '#00ced1',\n        darkviolet: '#9400d3',\n        deeppink: '#ff1493',\n        deepskyblue: '#00bfff',\n        dimgray: '#696969',\n        dimgrey: '#696969',\n        dodgerblue: '#1e90ff',\n        firebrick: '#b22222',\n        floralwhite: '#fffaf0',\n        forestgreen: '#228b22',\n        fuchsia: '#ff00ff',\n        gainsboro: '#dcdcdc',\n        ghostwhite: '#f8f8ff',\n        gold: '#ffd700',\n        goldenrod: '#daa520',\n        gray: '#808080',\n        green: '#008000',\n        greenyellow: '#adff2f',\n        grey: '#808080',\n        honeydew: '#f0fff0',\n        hotpink: '#ff69b4',\n        indianred: '#cd5c5c',\n        indigo: '#4b0082',\n        ivory: '#fffff0',\n        khaki: '#f0e68c',\n        laserlemon: '#ffff54',\n        lavender: '#e6e6fa',\n        lavenderblush: '#fff0f5',\n        lawngreen: '#7cfc00',\n        lemonchiffon: '#fffacd',\n        lightblue: '#add8e6',\n        lightcoral: '#f08080',\n        lightcyan: '#e0ffff',\n        lightgoldenrod: '#fafad2',\n        lightgoldenrodyellow: '#fafad2',\n        lightgray: '#d3d3d3',\n        lightgreen: '#90ee90',\n        lightgrey: '#d3d3d3',\n        lightpink: '#ffb6c1',\n        lightsalmon: '#ffa07a',\n        lightseagreen: '#20b2aa',\n        lightskyblue: '#87cefa',\n        lightslategray: '#778899',\n        lightslategrey: '#778899',\n        lightsteelblue: '#b0c4de',\n        lightyellow: '#ffffe0',\n        lime: '#00ff00',\n        limegreen: '#32cd32',\n        linen: '#faf0e6',\n        magenta: '#ff00ff',\n        maroon: '#800000',\n        maroon2: '#7f0000',\n        maroon3: '#b03060',\n        mediumaquamarine: '#66cdaa',\n        mediumblue: '#0000cd',\n        mediumorchid: '#ba55d3',\n        mediumpurple: '#9370db',\n        mediumseagreen: '#3cb371',\n        mediumslateblue: '#7b68ee',\n        mediumspringgreen: '#00fa9a',\n        mediumturquoise: '#48d1cc',\n        mediumvioletred: '#c71585',\n        midnightblue: '#191970',\n        mintcream: '#f5fffa',\n        mistyrose: '#ffe4e1',\n        moccasin: '#ffe4b5',\n        navajowhite: '#ffdead',\n        navy: '#000080',\n        oldlace: '#fdf5e6',\n        olive: '#808000',\n        olivedrab: '#6b8e23',\n        orange: '#ffa500',\n        orangered: '#ff4500',\n        orchid: '#da70d6',\n        palegoldenrod: '#eee8aa',\n        palegreen: '#98fb98',\n        paleturquoise: '#afeeee',\n        palevioletred: '#db7093',\n        papayawhip: '#ffefd5',\n        peachpuff: '#ffdab9',\n        peru: '#cd853f',\n        pink: '#ffc0cb',\n        plum: '#dda0dd',\n        powderblue: '#b0e0e6',\n        purple: '#800080',\n        purple2: '#7f007f',\n        purple3: '#a020f0',\n        rebeccapurple: '#663399',\n        red: '#ff0000',\n        rosybrown: '#bc8f8f',\n        royalblue: '#4169e1',\n        saddlebrown: '#8b4513',\n        salmon: '#fa8072',\n        sandybrown: '#f4a460',\n        seagreen: '#2e8b57',\n        seashell: '#fff5ee',\n        sienna: '#a0522d',\n        silver: '#c0c0c0',\n        skyblue: '#87ceeb',\n        slateblue: '#6a5acd',\n        slategray: '#708090',\n        slategrey: '#708090',\n        snow: '#fffafa',\n        springgreen: '#00ff7f',\n        steelblue: '#4682b4',\n        tan: '#d2b48c',\n        teal: '#008080',\n        thistle: '#d8bfd8',\n        tomato: '#ff6347',\n        turquoise: '#40e0d0',\n        violet: '#ee82ee',\n        wheat: '#f5deb3',\n        white: '#ffffff',\n        whitesmoke: '#f5f5f5',\n        yellow: '#ffff00',\n        yellowgreen: '#9acd32'\n    };\n\n    var w3cx11_1 = w3cx11$1;\n\n    var Color$s = Color_1;\n    var input$5 = input$h;\n    var type$c = utils.type;\n\n    var w3cx11 = w3cx11_1;\n    var hex2rgb = hex2rgb_1;\n    var rgb2hex = rgb2hex_1;\n\n    Color$s.prototype.name = function() {\n        var hex = rgb2hex(this._rgb, 'rgb');\n        for (var i = 0, list = Object.keys(w3cx11); i < list.length; i += 1) {\n            var n = list[i];\n\n            if (w3cx11[n] === hex) { return n.toLowerCase(); }\n        }\n        return hex;\n    };\n\n    input$5.format.named = function (name) {\n        name = name.toLowerCase();\n        if (w3cx11[name]) { return hex2rgb(w3cx11[name]); }\n        throw new Error('unknown color name: '+name);\n    };\n\n    input$5.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$c(h) === 'string' && w3cx11[h.toLowerCase()]) {\n                return 'named';\n            }\n        }\n    });\n\n    var unpack$8 = utils.unpack;\n\n    var rgb2num$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$8(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        return (r << 16) + (g << 8) + b;\n    };\n\n    var rgb2num_1 = rgb2num$1;\n\n    var type$b = utils.type;\n\n    var num2rgb = function (num) {\n        if (type$b(num) == \"number\" && num >= 0 && num <= 0xFFFFFF) {\n            var r = num >> 16;\n            var g = (num >> 8) & 0xFF;\n            var b = num & 0xFF;\n            return [r,g,b,1];\n        }\n        throw new Error(\"unknown num color: \"+num);\n    };\n\n    var num2rgb_1 = num2rgb;\n\n    var chroma$9 = chroma_1;\n    var Color$r = Color_1;\n    var input$4 = input$h;\n    var type$a = utils.type;\n\n    var rgb2num = rgb2num_1;\n\n    Color$r.prototype.num = function() {\n        return rgb2num(this._rgb);\n    };\n\n    chroma$9.num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$r, [ null ].concat( args, ['num']) ));\n    };\n\n    input$4.format.num = num2rgb_1;\n\n    input$4.autodetect.push({\n        p: 5,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            if (args.length === 1 && type$a(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xFFFFFF) {\n                return 'num';\n            }\n        }\n    });\n\n    var chroma$8 = chroma_1;\n    var Color$q = Color_1;\n    var input$3 = input$h;\n    var unpack$7 = utils.unpack;\n    var type$9 = utils.type;\n    var round$1 = Math.round;\n\n    Color$q.prototype.rgb = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        if (rnd === false) { return this._rgb.slice(0,3); }\n        return this._rgb.slice(0,3).map(round$1);\n    };\n\n    Color$q.prototype.rgba = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        return this._rgb.slice(0,4).map(function (v,i) {\n            return i<3 ? (rnd === false ? v : round$1(v)) : v;\n        });\n    };\n\n    chroma$8.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$q, [ null ].concat( args, ['rgb']) ));\n    };\n\n    input$3.format.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$7(args, 'rgba');\n        if (rgba[3] === undefined) { rgba[3] = 1; }\n        return rgba;\n    };\n\n    input$3.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$7(args, 'rgba');\n            if (type$9(args) === 'array' && (args.length === 3 ||\n                args.length === 4 && type$9(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\n                return 'rgb';\n            }\n        }\n    });\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     */\n\n    var log$1 = Math.log;\n\n    var temperature2rgb$1 = function (kelvin) {\n        var temp = kelvin / 100;\n        var r,g,b;\n        if (temp < 66) {\n            r = 255;\n            g = temp < 6 ? 0 : -155.25485562709179 - 0.44596950469579133 * (g = temp-2) + 104.49216199393888 * log$1(g);\n            b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp-10) + 115.67994401066147 * log$1(b);\n        } else {\n            r = 351.97690566805693 + 0.114206453784165 * (r = temp-55) - 40.25366309332127 * log$1(r);\n            g = 325.4494125711974 + 0.07943456536662342 * (g = temp-50) - 28.0852963507957 * log$1(g);\n            b = 255;\n        }\n        return [r,g,b,1];\n    };\n\n    var temperature2rgb_1 = temperature2rgb$1;\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     **/\n\n    var temperature2rgb = temperature2rgb_1;\n    var unpack$6 = utils.unpack;\n    var round = Math.round;\n\n    var rgb2temperature$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$6(args, 'rgb');\n        var r = rgb[0], b = rgb[2];\n        var minTemp = 1000;\n        var maxTemp = 40000;\n        var eps = 0.4;\n        var temp;\n        while (maxTemp - minTemp > eps) {\n            temp = (maxTemp + minTemp) * 0.5;\n            var rgb$1 = temperature2rgb(temp);\n            if ((rgb$1[2] / rgb$1[0]) >= (b / r)) {\n                maxTemp = temp;\n            } else {\n                minTemp = temp;\n            }\n        }\n        return round(temp);\n    };\n\n    var rgb2temperature_1 = rgb2temperature$1;\n\n    var chroma$7 = chroma_1;\n    var Color$p = Color_1;\n    var input$2 = input$h;\n\n    var rgb2temperature = rgb2temperature_1;\n\n    Color$p.prototype.temp =\n    Color$p.prototype.kelvin =\n    Color$p.prototype.temperature = function() {\n        return rgb2temperature(this._rgb);\n    };\n\n    chroma$7.temp =\n    chroma$7.kelvin =\n    chroma$7.temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$p, [ null ].concat( args, ['temp']) ));\n    };\n\n    input$2.format.temp =\n    input$2.format.kelvin =\n    input$2.format.temperature = temperature2rgb_1;\n\n    var unpack$5 = utils.unpack;\n    var cbrt = Math.cbrt;\n    var pow$8 = Math.pow;\n    var sign$1 = Math.sign;\n\n    var rgb2oklab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        // OKLab color space implementation taken from\n        // https://bottosson.github.io/posts/oklab/\n        var ref = unpack$5(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = [rgb2lrgb(r / 255), rgb2lrgb(g / 255), rgb2lrgb(b / 255)];\n        var lr = ref$1[0];\n        var lg = ref$1[1];\n        var lb = ref$1[2];\n        var l = cbrt(0.4122214708 * lr + 0.5363325363 * lg + 0.0514459929 * lb);\n        var m = cbrt(0.2119034982 * lr + 0.6806995451 * lg + 0.1073969566 * lb);\n        var s = cbrt(0.0883024619 * lr + 0.2817188376 * lg + 0.6299787005 * lb);\n\n        return [\n            0.2104542553 * l + 0.793617785 * m - 0.0040720468 * s,\n            1.9779984951 * l - 2.428592205 * m + 0.4505937099 * s,\n            0.0259040371 * l + 0.7827717662 * m - 0.808675766 * s\n        ];\n    };\n\n    var rgb2oklab_1 = rgb2oklab$2;\n\n    function rgb2lrgb(c) {\n        var abs = Math.abs(c);\n        if (abs < 0.04045) {\n            return c / 12.92;\n        }\n        return (sign$1(c) || 1) * pow$8((abs + 0.055) / 1.055, 2.4);\n    }\n\n    var unpack$4 = utils.unpack;\n    var pow$7 = Math.pow;\n    var sign = Math.sign;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var oklab2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$4(args, 'lab');\n        var L = args[0];\n        var a = args[1];\n        var b = args[2];\n\n        var l = pow$7(L + 0.3963377774 * a + 0.2158037573 * b, 3);\n        var m = pow$7(L - 0.1055613458 * a - 0.0638541728 * b, 3);\n        var s = pow$7(L - 0.0894841775 * a - 1.291485548 * b, 3);\n\n        return [\n            255 * lrgb2rgb(+4.0767416621 * l - 3.3077115913 * m + 0.2309699292 * s),\n            255 * lrgb2rgb(-1.2684380046 * l + 2.6097574011 * m - 0.3413193965 * s),\n            255 * lrgb2rgb(-0.0041960863 * l - 0.7034186147 * m + 1.707614701 * s),\n            args.length > 3 ? args[3] : 1\n        ];\n    };\n\n    var oklab2rgb_1 = oklab2rgb$1;\n\n    function lrgb2rgb(c) {\n        var abs = Math.abs(c);\n        if (abs > 0.0031308) {\n            return (sign(c) || 1) * (1.055 * pow$7(abs, 1 / 2.4) - 0.055);\n        }\n        return c * 12.92;\n    }\n\n    var unpack$3 = utils.unpack;\n    var type$8 = utils.type;\n    var chroma$6 = chroma_1;\n    var Color$o = Color_1;\n    var input$1 = input$h;\n\n    var rgb2oklab$1 = rgb2oklab_1;\n\n    Color$o.prototype.oklab = function () {\n        return rgb2oklab$1(this._rgb);\n    };\n\n    chroma$6.oklab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$o, [ null ].concat( args, ['oklab']) ));\n    };\n\n    input$1.format.oklab = oklab2rgb_1;\n\n    input$1.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$3(args, 'oklab');\n            if (type$8(args) === 'array' && args.length === 3) {\n                return 'oklab';\n            }\n        }\n    });\n\n    var unpack$2 = utils.unpack;\n    var rgb2oklab = rgb2oklab_1;\n    var lab2lch = lab2lch_1;\n\n    var rgb2oklch$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$2(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2oklab(r, g, b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch(l, a, b_);\n    };\n\n    var rgb2oklch_1 = rgb2oklch$1;\n\n    var unpack$1 = utils.unpack;\n    var lch2lab = lch2lab_1;\n    var oklab2rgb = oklab2rgb_1;\n\n    var oklch2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$1(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab(l, c, h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = oklab2rgb(L, a, b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var oklch2rgb_1 = oklch2rgb;\n\n    var unpack = utils.unpack;\n    var type$7 = utils.type;\n    var chroma$5 = chroma_1;\n    var Color$n = Color_1;\n    var input = input$h;\n\n    var rgb2oklch = rgb2oklch_1;\n\n    Color$n.prototype.oklch = function () {\n        return rgb2oklch(this._rgb);\n    };\n\n    chroma$5.oklch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$n, [ null ].concat( args, ['oklch']) ));\n    };\n\n    input.format.oklch = oklch2rgb_1;\n\n    input.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack(args, 'oklch');\n            if (type$7(args) === 'array' && args.length === 3) {\n                return 'oklch';\n            }\n        }\n    });\n\n    var Color$m = Color_1;\n    var type$6 = utils.type;\n\n    Color$m.prototype.alpha = function(a, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        if (a !== undefined && type$6(a) === 'number') {\n            if (mutate) {\n                this._rgb[3] = a;\n                return this;\n            }\n            return new Color$m([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n        }\n        return this._rgb[3];\n    };\n\n    var Color$l = Color_1;\n\n    Color$l.prototype.clipped = function() {\n        return this._rgb._clipped || false;\n    };\n\n    var Color$k = Color_1;\n    var LAB_CONSTANTS$1 = labConstants;\n\n    Color$k.prototype.darken = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lab = me.lab();\n    \tlab[0] -= LAB_CONSTANTS$1.Kn * amount;\n    \treturn new Color$k(lab, 'lab').alpha(me.alpha(), true);\n    };\n\n    Color$k.prototype.brighten = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.darken(-amount);\n    };\n\n    Color$k.prototype.darker = Color$k.prototype.darken;\n    Color$k.prototype.brighter = Color$k.prototype.brighten;\n\n    var Color$j = Color_1;\n\n    Color$j.prototype.get = function (mc) {\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n            if (i > -1) { return src[i]; }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var Color$i = Color_1;\n    var type$5 = utils.type;\n    var pow$6 = Math.pow;\n\n    var EPS = 1e-7;\n    var MAX_ITER = 20;\n\n    Color$i.prototype.luminance = function(lum) {\n        if (lum !== undefined && type$5(lum) === 'number') {\n            if (lum === 0) {\n                // return pure black\n                return new Color$i([0,0,0,this._rgb[3]], 'rgb');\n            }\n            if (lum === 1) {\n                // return pure white\n                return new Color$i([255,255,255,this._rgb[3]], 'rgb');\n            }\n            // compute new color using...\n            var cur_lum = this.luminance();\n            var mode = 'rgb';\n            var max_iter = MAX_ITER;\n\n            var test = function (low, high) {\n                var mid = low.interpolate(high, 0.5, mode);\n                var lm = mid.luminance();\n                if (Math.abs(lum - lm) < EPS || !max_iter--) {\n                    // close enough\n                    return mid;\n                }\n                return lm > lum ? test(low, mid) : test(mid, high);\n            };\n\n            var rgb = (cur_lum > lum ? test(new Color$i([0,0,0]), this) : test(this, new Color$i([255,255,255]))).rgb();\n            return new Color$i(rgb.concat( [this._rgb[3]]));\n        }\n        return rgb2luminance.apply(void 0, (this._rgb).slice(0,3));\n    };\n\n\n    var rgb2luminance = function (r,g,b) {\n        // relative luminance\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        r = luminance_x(r);\n        g = luminance_x(g);\n        b = luminance_x(b);\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    };\n\n    var luminance_x = function (x) {\n        x /= 255;\n        return x <= 0.03928 ? x/12.92 : pow$6((x+0.055)/1.055, 2.4);\n    };\n\n    var interpolator$1 = {};\n\n    var Color$h = Color_1;\n    var type$4 = utils.type;\n    var interpolator = interpolator$1;\n\n    var mix$1 = function (col1, col2, f) {\n        if ( f === void 0 ) f=0.5;\n        var rest = [], len = arguments.length - 3;\n        while ( len-- > 0 ) rest[ len ] = arguments[ len + 3 ];\n\n        var mode = rest[0] || 'lrgb';\n        if (!interpolator[mode] && !rest.length) {\n            // fall back to the first supported mode\n            mode = Object.keys(interpolator)[0];\n        }\n        if (!interpolator[mode]) {\n            throw new Error((\"interpolation mode \" + mode + \" is not defined\"));\n        }\n        if (type$4(col1) !== 'object') { col1 = new Color$h(col1); }\n        if (type$4(col2) !== 'object') { col2 = new Color$h(col2); }\n        return interpolator[mode](col1, col2, f)\n            .alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n    };\n\n    var Color$g = Color_1;\n    var mix = mix$1;\n\n    Color$g.prototype.mix =\n    Color$g.prototype.interpolate = function(col2, f) {\n    \tif ( f === void 0 ) f=0.5;\n    \tvar rest = [], len = arguments.length - 2;\n    \twhile ( len-- > 0 ) rest[ len ] = arguments[ len + 2 ];\n\n    \treturn mix.apply(void 0, [ this, col2, f ].concat( rest ));\n    };\n\n    var Color$f = Color_1;\n\n    Color$f.prototype.premultiply = function(mutate) {\n    \tif ( mutate === void 0 ) mutate=false;\n\n    \tvar rgb = this._rgb;\n    \tvar a = rgb[3];\n    \tif (mutate) {\n    \t\tthis._rgb = [rgb[0]*a, rgb[1]*a, rgb[2]*a, a];\n    \t\treturn this;\n    \t} else {\n    \t\treturn new Color$f([rgb[0]*a, rgb[1]*a, rgb[2]*a, a], 'rgb');\n    \t}\n    };\n\n    var Color$e = Color_1;\n    var LAB_CONSTANTS = labConstants;\n\n    Color$e.prototype.saturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lch = me.lch();\n    \tlch[1] += LAB_CONSTANTS.Kn * amount;\n    \tif (lch[1] < 0) { lch[1] = 0; }\n    \treturn new Color$e(lch, 'lch').alpha(me.alpha(), true);\n    };\n\n    Color$e.prototype.desaturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.saturate(-amount);\n    };\n\n    var Color$d = Color_1;\n    var type$3 = utils.type;\n\n    Color$d.prototype.set = function (mc, value, mutate) {\n        if ( mutate === void 0 ) mutate = false;\n\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n            if (i > -1) {\n                if (type$3(value) == 'string') {\n                    switch (value.charAt(0)) {\n                        case '+':\n                            src[i] += +value;\n                            break;\n                        case '-':\n                            src[i] += +value;\n                            break;\n                        case '*':\n                            src[i] *= +value.substr(1);\n                            break;\n                        case '/':\n                            src[i] /= +value.substr(1);\n                            break;\n                        default:\n                            src[i] = +value;\n                    }\n                } else if (type$3(value) === 'number') {\n                    src[i] = value;\n                } else {\n                    throw new Error(\"unsupported value for Color.set\");\n                }\n                var out = new Color$d(src, mode);\n                if (mutate) {\n                    this._rgb = out._rgb;\n                    return this;\n                }\n                return out;\n            }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var Color$c = Color_1;\n\n    var rgb = function (col1, col2, f) {\n        var xyz0 = col1._rgb;\n        var xyz1 = col2._rgb;\n        return new Color$c(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.rgb = rgb;\n\n    var Color$b = Color_1;\n    var sqrt$2 = Math.sqrt;\n    var pow$5 = Math.pow;\n\n    var lrgb = function (col1, col2, f) {\n        var ref = col1._rgb;\n        var x1 = ref[0];\n        var y1 = ref[1];\n        var z1 = ref[2];\n        var ref$1 = col2._rgb;\n        var x2 = ref$1[0];\n        var y2 = ref$1[1];\n        var z2 = ref$1[2];\n        return new Color$b(\n            sqrt$2(pow$5(x1,2) * (1-f) + pow$5(x2,2) * f),\n            sqrt$2(pow$5(y1,2) * (1-f) + pow$5(y2,2) * f),\n            sqrt$2(pow$5(z1,2) * (1-f) + pow$5(z2,2) * f),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.lrgb = lrgb;\n\n    var Color$a = Color_1;\n\n    var lab = function (col1, col2, f) {\n        var xyz0 = col1.lab();\n        var xyz1 = col2.lab();\n        return new Color$a(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'lab'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.lab = lab;\n\n    var Color$9 = Color_1;\n\n    var _hsx = function (col1, col2, f, m) {\n        var assign, assign$1;\n\n        var xyz0, xyz1;\n        if (m === 'hsl') {\n            xyz0 = col1.hsl();\n            xyz1 = col2.hsl();\n        } else if (m === 'hsv') {\n            xyz0 = col1.hsv();\n            xyz1 = col2.hsv();\n        } else if (m === 'hcg') {\n            xyz0 = col1.hcg();\n            xyz1 = col2.hcg();\n        } else if (m === 'hsi') {\n            xyz0 = col1.hsi();\n            xyz1 = col2.hsi();\n        } else if (m === 'lch' || m === 'hcl') {\n            m = 'hcl';\n            xyz0 = col1.hcl();\n            xyz1 = col2.hcl();\n        } else if (m === 'oklch') {\n            xyz0 = col1.oklch().reverse();\n            xyz1 = col2.oklch().reverse();\n        }\n\n        var hue0, hue1, sat0, sat1, lbv0, lbv1;\n        if (m.substr(0, 1) === 'h' || m === 'oklch') {\n            (assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2]);\n            (assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2]);\n        }\n\n        var sat, hue, lbv, dh;\n\n        if (!isNaN(hue0) && !isNaN(hue1)) {\n            // both colors have hue\n            if (hue1 > hue0 && hue1 - hue0 > 180) {\n                dh = hue1 - (hue0 + 360);\n            } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                dh = hue1 + 360 - hue0;\n            } else {\n                dh = hue1 - hue0;\n            }\n            hue = hue0 + f * dh;\n        } else if (!isNaN(hue0)) {\n            hue = hue0;\n            if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') { sat = sat0; }\n        } else if (!isNaN(hue1)) {\n            hue = hue1;\n            if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') { sat = sat1; }\n        } else {\n            hue = Number.NaN;\n        }\n\n        if (sat === undefined) { sat = sat0 + f * (sat1 - sat0); }\n        lbv = lbv0 + f * (lbv1 - lbv0);\n        return m === 'oklch' ? new Color$9([lbv, sat, hue], m) : new Color$9([hue, sat, lbv], m);\n    };\n\n    var interpolate_hsx$5 = _hsx;\n\n    var lch = function (col1, col2, f) {\n    \treturn interpolate_hsx$5(col1, col2, f, 'lch');\n    };\n\n    // register interpolator\n    interpolator$1.lch = lch;\n    interpolator$1.hcl = lch;\n\n    var Color$8 = Color_1;\n\n    var num = function (col1, col2, f) {\n        var c1 = col1.num();\n        var c2 = col2.num();\n        return new Color$8(c1 + f * (c2-c1), 'num')\n    };\n\n    // register interpolator\n    interpolator$1.num = num;\n\n    var interpolate_hsx$4 = _hsx;\n\n    var hcg = function (col1, col2, f) {\n    \treturn interpolate_hsx$4(col1, col2, f, 'hcg');\n    };\n\n    // register interpolator\n    interpolator$1.hcg = hcg;\n\n    var interpolate_hsx$3 = _hsx;\n\n    var hsi = function (col1, col2, f) {\n    \treturn interpolate_hsx$3(col1, col2, f, 'hsi');\n    };\n\n    // register interpolator\n    interpolator$1.hsi = hsi;\n\n    var interpolate_hsx$2 = _hsx;\n\n    var hsl = function (col1, col2, f) {\n    \treturn interpolate_hsx$2(col1, col2, f, 'hsl');\n    };\n\n    // register interpolator\n    interpolator$1.hsl = hsl;\n\n    var interpolate_hsx$1 = _hsx;\n\n    var hsv = function (col1, col2, f) {\n    \treturn interpolate_hsx$1(col1, col2, f, 'hsv');\n    };\n\n    // register interpolator\n    interpolator$1.hsv = hsv;\n\n    var Color$7 = Color_1;\n\n    var oklab = function (col1, col2, f) {\n        var xyz0 = col1.oklab();\n        var xyz1 = col2.oklab();\n        return new Color$7(\n            xyz0[0] + f * (xyz1[0] - xyz0[0]),\n            xyz0[1] + f * (xyz1[1] - xyz0[1]),\n            xyz0[2] + f * (xyz1[2] - xyz0[2]),\n            'oklab'\n        );\n    };\n\n    // register interpolator\n    interpolator$1.oklab = oklab;\n\n    var interpolate_hsx = _hsx;\n\n    var oklch = function (col1, col2, f) {\n        return interpolate_hsx(col1, col2, f, 'oklch');\n    };\n\n    // register interpolator\n    interpolator$1.oklch = oklch;\n\n    var Color$6 = Color_1;\n    var clip_rgb$1 = utils.clip_rgb;\n    var pow$4 = Math.pow;\n    var sqrt$1 = Math.sqrt;\n    var PI$1 = Math.PI;\n    var cos$2 = Math.cos;\n    var sin$2 = Math.sin;\n    var atan2$1 = Math.atan2;\n\n    var average = function (colors, mode, weights) {\n        if ( mode === void 0 ) mode='lrgb';\n        if ( weights === void 0 ) weights=null;\n\n        var l = colors.length;\n        if (!weights) { weights = Array.from(new Array(l)).map(function () { return 1; }); }\n        // normalize weights\n        var k = l / weights.reduce(function(a, b) { return a + b; });\n        weights.forEach(function (w,i) { weights[i] *= k; });\n        // convert colors to Color objects\n        colors = colors.map(function (c) { return new Color$6(c); });\n        if (mode === 'lrgb') {\n            return _average_lrgb(colors, weights)\n        }\n        var first = colors.shift();\n        var xyz = first.get(mode);\n        var cnt = [];\n        var dx = 0;\n        var dy = 0;\n        // initial color\n        for (var i=0; i<xyz.length; i++) {\n            xyz[i] = (xyz[i] || 0) * weights[0];\n            cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n            if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n                var A = xyz[i] / 180 * PI$1;\n                dx += cos$2(A) * weights[0];\n                dy += sin$2(A) * weights[0];\n            }\n        }\n\n        var alpha = first.alpha() * weights[0];\n        colors.forEach(function (c,ci) {\n            var xyz2 = c.get(mode);\n            alpha += c.alpha() * weights[ci+1];\n            for (var i=0; i<xyz.length; i++) {\n                if (!isNaN(xyz2[i])) {\n                    cnt[i] += weights[ci+1];\n                    if (mode.charAt(i) === 'h') {\n                        var A = xyz2[i] / 180 * PI$1;\n                        dx += cos$2(A) * weights[ci+1];\n                        dy += sin$2(A) * weights[ci+1];\n                    } else {\n                        xyz[i] += xyz2[i] * weights[ci+1];\n                    }\n                }\n            }\n        });\n\n        for (var i$1=0; i$1<xyz.length; i$1++) {\n            if (mode.charAt(i$1) === 'h') {\n                var A$1 = atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1 * 180;\n                while (A$1 < 0) { A$1 += 360; }\n                while (A$1 >= 360) { A$1 -= 360; }\n                xyz[i$1] = A$1;\n            } else {\n                xyz[i$1] = xyz[i$1]/cnt[i$1];\n            }\n        }\n        alpha /= l;\n        return (new Color$6(xyz, mode)).alpha(alpha > 0.99999 ? 1 : alpha, true);\n    };\n\n\n    var _average_lrgb = function (colors, weights) {\n        var l = colors.length;\n        var xyz = [0,0,0,0];\n        for (var i=0; i < colors.length; i++) {\n            var col = colors[i];\n            var f = weights[i] / l;\n            var rgb = col._rgb;\n            xyz[0] += pow$4(rgb[0],2) * f;\n            xyz[1] += pow$4(rgb[1],2) * f;\n            xyz[2] += pow$4(rgb[2],2) * f;\n            xyz[3] += rgb[3] * f;\n        }\n        xyz[0] = sqrt$1(xyz[0]);\n        xyz[1] = sqrt$1(xyz[1]);\n        xyz[2] = sqrt$1(xyz[2]);\n        if (xyz[3] > 0.9999999) { xyz[3] = 1; }\n        return new Color$6(clip_rgb$1(xyz));\n    };\n\n    // minimal multi-purpose interface\n\n    // @requires utils color analyze\n\n    var chroma$4 = chroma_1;\n    var type$2 = utils.type;\n\n    var pow$3 = Math.pow;\n\n    var scale$2 = function(colors) {\n\n        // constructor\n        var _mode = 'rgb';\n        var _nacol = chroma$4('#ccc');\n        var _spread = 0;\n        // const _fixed = false;\n        var _domain = [0, 1];\n        var _pos = [];\n        var _padding = [0,0];\n        var _classes = false;\n        var _colors = [];\n        var _out = false;\n        var _min = 0;\n        var _max = 1;\n        var _correctLightness = false;\n        var _colorCache = {};\n        var _useCache = true;\n        var _gamma = 1;\n\n        // private methods\n\n        var setColors = function(colors) {\n            colors = colors || ['#fff', '#000'];\n            if (colors && type$2(colors) === 'string' && chroma$4.brewer &&\n                chroma$4.brewer[colors.toLowerCase()]) {\n                colors = chroma$4.brewer[colors.toLowerCase()];\n            }\n            if (type$2(colors) === 'array') {\n                // handle single color\n                if (colors.length === 1) {\n                    colors = [colors[0], colors[0]];\n                }\n                // make a copy of the colors\n                colors = colors.slice(0);\n                // convert to chroma classes\n                for (var c=0; c<colors.length; c++) {\n                    colors[c] = chroma$4(colors[c]);\n                }\n                // auto-fill color position\n                _pos.length = 0;\n                for (var c$1=0; c$1<colors.length; c$1++) {\n                    _pos.push(c$1/(colors.length-1));\n                }\n            }\n            resetCache();\n            return _colors = colors;\n        };\n\n        var getClass = function(value) {\n            if (_classes != null) {\n                var n = _classes.length-1;\n                var i = 0;\n                while (i < n && value >= _classes[i]) {\n                    i++;\n                }\n                return i-1;\n            }\n            return 0;\n        };\n\n        var tMapLightness = function (t) { return t; };\n        var tMapDomain = function (t) { return t; };\n\n        // const classifyValue = function(value) {\n        //     let val = value;\n        //     if (_classes.length > 2) {\n        //         const n = _classes.length-1;\n        //         const i = getClass(value);\n        //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n        //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n        //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n        //     }\n        //     return val;\n        // };\n\n        var getColor = function(val, bypassMap) {\n            var col, t;\n            if (bypassMap == null) { bypassMap = false; }\n            if (isNaN(val) || (val === null)) { return _nacol; }\n            if (!bypassMap) {\n                if (_classes && (_classes.length > 2)) {\n                    // find the class\n                    var c = getClass(val);\n                    t = c / (_classes.length-2);\n                } else if (_max !== _min) {\n                    // just interpolate between min/max\n                    t = (val - _min) / (_max - _min);\n                } else {\n                    t = 1;\n                }\n            } else {\n                t = val;\n            }\n\n            // domain map\n            t = tMapDomain(t);\n\n            if (!bypassMap) {\n                t = tMapLightness(t);  // lightness correction\n            }\n\n            if (_gamma !== 1) { t = pow$3(t, _gamma); }\n\n            t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n\n            t = Math.min(1, Math.max(0, t));\n\n            var k = Math.floor(t * 10000);\n\n            if (_useCache && _colorCache[k]) {\n                col = _colorCache[k];\n            } else {\n                if (type$2(_colors) === 'array') {\n                    //for i in [0.._pos.length-1]\n                    for (var i=0; i<_pos.length; i++) {\n                        var p = _pos[i];\n                        if (t <= p) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if ((t >= p) && (i === (_pos.length-1))) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if (t > p && t < _pos[i+1]) {\n                            t = (t-p)/(_pos[i+1]-p);\n                            col = chroma$4.interpolate(_colors[i], _colors[i+1], t, _mode);\n                            break;\n                        }\n                    }\n                } else if (type$2(_colors) === 'function') {\n                    col = _colors(t);\n                }\n                if (_useCache) { _colorCache[k] = col; }\n            }\n            return col;\n        };\n\n        var resetCache = function () { return _colorCache = {}; };\n\n        setColors(colors);\n\n        // public interface\n\n        var f = function(v) {\n            var c = chroma$4(getColor(v));\n            if (_out && c[_out]) { return c[_out](); } else { return c; }\n        };\n\n        f.classes = function(classes) {\n            if (classes != null) {\n                if (type$2(classes) === 'array') {\n                    _classes = classes;\n                    _domain = [classes[0], classes[classes.length-1]];\n                } else {\n                    var d = chroma$4.analyze(_domain);\n                    if (classes === 0) {\n                        _classes = [d.min, d.max];\n                    } else {\n                        _classes = chroma$4.limits(d, 'e', classes);\n                    }\n                }\n                return f;\n            }\n            return _classes;\n        };\n\n\n        f.domain = function(domain) {\n            if (!arguments.length) {\n                return _domain;\n            }\n            _min = domain[0];\n            _max = domain[domain.length-1];\n            _pos = [];\n            var k = _colors.length;\n            if ((domain.length === k) && (_min !== _max)) {\n                // update positions\n                for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {\n                    var d = list[i];\n\n                  _pos.push((d-_min) / (_max-_min));\n                }\n            } else {\n                for (var c=0; c<k; c++) {\n                    _pos.push(c/(k-1));\n                }\n                if (domain.length > 2) {\n                    // set domain map\n                    var tOut = domain.map(function (d,i) { return i/(domain.length-1); });\n                    var tBreaks = domain.map(function (d) { return (d - _min) / (_max - _min); });\n                    if (!tBreaks.every(function (val, i) { return tOut[i] === val; })) {\n                        tMapDomain = function (t) {\n                            if (t <= 0 || t >= 1) { return t; }\n                            var i = 0;\n                            while (t >= tBreaks[i+1]) { i++; }\n                            var f = (t - tBreaks[i]) / (tBreaks[i+1] - tBreaks[i]);\n                            var out = tOut[i] + f * (tOut[i+1] - tOut[i]);\n                            return out;\n                        };\n                    }\n\n                }\n            }\n            _domain = [_min, _max];\n            return f;\n        };\n\n        f.mode = function(_m) {\n            if (!arguments.length) {\n                return _mode;\n            }\n            _mode = _m;\n            resetCache();\n            return f;\n        };\n\n        f.range = function(colors, _pos) {\n            setColors(colors);\n            return f;\n        };\n\n        f.out = function(_o) {\n            _out = _o;\n            return f;\n        };\n\n        f.spread = function(val) {\n            if (!arguments.length) {\n                return _spread;\n            }\n            _spread = val;\n            return f;\n        };\n\n        f.correctLightness = function(v) {\n            if (v == null) { v = true; }\n            _correctLightness = v;\n            resetCache();\n            if (_correctLightness) {\n                tMapLightness = function(t) {\n                    var L0 = getColor(0, true).lab()[0];\n                    var L1 = getColor(1, true).lab()[0];\n                    var pol = L0 > L1;\n                    var L_actual = getColor(t, true).lab()[0];\n                    var L_ideal = L0 + ((L1 - L0) * t);\n                    var L_diff = L_actual - L_ideal;\n                    var t0 = 0;\n                    var t1 = 1;\n                    var max_iter = 20;\n                    while ((Math.abs(L_diff) > 1e-2) && (max_iter-- > 0)) {\n                        (function() {\n                            if (pol) { L_diff *= -1; }\n                            if (L_diff < 0) {\n                                t0 = t;\n                                t += (t1 - t) * 0.5;\n                            } else {\n                                t1 = t;\n                                t += (t0 - t) * 0.5;\n                            }\n                            L_actual = getColor(t, true).lab()[0];\n                            return L_diff = L_actual - L_ideal;\n                        })();\n                    }\n                    return t;\n                };\n            } else {\n                tMapLightness = function (t) { return t; };\n            }\n            return f;\n        };\n\n        f.padding = function(p) {\n            if (p != null) {\n                if (type$2(p) === 'number') {\n                    p = [p,p];\n                }\n                _padding = p;\n                return f;\n            } else {\n                return _padding;\n            }\n        };\n\n        f.colors = function(numColors, out) {\n            // If no arguments are given, return the original colors that were provided\n            if (arguments.length < 2) { out = 'hex'; }\n            var result = [];\n\n            if (arguments.length === 0) {\n                result = _colors.slice(0);\n\n            } else if (numColors === 1) {\n                result = [f(0.5)];\n\n            } else if (numColors > 1) {\n                var dm = _domain[0];\n                var dd = _domain[1] - dm;\n                result = __range__(0, numColors, false).map(function (i) { return f( dm + ((i/(numColors-1)) * dd) ); });\n\n            } else { // returns all colors based on the defined classes\n                colors = [];\n                var samples = [];\n                if (_classes && (_classes.length > 2)) {\n                    for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n                        samples.push((_classes[i-1]+_classes[i])*0.5);\n                    }\n                } else {\n                    samples = _domain;\n                }\n                result = samples.map(function (v) { return f(v); });\n            }\n\n            if (chroma$4[out]) {\n                result = result.map(function (c) { return c[out](); });\n            }\n            return result;\n        };\n\n        f.cache = function(c) {\n            if (c != null) {\n                _useCache = c;\n                return f;\n            } else {\n                return _useCache;\n            }\n        };\n\n        f.gamma = function(g) {\n            if (g != null) {\n                _gamma = g;\n                return f;\n            } else {\n                return _gamma;\n            }\n        };\n\n        f.nodata = function(d) {\n            if (d != null) {\n                _nacol = chroma$4(d);\n                return f;\n            } else {\n                return _nacol;\n            }\n        };\n\n        return f;\n    };\n\n    function __range__(left, right, inclusive) {\n      var range = [];\n      var ascending = left < right;\n      var end = !inclusive ? right : ascending ? right + 1 : right - 1;\n      for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n        range.push(i);\n      }\n      return range;\n    }\n\n    //\n    // interpolates between a set of colors uzing a bezier spline\n    //\n\n    // @requires utils lab\n    var Color$5 = Color_1;\n\n    var scale$1 = scale$2;\n\n    // nth row of the pascal triangle\n    var binom_row = function(n) {\n        var row = [1, 1];\n        for (var i = 1; i < n; i++) {\n            var newrow = [1];\n            for (var j = 1; j <= row.length; j++) {\n                newrow[j] = (row[j] || 0) + row[j - 1];\n            }\n            row = newrow;\n        }\n        return row;\n    };\n\n    var bezier = function(colors) {\n        var assign, assign$1, assign$2;\n\n        var I, lab0, lab1, lab2;\n        colors = colors.map(function (c) { return new Color$5(c); });\n        if (colors.length === 2) {\n            // linear interpolation\n            (assign = colors.map(function (c) { return c.lab(); }), lab0 = assign[0], lab1 = assign[1]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return lab0[i] + (t * (lab1[i] - lab0[i])); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length === 3) {\n            // quadratic bezier interpolation\n            (assign$1 = colors.map(function (c) { return c.lab(); }), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t) * lab0[i]) + (2 * (1-t) * t * lab1[i]) + (t * t * lab2[i]); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length === 4) {\n            // cubic bezier interpolation\n            var lab3;\n            (assign$2 = colors.map(function (c) { return c.lab(); }), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t)*(1-t) * lab0[i]) + (3 * (1-t) * (1-t) * t * lab1[i]) + (3 * (1-t) * t * t * lab2[i]) + (t*t*t * lab3[i]); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length >= 5) {\n            // general case (degree n bezier)\n            var labs, row, n;\n            labs = colors.map(function (c) { return c.lab(); });\n            n = colors.length - 1;\n            row = binom_row(n);\n            I = function (t) {\n                var u = 1 - t;\n                var lab = ([0, 1, 2].map(function (i) { return labs.reduce(function (sum, el, j) { return (sum + row[j] * Math.pow( u, (n - j) ) * Math.pow( t, j ) * el[i]); }, 0); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else {\n            throw new RangeError(\"No point in running bezier with only one color.\")\n        }\n        return I;\n    };\n\n    var bezier_1 = function (colors) {\n        var f = bezier(colors);\n        f.scale = function () { return scale$1(f); };\n        return f;\n    };\n\n    /*\n     * interpolates between a set of colors uzing a bezier spline\n     * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n     */\n\n    var chroma$3 = chroma_1;\n\n    var blend = function (bottom, top, mode) {\n        if (!blend[mode]) {\n            throw new Error('unknown blend mode ' + mode);\n        }\n        return blend[mode](bottom, top);\n    };\n\n    var blend_f = function (f) { return function (bottom,top) {\n            var c0 = chroma$3(top).rgb();\n            var c1 = chroma$3(bottom).rgb();\n            return chroma$3.rgb(f(c0, c1));\n        }; };\n\n    var each = function (f) { return function (c0, c1) {\n            var out = [];\n            out[0] = f(c0[0], c1[0]);\n            out[1] = f(c0[1], c1[1]);\n            out[2] = f(c0[2], c1[2]);\n            return out;\n        }; };\n\n    var normal = function (a) { return a; };\n    var multiply = function (a,b) { return a * b / 255; };\n    var darken = function (a,b) { return a > b ? b : a; };\n    var lighten = function (a,b) { return a > b ? a : b; };\n    var screen = function (a,b) { return 255 * (1 - (1-a/255) * (1-b/255)); };\n    var overlay = function (a,b) { return b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255 ) * ( 1 - b / 255 )); };\n    var burn = function (a,b) { return 255 * (1 - (1 - b / 255) / (a/255)); };\n    var dodge = function (a,b) {\n        if (a === 255) { return 255; }\n        a = 255 * (b / 255) / (1 - a / 255);\n        return a > 255 ? 255 : a\n    };\n\n    // # add = (a,b) ->\n    // #     if (a + b > 255) then 255 else a + b\n\n    blend.normal = blend_f(each(normal));\n    blend.multiply = blend_f(each(multiply));\n    blend.screen = blend_f(each(screen));\n    blend.overlay = blend_f(each(overlay));\n    blend.darken = blend_f(each(darken));\n    blend.lighten = blend_f(each(lighten));\n    blend.dodge = blend_f(each(dodge));\n    blend.burn = blend_f(each(burn));\n    // blend.add = blend_f(each(add));\n\n    var blend_1 = blend;\n\n    // cubehelix interpolation\n    // based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n    // http://astron-soc.in/bulletin/11June/289392011.pdf\n\n    var type$1 = utils.type;\n    var clip_rgb = utils.clip_rgb;\n    var TWOPI = utils.TWOPI;\n    var pow$2 = Math.pow;\n    var sin$1 = Math.sin;\n    var cos$1 = Math.cos;\n    var chroma$2 = chroma_1;\n\n    var cubehelix = function(start, rotations, hue, gamma, lightness) {\n        if ( start === void 0 ) start=300;\n        if ( rotations === void 0 ) rotations=-1.5;\n        if ( hue === void 0 ) hue=1;\n        if ( gamma === void 0 ) gamma=1;\n        if ( lightness === void 0 ) lightness=[0,1];\n\n        var dh = 0, dl;\n        if (type$1(lightness) === 'array') {\n            dl = lightness[1] - lightness[0];\n        } else {\n            dl = 0;\n            lightness = [lightness, lightness];\n        }\n\n        var f = function(fract) {\n            var a = TWOPI * (((start+120)/360) + (rotations * fract));\n            var l = pow$2(lightness[0] + (dl * fract), gamma);\n            var h = dh !== 0 ? hue[0] + (fract * dh) : hue;\n            var amp = (h * l * (1-l)) / 2;\n            var cos_a = cos$1(a);\n            var sin_a = sin$1(a);\n            var r = l + (amp * ((-0.14861 * cos_a) + (1.78277* sin_a)));\n            var g = l + (amp * ((-0.29227 * cos_a) - (0.90649* sin_a)));\n            var b = l + (amp * (+1.97294 * cos_a));\n            return chroma$2(clip_rgb([r*255,g*255,b*255,1]));\n        };\n\n        f.start = function(s) {\n            if ((s == null)) { return start; }\n            start = s;\n            return f;\n        };\n\n        f.rotations = function(r) {\n            if ((r == null)) { return rotations; }\n            rotations = r;\n            return f;\n        };\n\n        f.gamma = function(g) {\n            if ((g == null)) { return gamma; }\n            gamma = g;\n            return f;\n        };\n\n        f.hue = function(h) {\n            if ((h == null)) { return hue; }\n            hue = h;\n            if (type$1(hue) === 'array') {\n                dh = hue[1] - hue[0];\n                if (dh === 0) { hue = hue[1]; }\n            } else {\n                dh = 0;\n            }\n            return f;\n        };\n\n        f.lightness = function(h) {\n            if ((h == null)) { return lightness; }\n            if (type$1(h) === 'array') {\n                lightness = h;\n                dl = h[1] - h[0];\n            } else {\n                lightness = [h,h];\n                dl = 0;\n            }\n            return f;\n        };\n\n        f.scale = function () { return chroma$2.scale(f); };\n\n        f.hue(hue);\n\n        return f;\n    };\n\n    var Color$4 = Color_1;\n    var digits = '0123456789abcdef';\n\n    var floor$1 = Math.floor;\n    var random = Math.random;\n\n    var random_1 = function () {\n        var code = '#';\n        for (var i=0; i<6; i++) {\n            code += digits.charAt(floor$1(random() * 16));\n        }\n        return new Color$4(code, 'hex');\n    };\n\n    var type = type$p;\n    var log = Math.log;\n    var pow$1 = Math.pow;\n    var floor = Math.floor;\n    var abs$1 = Math.abs;\n\n\n    var analyze = function (data, key) {\n        if ( key === void 0 ) key=null;\n\n        var r = {\n            min: Number.MAX_VALUE,\n            max: Number.MAX_VALUE*-1,\n            sum: 0,\n            values: [],\n            count: 0\n        };\n        if (type(data) === 'object') {\n            data = Object.values(data);\n        }\n        data.forEach(function (val) {\n            if (key && type(val) === 'object') { val = val[key]; }\n            if (val !== undefined && val !== null && !isNaN(val)) {\n                r.values.push(val);\n                r.sum += val;\n                if (val < r.min) { r.min = val; }\n                if (val > r.max) { r.max = val; }\n                r.count += 1;\n            }\n        });\n\n        r.domain = [r.min, r.max];\n\n        r.limits = function (mode, num) { return limits(r, mode, num); };\n\n        return r;\n    };\n\n\n    var limits = function (data, mode, num) {\n        if ( mode === void 0 ) mode='equal';\n        if ( num === void 0 ) num=7;\n\n        if (type(data) == 'array') {\n            data = analyze(data);\n        }\n        var min = data.min;\n        var max = data.max;\n        var values = data.values.sort(function (a,b) { return a-b; });\n\n        if (num === 1) { return [min,max]; }\n\n        var limits = [];\n\n        if (mode.substr(0,1) === 'c') { // continuous\n            limits.push(min);\n            limits.push(max);\n        }\n\n        if (mode.substr(0,1) === 'e') { // equal interval\n            limits.push(min);\n            for (var i=1; i<num; i++) {\n                limits.push(min+((i/num)*(max-min)));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'l') { // log scale\n            if (min <= 0) {\n                throw new Error('Logarithmic scales are only possible for values > 0');\n            }\n            var min_log = Math.LOG10E * log(min);\n            var max_log = Math.LOG10E * log(max);\n            limits.push(min);\n            for (var i$1=1; i$1<num; i$1++) {\n                limits.push(pow$1(10, min_log + ((i$1/num) * (max_log - min_log))));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'q') { // quantile scale\n            limits.push(min);\n            for (var i$2=1; i$2<num; i$2++) {\n                var p = ((values.length-1) * i$2)/num;\n                var pb = floor(p);\n                if (pb === p) {\n                    limits.push(values[pb]);\n                } else { // p > pb\n                    var pr = p - pb;\n                    limits.push((values[pb]*(1-pr)) + (values[pb+1]*pr));\n                }\n            }\n            limits.push(max);\n\n        }\n\n        else if (mode.substr(0,1) === 'k') { // k-means clustering\n            /*\n            implementation based on\n            http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n            simplified for 1-d input values\n            */\n            var cluster;\n            var n = values.length;\n            var assignments = new Array(n);\n            var clusterSizes = new Array(num);\n            var repeat = true;\n            var nb_iters = 0;\n            var centroids = null;\n\n            // get seed values\n            centroids = [];\n            centroids.push(min);\n            for (var i$3=1; i$3<num; i$3++) {\n                centroids.push(min + ((i$3/num) * (max-min)));\n            }\n            centroids.push(max);\n\n            while (repeat) {\n                // assignment step\n                for (var j=0; j<num; j++) {\n                    clusterSizes[j] = 0;\n                }\n                for (var i$4=0; i$4<n; i$4++) {\n                    var value = values[i$4];\n                    var mindist = Number.MAX_VALUE;\n                    var best = (void 0);\n                    for (var j$1=0; j$1<num; j$1++) {\n                        var dist = abs$1(centroids[j$1]-value);\n                        if (dist < mindist) {\n                            mindist = dist;\n                            best = j$1;\n                        }\n                        clusterSizes[best]++;\n                        assignments[i$4] = best;\n                    }\n                }\n\n                // update centroids step\n                var newCentroids = new Array(num);\n                for (var j$2=0; j$2<num; j$2++) {\n                    newCentroids[j$2] = null;\n                }\n                for (var i$5=0; i$5<n; i$5++) {\n                    cluster = assignments[i$5];\n                    if (newCentroids[cluster] === null) {\n                        newCentroids[cluster] = values[i$5];\n                    } else {\n                        newCentroids[cluster] += values[i$5];\n                    }\n                }\n                for (var j$3=0; j$3<num; j$3++) {\n                    newCentroids[j$3] *= 1/clusterSizes[j$3];\n                }\n\n                // check convergence\n                repeat = false;\n                for (var j$4=0; j$4<num; j$4++) {\n                    if (newCentroids[j$4] !== centroids[j$4]) {\n                        repeat = true;\n                        break;\n                    }\n                }\n\n                centroids = newCentroids;\n                nb_iters++;\n\n                if (nb_iters > 200) {\n                    repeat = false;\n                }\n            }\n\n            // finished k-means clustering\n            // the next part is borrowed from gabrielflor.it\n            var kClusters = {};\n            for (var j$5=0; j$5<num; j$5++) {\n                kClusters[j$5] = [];\n            }\n            for (var i$6=0; i$6<n; i$6++) {\n                cluster = assignments[i$6];\n                kClusters[cluster].push(values[i$6]);\n            }\n            var tmpKMeansBreaks = [];\n            for (var j$6=0; j$6<num; j$6++) {\n                tmpKMeansBreaks.push(kClusters[j$6][0]);\n                tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length-1]);\n            }\n            tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a,b){ return a-b; });\n            limits.push(tmpKMeansBreaks[0]);\n            for (var i$7=1; i$7 < tmpKMeansBreaks.length; i$7+= 2) {\n                var v = tmpKMeansBreaks[i$7];\n                if (!isNaN(v) && (limits.indexOf(v) === -1)) {\n                    limits.push(v);\n                }\n            }\n        }\n        return limits;\n    };\n\n    var analyze_1 = {analyze: analyze, limits: limits};\n\n    var Color$3 = Color_1;\n\n\n    var contrast = function (a, b) {\n        // WCAG contrast ratio\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n        a = new Color$3(a);\n        b = new Color$3(b);\n        var l1 = a.luminance();\n        var l2 = b.luminance();\n        return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n    };\n\n    var Color$2 = Color_1;\n    var sqrt = Math.sqrt;\n    var pow = Math.pow;\n    var min = Math.min;\n    var max = Math.max;\n    var atan2 = Math.atan2;\n    var abs = Math.abs;\n    var cos = Math.cos;\n    var sin = Math.sin;\n    var exp = Math.exp;\n    var PI = Math.PI;\n\n    var deltaE = function(a, b, Kl, Kc, Kh) {\n        if ( Kl === void 0 ) Kl=1;\n        if ( Kc === void 0 ) Kc=1;\n        if ( Kh === void 0 ) Kh=1;\n\n        // Delta E (CIE 2000)\n        // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CIE2000.html\n        var rad2deg = function(rad) {\n            return 360 * rad / (2 * PI);\n        };\n        var deg2rad = function(deg) {\n            return (2 * PI * deg) / 360;\n        };\n        a = new Color$2(a);\n        b = new Color$2(b);\n        var ref = Array.from(a.lab());\n        var L1 = ref[0];\n        var a1 = ref[1];\n        var b1 = ref[2];\n        var ref$1 = Array.from(b.lab());\n        var L2 = ref$1[0];\n        var a2 = ref$1[1];\n        var b2 = ref$1[2];\n        var avgL = (L1 + L2)/2;\n        var C1 = sqrt(pow(a1, 2) + pow(b1, 2));\n        var C2 = sqrt(pow(a2, 2) + pow(b2, 2));\n        var avgC = (C1 + C2)/2;\n        var G = 0.5*(1-sqrt(pow(avgC, 7)/(pow(avgC, 7) + pow(25, 7))));\n        var a1p = a1*(1+G);\n        var a2p = a2*(1+G);\n        var C1p = sqrt(pow(a1p, 2) + pow(b1, 2));\n        var C2p = sqrt(pow(a2p, 2) + pow(b2, 2));\n        var avgCp = (C1p + C2p)/2;\n        var arctan1 = rad2deg(atan2(b1, a1p));\n        var arctan2 = rad2deg(atan2(b2, a2p));\n        var h1p = arctan1 >= 0 ? arctan1 : arctan1 + 360;\n        var h2p = arctan2 >= 0 ? arctan2 : arctan2 + 360;\n        var avgHp = abs(h1p - h2p) > 180 ? (h1p + h2p + 360)/2 : (h1p + h2p)/2;\n        var T = 1 - 0.17*cos(deg2rad(avgHp - 30)) + 0.24*cos(deg2rad(2*avgHp)) + 0.32*cos(deg2rad(3*avgHp + 6)) - 0.2*cos(deg2rad(4*avgHp - 63));\n        var deltaHp = h2p - h1p;\n        deltaHp = abs(deltaHp) <= 180 ? deltaHp : h2p <= h1p ? deltaHp + 360 : deltaHp - 360;\n        deltaHp = 2*sqrt(C1p*C2p)*sin(deg2rad(deltaHp)/2);\n        var deltaL = L2 - L1;\n        var deltaCp = C2p - C1p;    \n        var sl = 1 + (0.015*pow(avgL - 50, 2))/sqrt(20 + pow(avgL - 50, 2));\n        var sc = 1 + 0.045*avgCp;\n        var sh = 1 + 0.015*avgCp*T;\n        var deltaTheta = 30*exp(-pow((avgHp - 275)/25, 2));\n        var Rc = 2*sqrt(pow(avgCp, 7)/(pow(avgCp, 7) + pow(25, 7)));\n        var Rt = -Rc*sin(2*deg2rad(deltaTheta));\n        var result = sqrt(pow(deltaL/(Kl*sl), 2) + pow(deltaCp/(Kc*sc), 2) + pow(deltaHp/(Kh*sh), 2) + Rt*(deltaCp/(Kc*sc))*(deltaHp/(Kh*sh)));\n        return max(0, min(100, result));\n    };\n\n    var Color$1 = Color_1;\n\n    // simple Euclidean distance\n    var distance = function(a, b, mode) {\n        if ( mode === void 0 ) mode='lab';\n\n        // Delta E (CIE 1976)\n        // see http://www.brucelindbloom.com/index.html?Equations.html\n        a = new Color$1(a);\n        b = new Color$1(b);\n        var l1 = a.get(mode);\n        var l2 = b.get(mode);\n        var sum_sq = 0;\n        for (var i in l1) {\n            var d = (l1[i] || 0) - (l2[i] || 0);\n            sum_sq += d*d;\n        }\n        return Math.sqrt(sum_sq);\n    };\n\n    var Color = Color_1;\n\n    var valid = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        try {\n            new (Function.prototype.bind.apply( Color, [ null ].concat( args) ));\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    // some pre-defined color scales:\n    var chroma$1 = chroma_1;\n\n    var scale = scale$2;\n\n    var scales = {\n    \tcool: function cool() { return scale([chroma$1.hsl(180,1,.9), chroma$1.hsl(250,.7,.4)]) },\n    \thot: function hot() { return scale(['#000','#f00','#ff0','#fff']).mode('rgb') }\n    };\n\n    /**\n        ColorBrewer colors for chroma.js\n\n        Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n        Pennsylvania State University.\n\n        Licensed under the Apache License, Version 2.0 (the \"License\");\n        you may not use this file except in compliance with the License.\n        You may obtain a copy of the License at\n        http://www.apache.org/licenses/LICENSE-2.0\n\n        Unless required by applicable law or agreed to in writing, software distributed\n        under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n        CONDITIONS OF ANY KIND, either express or implied. See the License for the\n        specific language governing permissions and limitations under the License.\n    */\n\n    var colorbrewer = {\n        // sequential\n        OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n        PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n        BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n        Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n        BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n        YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n        YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n        Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n        RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n        Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n        YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n        Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n        GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n        Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n        YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n        PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n        Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n        PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n        Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n\n        // diverging\n\n        Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n        RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n        RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n        PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n        PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n        RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n        BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n        RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n        PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n\n        // qualitative\n\n        Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n        Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n        Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n        Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n        Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n        Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n        Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n        Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2'],\n    };\n\n    // add lowercase aliases for case-insensitive matches\n    for (var i = 0, list = Object.keys(colorbrewer); i < list.length; i += 1) {\n        var key = list[i];\n\n        colorbrewer[key.toLowerCase()] = colorbrewer[key];\n    }\n\n    var colorbrewer_1 = colorbrewer;\n\n    var chroma = chroma_1;\n\n    // feel free to comment out anything to rollup\n    // a smaller chroma.js built\n\n    // io --> convert colors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // operators --> modify existing Colors\n\n\n\n\n\n\n\n\n\n\n    // interpolators\n\n\n\n\n\n\n\n\n\n\n\n\n    // generators -- > create new colors\n    chroma.average = average;\n    chroma.bezier = bezier_1;\n    chroma.blend = blend_1;\n    chroma.cubehelix = cubehelix;\n    chroma.mix = chroma.interpolate = mix$1;\n    chroma.random = random_1;\n    chroma.scale = scale$2;\n\n    // other utility methods\n    chroma.analyze = analyze_1.analyze;\n    chroma.contrast = contrast;\n    chroma.deltaE = deltaE;\n    chroma.distance = distance;\n    chroma.limits = analyze_1.limits;\n    chroma.valid = valid;\n\n    // scale\n    chroma.scales = scales;\n\n    // colors\n    chroma.colors = w3cx11_1;\n    chroma.brewer = colorbrewer_1;\n\n    var chroma_js = chroma;\n\n    return chroma_js;\n\n}));\n","import Color from \"color\"\nimport { globalColor, hasGlobalColor, illaPrefix } from \"./global-color\"\nimport chroma from \"chroma-js\"\n\nconst formats = [\"hex\", \"rgb\", \"hsl\"]\n\nfunction getFormat(format: string) {\n  if (!format || formats.indexOf(format) < 0) {\n    return \"hex\"\n  }\n  return format\n}\n\nexport const getColorString = (\n  color: {\n    [x: string]: any\n  },\n  format: string,\n  alpha?: number,\n) => {\n  const innerFormat = getFormat(format)\n\n  if (innerFormat === \"hex\") {\n    return color[innerFormat]()\n  }\n  return color[innerFormat]().alpha(alpha).round().string()\n}\n\nexport function colorPalette(\n  originColor: string,\n  i: number,\n  format: \"hex\" | \"rgb\" | \"hsl\" = \"hex\",\n) {\n  const color = Color(originColor)\n\n  const alpha = color.alpha()\n  const h = color.hue()\n  const s = color.saturationv()\n  const v = color.value()\n\n  const hueStep = 2\n  const maxSaturationStep = 100\n  const minSaturationStep = 9\n\n  const maxValue = 100\n  const minValue = 30\n\n  function getNewHue(isLight: boolean, i: number) {\n    let hue\n    if (h >= 60 && h <= 240) {\n      hue = isLight ? h - hueStep * i : h + hueStep * i\n    } else {\n      hue = isLight ? h + hueStep * i : h - hueStep * i\n    }\n    if (hue < 0) {\n      hue += 360\n    } else if (hue >= 360) {\n      hue -= 360\n    }\n    return Math.round(hue)\n  }\n\n  function getNewSaturation(isLight: boolean, i: number) {\n    let newSaturation\n\n    if (isLight) {\n      newSaturation =\n        s <= minSaturationStep ? s : s - ((s - minSaturationStep) / 5) * i\n    } else {\n      newSaturation = s + ((maxSaturationStep - s) / 4) * i\n    }\n    return newSaturation\n  }\n\n  function getNewValue(isLight: boolean, i: number) {\n    return isLight\n      ? v + ((maxValue - v) / 5) * i\n      : v <= minValue\n      ? v\n      : v - ((v - minValue) / 4) * i\n  }\n\n  const isLight = i < 6\n  const index = isLight ? 6 - i : i - 6\n\n  const retColor =\n    i === 6\n      ? color\n      : Color({\n          h: getNewHue(isLight, index),\n          s: getNewSaturation(isLight, index),\n          v: getNewValue(isLight, index),\n        })\n\n  return getColorString(retColor, format, alpha)\n}\n\nconst transRule: Record<string, number> = {\n  \"n-01\": 9,\n  \"01\": 8,\n  \"02\": 7,\n  \"03\": 6,\n  \"04\": 5,\n  \"05\": 4,\n  \"06\": 2,\n  \"07\": 1,\n}\n\nexport const getColor = (color: string, step: string) => {\n  let colorStyle\n  if (color === \"transparent\") {\n    return \"#00000000\"\n  }\n  if (!hasGlobalColor(`--${illaPrefix}-${color}-${step}`)) {\n    const formatStep = transRule[step]\n    let formatNum = formatStep ? formatStep : 6\n    try {\n      colorStyle = colorPalette(color, formatNum, \"hsl\")\n    } catch (e) {\n      colorStyle = \"#00000000\"\n    }\n  } else {\n    colorStyle = globalColor(`--${illaPrefix}-${color}-${step}`)\n  }\n  return colorStyle\n}\n\nexport const getColorShadow = (color: string, step: string): string => {\n  return `0 0 8px 0\n        ${chroma(getColor(color, step)).alpha(0.15).hex()}`\n}\n\nexport const getSpecialThemeColor = (color: string) => {\n  if (color === \"white\") {\n    return getColor(\"white\", \"01\")\n  } else if (\n    color === \"blackAlpha\" ||\n    color === \"gray\" ||\n    color === \"grayBlue\"\n  ) {\n    return getColor(color, \"02\")\n  } else {\n    return getColor(color, \"03\")\n  }\n}\n"],"names":["isArrayish","obj","require$$0","concat","slice","swizzle","simpleSwizzleModule","args","results","i","len","arg","fn","colorNames","require$$1","hasOwnProperty","reverseNames","name","cs","colorStringModule","string","prefix","val","model","abbr","hex","rgba","per","keyword","rgb","match","hexAlpha","i2","clamp","hsl","alpha","h","s","l","a","hwb","w","b","hexDouble","r","g","hsla","hwba","num","min","max","str","colorString","convert","skippedModels","hashedModelKeys","limiters","Color","object","channels","result","newArray","zeroArray","keys","hashedKeys","labels","color","limit","places","self","roundToPlace","value","getset","maxfn","rgbArray","alphaHex","lum","element","chan","color2","lum1","lum2","contrastRatio","ratio","degrees","hue","mixinColor","weight","color1","p","w1","w2","assertArray","roundTo","number","channel","modifier","m","v","array","length","global","factory","module","this","limit$2","x","limit$1","clip_rgb$3","classToType","i$1","list$1","type$p","type$o","unpack$B","keyOrder","k","type$n","last$4","PI$2","utils","input$h","last$3","clip_rgb$2","type$m","_input","Color$D","me","mode","autodetect","list","chk","Color_1","chroma$k","chroma_1","unpack$A","max$2","rgb2cmyk$1","ref","f","c","y","rgb2cmyk_1","unpack$z","cmyk2rgb","cmyk2rgb_1","chroma$j","Color$C","input$g","unpack$y","type$l","rgb2cmyk","unpack$x","last$2","rnd","hsl2css$1","hsl2css_1","unpack$w","rgb2hsl$3","rgb2hsl_1","unpack$v","last$1","hsl2css","rgb2hsl$2","round$6","rgb2css$1","rgb2css_1","unpack$u","round$5","hsl2rgb$1","assign","t3","t2","t1","h_","hsl2rgb_1","hsl2rgb","input$f","RE_RGB","RE_RGBA","RE_RGB_PCT","RE_RGBA_PCT","RE_HSL","RE_HSLA","round$4","css2rgb$1","css","rgb$1","rgb$2","i$2","rgb$3","i$3","rgb$4","hsl$1","rgb$5","css2rgb_1","chroma$i","Color$B","input$e","type$k","rgb2css","css2rgb","rest","Color$A","chroma$h","input$d","unpack$t","unpack$s","rgb2hcg$1","delta","_g","rgb2hcg_1","unpack$r","floor$3","hcg2rgb","assign$1","assign$2","assign$3","assign$4","assign$5","_c","q","t","hcg2rgb_1","unpack$q","type$j","chroma$g","Color$z","input$c","rgb2hcg","unpack$p","last","round$3","rgb2hex$2","u","hxa","rgb2hex_1","RE_HEX","RE_HEXA","hex2rgb$1","u$1","r$1","g$1","b$1","hex2rgb_1","chroma$f","Color$y","type$i","input$b","rgb2hex$1","unpack$o","TWOPI$2","min$2","sqrt$4","acos","rgb2hsi$1","min_","rgb2hsi_1","unpack$n","TWOPI$1","PITHIRD","cos$4","hsi2rgb","hsi2rgb_1","unpack$m","type$h","chroma$e","Color$x","input$a","rgb2hsi","unpack$l","type$g","chroma$d","Color$w","input$9","rgb2hsl$1","unpack$k","min$1","max$1","rgb2hsl","max_","rgb2hsv$1","unpack$j","floor$2","hsv2rgb","hsv2rgb_1","unpack$i","type$f","chroma$c","Color$v","input$8","rgb2hsv","labConstants","LAB_CONSTANTS$3","unpack$h","pow$a","rgb2lab$2","ref$1","rgb2xyz","z","rgb_xyz","xyz_lab","rgb2lab_1","LAB_CONSTANTS$2","unpack$g","pow$9","lab2rgb$1","b_","lab_xyz","xyz_rgb","lab2rgb_1","unpack$f","type$e","chroma$b","Color$u","input$7","rgb2lab$1","unpack$e","RAD2DEG","sqrt$3","atan2$2","round$2","lab2lch$2","lab2lch_1","unpack$d","rgb2lab","lab2lch$1","rgb2lch$1","rgb2lch_1","unpack$c","DEG2RAD","sin$3","cos$3","lch2lab$2","lch2lab_1","unpack$b","lch2lab$1","lab2rgb","lch2rgb$1","L","lch2rgb_1","unpack$a","lch2rgb","hcl2rgb","hcl","hcl2rgb_1","unpack$9","type$d","chroma$a","Color$t","input$6","rgb2lch","w3cx11$1","w3cx11_1","Color$s","input$5","type$c","w3cx11","hex2rgb","rgb2hex","unpack$8","rgb2num$1","rgb2num_1","type$b","num2rgb","num2rgb_1","chroma$9","Color$r","input$4","type$a","rgb2num","chroma$8","Color$q","input$3","unpack$7","type$9","round$1","log$1","temperature2rgb$1","kelvin","temp","temperature2rgb_1","temperature2rgb","unpack$6","round","rgb2temperature$1","minTemp","maxTemp","eps","rgb2temperature_1","chroma$7","Color$p","input$2","rgb2temperature","unpack$5","cbrt","pow$8","sign$1","rgb2oklab$2","rgb2lrgb","lr","lg","lb","rgb2oklab_1","abs","unpack$4","pow$7","sign","oklab2rgb$1","lrgb2rgb","oklab2rgb_1","unpack$3","type$8","chroma$6","Color$o","input$1","rgb2oklab$1","unpack$2","rgb2oklab","lab2lch","rgb2oklch$1","rgb2oklch_1","unpack$1","lch2lab","oklab2rgb","oklch2rgb","oklch2rgb_1","unpack","type$7","chroma$5","Color$n","input","rgb2oklch","Color$m","type$6","mutate","Color$l","Color$k","LAB_CONSTANTS$1","amount","lab","Color$j","mc","src","Color$i","type$5","pow$6","EPS","MAX_ITER","cur_lum","max_iter","test","low","high","mid","lm","rgb2luminance","luminance_x","interpolator$1","Color$h","type$4","interpolator","mix$1","col1","col2","Color$g","mix","Color$f","Color$e","LAB_CONSTANTS","lch","Color$d","type$3","out","Color$c","xyz0","xyz1","Color$b","sqrt$2","pow$5","lrgb","x1","y1","z1","x2","y2","z2","Color$a","Color$9","_hsx","hue0","hue1","sat0","sat1","lbv0","lbv1","sat","lbv","dh","interpolate_hsx$5","Color$8","c1","c2","interpolate_hsx$4","hcg","interpolate_hsx$3","hsi","interpolate_hsx$2","interpolate_hsx$1","hsv","Color$7","oklab","interpolate_hsx","oklch","Color$6","clip_rgb$1","pow$4","sqrt$1","PI$1","cos$2","sin$2","atan2$1","average","colors","weights","_average_lrgb","first","xyz","cnt","dx","dy","A","ci","xyz2","A$1","col","chroma$4","type$2","pow$3","scale$2","_mode","_nacol","_spread","_domain","_pos","_padding","_classes","_colors","_out","_min","_max","_correctLightness","_colorCache","_useCache","_gamma","setColors","c$1","resetCache","getClass","n","tMapLightness","tMapDomain","getColor","bypassMap","classes","d","domain","tOut","tBreaks","_m","_o","L0","L1","pol","L_actual","L_ideal","L_diff","t0","numColors","dm","dd","__range__","samples","end","asc","left","right","inclusive","range","ascending","Color$5","scale$1","binom_row","row","newrow","j","bezier","I","lab0","lab1","lab2","lab3","labs","sum","el","bezier_1","chroma$3","blend","bottom","top","blend_f","c0","each","normal","multiply","darken","lighten","screen","overlay","burn","dodge","blend_1","type$1","clip_rgb","TWOPI","pow$2","sin$1","cos$1","chroma$2","cubehelix","start","rotations","gamma","lightness","dl","fract","amp","cos_a","sin_a","Color$4","digits","floor$1","random","random_1","code","type","log","pow$1","floor","abs$1","analyze","data","key","limits","values","min_log","max_log","pb","pr","cluster","assignments","clusterSizes","repeat","nb_iters","centroids","i$4","mindist","best","j$1","dist","newCentroids","j$2","i$5","j$3","j$4","kClusters","j$5","i$6","tmpKMeansBreaks","j$6","i$7","analyze_1","Color$3","contrast","l1","l2","Color$2","sqrt","pow","atan2","cos","sin","exp","PI","deltaE","Kl","Kc","Kh","rad2deg","rad","deg2rad","deg","a1","b1","L2","a2","b2","avgL","C1","C2","avgC","G","a1p","a2p","C1p","C2p","avgCp","arctan1","arctan2","h1p","h2p","avgHp","T","deltaHp","deltaL","deltaCp","sl","sc","sh","deltaTheta","Rc","Rt","Color$1","distance","sum_sq","valid","chroma$1","scale","scales","colorbrewer","colorbrewer_1","chroma","chroma_js","formats","getFormat","format","getColorString","innerFormat","colorPalette","originColor","hueStep","maxSaturationStep","minSaturationStep","maxValue","minValue","getNewHue","isLight","getNewSaturation","newSaturation","getNewValue","index","retColor","transRule","step","colorStyle","hasGlobalColor","illaPrefix","globalColor","formatStep","formatNum","getColorShadow","getSpecialThemeColor"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}