{"version":3,"file":"card.stories-ce930913.js","sources":["../../../../packages/card/src/style.ts","../../../../packages/card/src/card.tsx","../../../../packages/card/src/card-meta.tsx"],"sourcesContent":["import { css, SerializedStyles } from \"@emotion/react\"\nimport { globalColor, illaPrefix } from \"@illa-design/theme\"\nimport { CardSize } from \"./interface\"\nimport { ReactNode } from \"react\"\n\nexport function applyCard(\n  bordered?: boolean,\n  hoverable?: boolean,\n): SerializedStyles {\n  const border = bordered\n    ? `border: solid 1px ${globalColor(`--${illaPrefix}-grayBlue-08`)}`\n    : ``\n\n  const boxShadow = hoverable\n    ? `box-shadow: 0 4px 10px 0 ${globalColor(`--${illaPrefix}-blackAlpha-07`)}`\n    : \"\"\n  return css`\n    font-size: 14px;\n    background-color: ${globalColor(`--${illaPrefix}-white-01`)};\n    border-radius: 8px;\n    transition: box-shadow 0.2s ease-in-out;\n    ${border};\n    &:hover {\n      ${boxShadow};\n    }\n  `\n}\n\nexport function applyMetaContainer(hoverable?: boolean): SerializedStyles {\n  const boxShadow = hoverable\n    ? `box-shadow: 0 4px 10px 0 ${globalColor(`--${illaPrefix}-blackAlpha-07`)}`\n    : \"\"\n  return css`\n    display: flex;\n    border-radius: 8px;\n    flex-direction: column;\n    transition: box-shadow 0.2s ease-in-out;\n    &:hover {\n      ${boxShadow};\n    }\n  `\n}\n\nexport function applyCardHeader(size: CardSize): SerializedStyles {\n  const paddingSize = size === \"small\" ? `8px` : `16px`\n  return css`\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    box-sizing: border-box;\n    border-bottom: solid 1px ${globalColor(`--${illaPrefix}-grayBlue-08`)};\n    padding: ${paddingSize};\n  `\n}\n\nexport const applyCardHeaderTitle = css`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.5;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n  flex: 1;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`\n\nexport const applyCardHeaderExtra = css`\n  color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`\n\nexport function applyCardBody(size: CardSize): SerializedStyles {\n  const paddingSize = size === \"small\" ? `8px` : `16px`\n  return css`\n    box-sizing: border-box;\n    padding: ${paddingSize};\n    color: ${globalColor(`--${illaPrefix}-grayBlue-04`)};\n  `\n}\n\nexport function applyCardMetaBody(\n  size: CardSize,\n  bordered?: boolean,\n  cover?: ReactNode,\n): SerializedStyles {\n  const paddingSize = size === \"small\" ? `8px` : `16px`\n\n  const border = bordered\n    ? `solid 1px ${globalColor(`--${illaPrefix}-grayBlue-08`)}`\n    : ``\n  return css`\n    display: flex;\n    flex-direction: column;\n    box-sizing: border-box;\n    padding: ${paddingSize};\n    background-color: ${globalColor(`--${illaPrefix}-white-01`)};\n    border-radius: ${cover ? \"0 0 8px 8px\" : \"8px\"};\n    color: ${globalColor(`--${illaPrefix}-grayBlue-04`)};\n    border: ${border};\n  `\n}\n\nexport const avatarLayout: SerializedStyles = css`\n  margin-right: 8px;\n`\n\nexport const nicknameStyle: SerializedStyles = css`\n  font-size: 14px;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-03`)};\n`\n\nexport const actionContainer: SerializedStyles = css`\n  display: flex;\n  flex-grow: 1;\n  justify-content: end;\n  flex-direction: row;\n`\n\nexport function applyCardActions(isContainMeta: boolean): SerializedStyles {\n  const margin = isContainMeta ? `` : `margin-top: 20px`\n  return css`\n    ${margin};\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  `\n}\n\nexport const applyCardActionsRight = css`\n  display: flex;\n  align-items: center;\n`\n\nexport const applyCardActionItem = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  cursor: pointer;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-03`)};\n  transition: color 0.2s ease-in-out;\n\n  &:not(:last-child) {\n    margin-right: 24px;\n  }\n\n  &:hover {\n    color: ${globalColor(`--${illaPrefix}-blue-03`)};\n  }\n`\n\nexport function applyCardGrid(): SerializedStyles {\n  const borderColor = globalColor(`--${illaPrefix}-grayBlue-08`)\n  return css`\n    position: relative;\n    box-sizing: border-box;\n    width: 33.33%;\n    box-shadow: 1px 0 0 0 ${borderColor}, 0 1px 0 0 ${borderColor},\n      1px 1px 0 0 ${borderColor}, 1px 0 0 0 ${borderColor} inset,\n      0 1px 0 0 ${borderColor} inset;\n  `\n}\n\nexport const applyCardMetaTitle = css`\n  font-size: 16px;\n  font-weight: 500;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`\n\nexport const applyCardMetaDescription = css`\n  margin-top: 4px;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-04`)};\n`\n\nexport const applyCardMetaFooter = css`\n  display: flex;\n  margin-top: 16px;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`\n\nexport const applyCardMetaUserContainer = css`\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n`\n","import { forwardRef } from \"react\"\nimport { CardProps } from \"./interface\"\nimport {\n  applyCard,\n  applyCardBody,\n  applyCardHeader,\n  applyCardHeaderExtra,\n  applyCardHeaderTitle,\n} from \"./style\"\nimport { applyBoxStyle, deleteCssProps } from \"@illa-design/theme\"\n\nexport const Card = forwardRef<HTMLDivElement, CardProps>((props, ref) => {\n  const {\n    title,\n    extra,\n    size = \"medium\",\n    hoverable,\n    bordered = true,\n    children,\n    ...restProps\n  } = props\n\n  return (\n    <div\n      ref={ref}\n      css={[applyCard(bordered, hoverable ?? false), applyBoxStyle(props)]}\n      {...deleteCssProps(restProps)}\n    >\n      {title || extra ? (\n        <div css={applyCardHeader(size)}>\n          {title && <div css={applyCardHeaderTitle}>{title}</div>}\n          {extra && <div css={applyCardHeaderExtra}>{extra}</div>}\n        </div>\n      ) : null}\n      <div css={applyCardBody(size)}>{children}</div>\n    </div>\n  )\n})\n\nCard.displayName = \"Card\"\n","import { forwardRef } from \"react\"\nimport { CardMetaProps } from \"./interface\"\nimport {\n  actionContainer,\n  applyCardMetaBody,\n  applyCardMetaDescription,\n  applyCardMetaFooter,\n  applyCardMetaTitle,\n  applyCardMetaUserContainer,\n  applyMetaContainer,\n  avatarLayout,\n  nicknameStyle,\n} from \"./style\"\nimport { applyBoxStyle, deleteCssProps } from \"@illa-design/theme\"\nimport { Space } from \"@illa-design/space\"\n\nexport const CardMeta = forwardRef<HTMLDivElement, CardMetaProps>(\n  (props, ref) => {\n    const {\n      title,\n      size = \"medium\",\n      description,\n      actionList,\n      avatar,\n      nickname,\n      cover,\n      bordered = true,\n      hoverable,\n      ...restProps\n    } = props\n\n    return (\n      <div\n        ref={ref}\n        css={[applyMetaContainer(hoverable), applyBoxStyle(props)]}\n        {...deleteCssProps(restProps)}\n      >\n        {cover}\n        <div css={[applyCardMetaBody(size, bordered, cover)]}>\n          {title || description ? (\n            <>\n              {title && <div css={applyCardMetaTitle}>{title}</div>}\n              {description && (\n                <div css={applyCardMetaDescription}>{description}</div>\n              )}\n            </>\n          ) : null}\n          <div css={applyCardMetaFooter}>\n            <div css={applyCardMetaUserContainer}>\n              {avatar && <div css={avatarLayout}>{avatar}</div>}\n              {nickname && <span css={nicknameStyle}>{nickname}</span>}\n            </div>\n            <div css={actionContainer}>\n              <Space size=\"24px\">{actionList}</Space>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  },\n)\n\nCardMeta.displayName = \"CardMeta\"\n"],"names":["applyCard","bordered","hoverable","border","globalColor","illaPrefix","boxShadow","css","applyMetaContainer","applyCardHeader","size","paddingSize","applyCardHeaderTitle","applyCardHeaderExtra","applyCardBody","applyCardMetaBody","cover","avatarLayout","nicknameStyle","actionContainer","applyCardMetaTitle","applyCardMetaDescription","applyCardMetaFooter","applyCardMetaUserContainer","Card","forwardRef","props","ref","title","extra","children","restProps","jsxs","applyBoxStyle","deleteCssProps","jsx","CardMeta","description","actionList","avatar","nickname","Fragment","Space"],"mappings":"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"}