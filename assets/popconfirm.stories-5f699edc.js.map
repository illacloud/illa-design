{"version":3,"file":"popconfirm.stories-5f699edc.js","sources":["../../../../packages/popconfirm/src/style.ts","../../../../packages/popconfirm/src/popconfirm.tsx"],"sourcesContent":["import { css } from \"@emotion/react\"\nimport { TriggerColorScheme } from \"@illa-design/trigger\"\nimport { globalColor, illaPrefix } from \"@illa-design/theme\"\n\nexport const applyTypographyContainer = css`\n  display: flex;\n  flex-direction: column;\n  min-width: 320px;\n  padding: 16px;\n`\n\nexport const applyButtonGroupStyle = css`\n  align-self: end;\n`\n\nexport function applyHeaderStyle(colorScheme: TriggerColorScheme) {\n  const textColor =\n    colorScheme == \"white\"\n      ? globalColor(`--${illaPrefix}-grayBlue-02`)\n      : globalColor(`--${illaPrefix}-white-02`)\n  return css`\n    color: ${textColor};\n    font-size: 16px;\n    font-weight: 500;\n  `\n}\n","import { FC, useContext, useState } from \"react\"\nimport { PopconfirmProps } from \"./interface\"\nimport { Trigger } from \"@illa-design/trigger\"\nimport { Typography } from \"@illa-design/typography\"\nimport {\n  applyButtonGroupStyle,\n  applyHeaderStyle,\n  applyTypographyContainer,\n} from \"./style\"\nimport { Space } from \"@illa-design/space\"\nimport { Button } from \"@illa-design/button\"\nimport {\n  ConfigProviderContext,\n  ConfigProviderProps,\n  def,\n} from \"@illa-design/config-provider\"\nimport { InfoCircleIcon } from \"@illa-design/icon\"\nimport { globalColor, illaPrefix } from \"@illa-design/theme\"\n\nexport const PopConfirm: FC<PopconfirmProps> = (props) => {\n  const {\n    title,\n    cancelText,\n    okText,\n    okColorScheme = \"blue\",\n    okButtonProps,\n    cancelButtonProps,\n    cancelColorScheme = \"gray\",\n    onOk,\n    onCancel,\n    defaultPopupVisible,\n    icon = <InfoCircleIcon color={globalColor(`--${illaPrefix}-blue-03`)} />,\n    colorScheme = \"white\",\n    trigger = \"click\",\n    // must be false\n    closeOnClick = false,\n    popupVisible,\n    onVisibleChange,\n    ...otherProps\n  } = props\n\n  const [confirmVisibleState, setConfirmVisibleState] = useState(\n    defaultPopupVisible ?? false,\n  )\n\n  const configProviderProps = useContext<ConfigProviderProps>(\n    ConfigProviderContext,\n  )\n\n  const locale = configProviderProps?.locale?.popConfirm ?? def.popConfirm\n\n  return (\n    <Trigger\n      onVisibleChange={(visible) => {\n        if (onVisibleChange != undefined) {\n          onVisibleChange(visible)\n        }\n        if (popupVisible == undefined) {\n          setConfirmVisibleState(visible)\n        }\n      }}\n      colorScheme={colorScheme}\n      popupVisible={\n        popupVisible != undefined ? popupVisible : confirmVisibleState\n      }\n      trigger={trigger}\n      closeOnClick={closeOnClick}\n      withoutPadding\n      content={\n        <div css={applyTypographyContainer}>\n          <Typography>\n            {title && (\n              <Space size=\"8px\">\n                {icon}\n                <div css={applyHeaderStyle(colorScheme)}>{title}</div>\n              </Space>\n            )}\n            <div style={{ height: \"16px\" }} />\n          </Typography>\n          <Space css={applyButtonGroupStyle} size=\"16px\" direction=\"horizontal\">\n            <Button\n              colorScheme={cancelColorScheme}\n              onClick={() => {\n                if (onCancel != undefined) {\n                  onCancel()\n                }\n                if (popupVisible == undefined) {\n                  setConfirmVisibleState(false)\n                }\n                onVisibleChange && onVisibleChange(false)\n              }}\n              {...cancelButtonProps}\n            >\n              {cancelText ?? locale[\"cancel\"]}\n            </Button>\n            <Button\n              colorScheme={okColorScheme}\n              onClick={() => {\n                if (onOk != undefined) {\n                  onOk()\n                }\n                if (popupVisible == undefined) {\n                  setConfirmVisibleState(false)\n                }\n                onVisibleChange && onVisibleChange(false)\n              }}\n              {...okButtonProps}\n            >\n              {okText ?? locale[\"confirm\"]}\n            </Button>\n          </Space>\n        </div>\n      }\n      {...otherProps}\n    >\n      {props.children}\n    </Trigger>\n  )\n}\n\nPopConfirm.displayName = \"PopConfirm\"\n"],"names":["applyTypographyContainer","css","applyButtonGroupStyle","applyHeaderStyle","colorScheme","textColor","globalColor","illaPrefix","PopConfirm","props","title","cancelText","okText","okColorScheme","okButtonProps","cancelButtonProps","cancelColorScheme","onOk","onCancel","defaultPopupVisible","icon","jsx","InfoCircleIcon","trigger","closeOnClick","popupVisible","onVisibleChange","otherProps","confirmVisibleState","setConfirmVisibleState","useState","configProviderProps","useContext","ConfigProviderContext","locale","_a","def","Trigger","visible","jsxs","Typography","Space","Button"],"mappings":"u7BAIO,MAAMA,EAA2BC;AAAA;AAAA;AAAA;AAAA;AAAA,EAO3BC,EAAwBD;AAAA;AAAA,EAI9B,SAASE,EAAiBC,EAAiC,CAC1D,MAAAC,EACJD,GAAe,QACXE,EAAY,KAAKC,CAAU,cAAc,EACzCD,EAAY,KAAKC,CAAU,WAAW,EACrC,OAAAN;AAAA,aACII,CAAS;AAAA;AAAA;AAAA,GAItB,CCNO,MAAAG,EAAAC,GAAA,OACL,KAAA,CAAM,MAAAC,EACJ,WAAAC,EACA,OAAAC,EACA,cAAAC,EAAA,OACgB,cAAAC,EAChB,kBAAAC,EACA,kBAAAC,EAAA,OACoB,KAAAC,EACpB,SAAAC,EACA,oBAAAC,EACA,KAAAC,EAAAC,EAAAC,EAAA,CAAA,MAAAhB,EAAA,KAAAC,CAAA,UAAA,EAAA,EACsE,YAAAH,EAAA,QACxD,QAAAmB,EAAA,QACJ,aAAAC,EAAA,GAEK,aAAAC,EACf,gBAAAC,EACA,GAAAC,CACG,EAAAlB,EAGL,CAAAmB,EAAAC,CAAA,EAAAC,EAAA,SAAsDX,GAAA,EAC7B,EAGzBY,EAAAC,EAAA,WAA4BC,CAC1B,EAGFC,IAAAC,EAAAJ,GAAA,YAAAA,EAAA,SAAA,YAAAI,EAAA,aAAAC,EAAA,WAEA,OAAAf,EACEgB,EAAC,CAAA,gBAAAC,GAAA,CAEGZ,GAAA,MACEA,EAAAY,CAAA,EAEFb,GAAA,MACEI,EAAAS,CAAA,CACF,EACF,YAAAlC,EACA,aAAAqB,GAAAG,EAE6C,QAAAL,EAE7C,aAAAC,EACA,eAAA,GACc,QAAAe,EAAA,MAAA,CAAA,IAAAvC,EAAA,SAAA,CAGVuC,EAAAC,EAAA,CAAA,SAAA,CACG9B,GAAA6B,EAAAE,EAAA,CAAA,KAAA,MAAA,SAAA,CAEIrB,EAAAC,EAAA,MAAA,CAAA,IAAAlB,EAAAC,CAAA,EAAA,SAAAM,EAAA,CAC+C,EAAA,EAClDW,EAAA,MAAA,CAAA,MAAA,CAAA,OAAA,MAAA,EAAA,CAE8B,EAAA,EAClCkB,EAAAE,EAAA,CAAA,IAAAvC,EAAA,KAAA,OAAA,UAAA,aAAA,SAAA,CAEEmB,EAAAqB,EAAC,CAAA,YAAA1B,EACc,QAAA,IAAA,CAEXE,GAAA,MACEA,IAEFO,GAAA,MACEI,EAAA,EAAA,EAEFH,GAAAA,EAAA,EAAA,CAAwC,EAC1C,GAAAX,EACI,SAAAJ,GAAAuB,EAAA,MAE0B,CAAA,EAChCb,EACAqB,EAAC,CAAA,YAAA7B,EACc,QAAA,IAAA,CAEXI,GAAA,MACEA,IAEFQ,GAAA,MACEI,EAAA,EAAA,EAEFH,GAAAA,EAAA,EAAA,CAAwC,EAC1C,GAAAZ,EACI,SAAAF,GAAAsB,EAAA,OAEuB,CAAA,CAC7B,EAAA,CACF,EAAA,EACF,GAAAP,EAEE,SAAAlB,EAAA,QAEG,CAAA,CAGb,EAEAD,EAAA,YAAA;;;;;;"}