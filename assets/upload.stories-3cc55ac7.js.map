{"version":3,"file":"upload.stories-3cc55ac7.js","sources":["../../../../packages/icon/src/icons/file-wps.tsx","../../../../packages/upload/src/interface.tsx","../../../../packages/upload/src/request.ts","../../../../packages/upload/src/utils.ts","../../../../packages/upload/src/style.ts","../../../../packages/upload/src/trigger-node.tsx","../../../../packages/upload/src/uploader.tsx","../../../../packages/upload/src/list/uploadProgress.tsx","../../../../packages/upload/src/list/pictureItem.tsx","../../../../packages/upload/src/list/textItem.tsx","../../../../packages/upload/src/list/index.tsx","../../../../packages/upload/src/upload.tsx"],"sourcesContent":["import { createIcon } from \"../create-icon\"\n\nexport const FileWPSIcon = createIcon({\n  title: \"FileWPSIcon\",\n  viewBox: \"0 0 16 20\",\n  path: (\n    <>\n      <mask\n        id=\"mask0_960_3468\"\n        maskUnits=\"userSpaceOnUse\"\n        x=\"2\"\n        y=\"2\"\n        width=\"12\"\n        height=\"16\"\n      >\n        <path\n          d=\"M2.82759 2H10.5075C10.6166 2 10.7213 2.04502 10.7988 2.12526L13.8775 5.31335C13.9559 5.39456 14 5.50515 14 5.62052V17.1351C14 17.6128 13.6295 18 13.1724 18H2.82759C2.37052 18 2 17.6128 2 17.1351V2.86486C2 2.38721 2.37052 2 2.82759 2Z\"\n          fill=\"white\"\n        />\n      </mask>\n      <g mask=\"url(#mask0_960_3468)\">\n        <path\n          d=\"M2.82759 2H10.5075C10.6166 2 10.7213 2.04502 10.7988 2.12526L13.8775 5.31335C13.9559 5.39456 14 5.50515 14 5.62052V17.1351C14 17.6128 13.6295 18 13.1724 18H2.82759C2.37052 18 2 17.6128 2 17.1351V2.86486C2 2.38721 2.37052 2 2.82759 2Z\"\n          fill=\"#1E6FFF\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M10.6777 2H13.9881V5.24324H11.5053C11.0483 5.24324 10.6777 4.88023 10.6777 4.43243V2Z\"\n          fill=\"#99BEFF\"\n        />\n      </g>\n      <path\n        d=\"M8.00417 9.61862L6.89827 13.711C6.88484 13.7607 6.83979 13.7952 6.78834 13.7952H6.13699C6.08605 13.7952 6.04131 13.7614 6.02743 13.7123L4.52778 8.41736C4.51064 8.35685 4.5458 8.29391 4.60631 8.27677C4.6164 8.27391 4.62684 8.27246 4.63734 8.27246H5.29057C5.34248 8.27246 5.38782 8.30757 5.40081 8.35783L6.46798 12.4853L7.57619 8.35681C7.58955 8.30705 7.63465 8.27246 7.68617 8.27246H8.32271C8.37429 8.27246 8.41943 8.30714 8.43273 8.35698L9.53383 12.4843L10.6007 8.35783C10.6137 8.30757 10.6591 8.27246 10.711 8.27246H11.3642C11.4271 8.27246 11.4781 8.32344 11.4781 8.38633C11.4781 8.39682 11.4766 8.40727 11.4738 8.41736L9.97412 13.7123C9.96024 13.7614 9.9155 13.7952 9.86456 13.7952H9.21322C9.16171 13.7952 9.11661 13.7606 9.10325 13.7109L8.00417 9.61862Z\"\n        fill=\"white\"\n      />\n    </>\n  ),\n})\n\nFileWPSIcon.displayName = \"FileWPSIcon\"\n","import React, { ReactNode } from \"react\"\nimport { ProgressProps } from \"@illa-design/progress\"\nimport { ButtonVariant } from \"@illa-design/button\"\n\nexport const STATUS: {\n  [key: string]: UploadStatus\n} = {\n  INIT: \"init\",\n  UPLOADING: \"uploading\",\n  SUCCESS: \"done\",\n  FAIL: \"error\",\n}\n\nexport type UploadStatus = \"init\" | \"uploading\" | \"done\" | \"error\"\n\nexport type CustomIconType = {\n  previewIcon?: ReactNode\n  removeIcon?: ReactNode\n  fileIcon?: ReactNode\n  reuploadIcon?: ReactNode\n  cancelIcon?: ReactNode\n  startIcon?: ReactNode\n  successIcon?: ReactNode\n  fileName?: (file: UploadItem) => ReactNode\n  progressRender?: (\n    file: UploadItem,\n    originDom: ReactNode,\n  ) => React.ReactElement\n  imageRender?: (file: UploadItem) => React.ReactNode\n}\n\nexport interface UploadRequestReturn {\n  abort?: () => void\n  [key: string]: any\n}\n\nexport type UploadRequestProps = (\n  options: RequestOptions,\n) => UploadRequestReturn | void\n\nexport type UploadListType = \"text\" | \"picture\" | \"picture-card\"\n\nexport interface UploadProps {\n  text?: string\n  colorScheme?: string\n  loading?: boolean\n  variant?: ButtonVariant\n  listType?: string\n  defaultFileList?: UploadItem[]\n  imagePreview?: boolean\n  fileList?: UploadItem[]\n  autoUpload?: boolean\n  directory?: boolean\n  accept?: string\n  limit?: number | { maxCount: number; hideOnExceedLimit?: boolean }\n  action?: string\n  disabled?: boolean\n  drag?: boolean\n  multiple?: boolean\n  tip?: string | React.ReactNode\n  headers?: Record<string, string>\n  data?: object | ((any: any) => object)\n  name?: string | ((any: any) => string)\n  progressProps?: Partial<ProgressProps>\n  showUploadList?: boolean | CustomIconType\n  customRequest?: (options: RequestOptions) => UploadRequestReturn | void\n  renderUploadItem?: (\n    originNode: ReactNode,\n    file: UploadItem,\n    fileList: UploadItem[],\n  ) => ReactNode\n  renderUploadList?: (\n    fileList: UploadItem[],\n    uploadListProps: UploadListProps,\n  ) => ReactNode\n  onChange?: (fileList: UploadItem[], file: UploadItem) => void\n  onRemove?: (\n    file: UploadItem,\n    fileList: UploadItem[],\n  ) => boolean | Promise<any>\n  onProgress?: (file: UploadItem, e?: ProgressEvent) => void\n  onReupload?: (file: UploadItem) => void\n  onExceedLimit?: (files: File[], fileList: UploadItem[]) => void\n  onPreview?: (file: UploadItem) => void\n  beforeUpload?: (file: File, filesList: File[]) => boolean | Promise<any>\n  onDrop?: (e: React.DragEvent) => void\n  onDragOver?: (e: React.DragEvent) => void\n  onDragLeave?: (e: React.DragEvent) => void\n}\n\nexport type RequestOptions = Pick<\n  UploadProps,\n  \"headers\" | \"name\" | \"data\" | \"action\"\n> & {\n  onProgress: (percent: number, event?: ProgressEvent) => void\n  onSuccess: (response?: object) => void\n  onError: (response?: object) => void\n  file: File\n}\n\nexport interface UploadFileObj extends File {\n  uid: string\n}\n\nexport interface UploadFile<T = any> {\n  uid: string\n  size?: number\n  name: string\n  fileName?: string\n  lastModified?: number\n  lastModifiedDate?: Date\n  url?: string\n  status?: UploadStatus\n  percent?: number\n  crossOrigin?: React.ImgHTMLAttributes<HTMLImageElement>[\"crossOrigin\"]\n  originFileObj?: UploadFileObj\n  response?: T\n  error?: any\n  linkProps?: any\n  type?: string\n  xhr?: T\n  preview?: string\n}\n\nexport interface UploadListProps {\n  listType?: string\n  fileList?: UploadItem[]\n  showUploadList?: boolean | CustomIconType\n  onUpload?: (file: UploadItem) => void\n  onRemove?: (file: UploadItem) => void\n  onReupload?: (file: UploadItem) => void\n  onPreview?: (file: UploadItem) => void\n  disabled?: boolean\n  renderUploadItem?: (\n    originNode: ReactNode,\n    file: UploadItem,\n    fileList: UploadItem[],\n  ) => ReactNode\n  renderUploadList?: (\n    fileList: UploadItem[],\n    uploadListProps: Omit<UploadListProps, \"renderUploadList\">,\n  ) => ReactNode\n  progressProps?: Partial<ProgressProps>\n}\n\nexport type UploadItem = {\n  uid: string\n  status?: UploadStatus\n  originFile?: File\n  percent?: number\n  response?: object\n  url?: string\n  name?: string\n  children?: ReactNode\n}\n\nexport interface UploaderProps extends UploadProps {\n  limit?: number\n  hide?: boolean\n  children?: React.ReactNode\n  onFileStatusChange?: (file: UploadItem) => void\n}\n\nexport type TriggerNodeProps = {\n  text?: string\n  colorScheme?: string\n  loading?: boolean\n  variant?: ButtonVariant\n  tip?: string | React.ReactNode\n  multiple?: boolean\n  accept?: string\n  disabled?: boolean\n  directory?: boolean\n  drag?: boolean\n  listType?: string\n  onClick: () => void\n  onDrop?: (e: React.DragEvent) => void\n  onDragLeave?: (e: React.DragEvent) => void\n  onDragOver?: (e: React.DragEvent) => void\n  onDragFiles: (files: File[]) => void\n}\n\nexport type UploadInstance = {\n  submit: (file?: UploadItem) => void\n  abort: (file: UploadItem) => void\n  reupload: (file: UploadItem) => void\n}\n\nexport type UploaderInstance = {\n  upload: (file: UploadItem) => void\n  reupload: (file: UploadItem) => void\n  abort: (file?: UploadItem) => void\n}\n\nexport interface UploadProgressProps extends CustomIconType {\n  listType?: UploadListProps[\"listType\"]\n  file: UploadItem\n  progressProps?: Partial<ProgressProps>\n  onReupload?: UploadListProps[\"onReupload\"]\n  onUpload?: UploadListProps[\"onUpload\"]\n}\n\nexport interface InternalDataTransferItem extends DataTransferItem {\n  isFile: boolean\n  file: (cd: (file: File & { webkitRelativePath?: string }) => void) => void\n  createReader: () => any\n  fullPath: string\n  isDirectory: boolean\n  name: string\n}\n\nexport interface UploadListItemProps extends UploadListProps {\n  file: UploadItem\n}\n","import { RequestOptions, UploadRequestProps } from \"./interface\"\nimport { isFunction, isArray } from \"@illa-design/system\"\n\nexport const initialHandler = () => {}\n\nfunction getBody(xhr: XMLHttpRequest) {\n  const text = xhr.responseText || xhr.response\n  if (!text) {\n    return text\n  }\n  try {\n    return JSON.parse(text)\n  } catch (e) {\n    return text\n  }\n}\n\nconst uploadRequestSender: UploadRequestProps = function (\n  options: RequestOptions,\n) {\n  const {\n    onProgress = initialHandler,\n    onError = initialHandler,\n    onSuccess = initialHandler,\n    action,\n    headers = {},\n    name: originName,\n    file,\n    data: originData = {},\n  } = options\n\n  const name = isFunction(originName) ? originName(file) : originName\n  const data = isFunction(originData) ? originData(file) : originData\n  const xhr = new XMLHttpRequest()\n  if (onProgress && xhr.upload) {\n    xhr.upload.onprogress = function (event: ProgressEvent) {\n      let percent = 0\n      if (event.total > 0) {\n        percent = (event.loaded / event.total) * 100\n      }\n      onProgress(percent, event)\n    }\n  }\n  xhr.onerror = function error(e) {\n    onError(e)\n  }\n  xhr.onload = function onload() {\n    if (xhr.status < 200 || xhr.status >= 300) {\n      return onError(getBody(xhr))\n    }\n    onSuccess(getBody(xhr))\n  }\n  const formData = new FormData()\n  if (data) {\n    Object.keys(data).forEach((key) => {\n      const value = data[key]\n      if (isArray(value)) {\n        value.forEach((item) => {\n          formData.append(`${key}[]`, item)\n        })\n      }\n      formData.append(key, value)\n    })\n  }\n  formData.append(name || \"file\", file)\n\n  xhr.open(\"post\", action || \"\", true)\n\n  Object.keys(headers).forEach((h) => {\n    if (headers[h] !== null) {\n      xhr.setRequestHeader(h, headers[h])\n    }\n  })\n  xhr.send(formData)\n  return {\n    abort() {\n      xhr.abort()\n    },\n  }\n}\n\nexport default uploadRequestSender\n","import { isArray, isFunction } from \"@illa-design/system\"\nimport { UploadItem, InternalDataTransferItem } from \"./interface\"\nimport {\n  FileDefaultIcon,\n  FileExcelIcon,\n  FileMusicIcon,\n  FilePdfIcon,\n  FilePictureIcon,\n  FilePPTIcon,\n  FileVideoIcon,\n  FileWordIcon,\n  FileWPSIcon,\n} from \"@illa-design/icon\"\nimport { KeyboardEvent } from \"react\"\n\nexport const getIconType = (file: UploadItem) => {\n  let type = \"\"\n  let fileExtension = \"\"\n\n  const name = file.name || \"\"\n  fileExtension = name.split(\".\").pop() || \"\"\n  if (!fileExtension) {\n    if (file.originFile && file.originFile.type) {\n      fileExtension =\n        (file.originFile.type.split(\"/\").pop() || \"\").split(\".\").pop() || \"\"\n    }\n  }\n\n  type = fileExtension\n  if (\n    [\n      \"png\",\n      \"jpg\",\n      \"jpeg\",\n      \"bmp\",\n      \"gif\",\n      \"svg\",\n      \"svg+xml\",\n      \"webp\",\n      \"jfif\",\n      \"dpg\",\n      \"ico\",\n      \"heic\",\n      \"heif\",\n    ].indexOf(fileExtension) > -1\n  ) {\n    type = \"image\"\n  } else if ([\"mp4\", \"m2v\", \"mkv\", \"mpeg\"].indexOf(fileExtension) > -1) {\n    type = \"video\"\n  } else if ([\"mp3\", \"wav\", \"wmv\"].indexOf(fileExtension) > -1) {\n    type = \"audio\"\n  } else if (\n    [\"doc\", \"docx\", \"msword\", \"document\"].indexOf(fileExtension) > -1\n  ) {\n    type = \"doc\"\n  } else if ([\"xls\", \"xlsx\", \"sheet\", \"ms-excel\"].indexOf(fileExtension) > -1) {\n    type = \"excel\"\n  } else if (\n    [\"ppt\", \"pptx\", \"ms-powerpoint\", \"presentation\"].indexOf(fileExtension) > -1\n  ) {\n    type = \"ppt\"\n  }\n\n  if (type.indexOf(\"ppt\") > -1) {\n    return FilePPTIcon\n  }\n  if (type.indexOf(\"doc\") > -1) {\n    return FileWordIcon\n  }\n  if (type.indexOf(\"excel\") > -1) {\n    return FileExcelIcon\n  }\n  if (type.indexOf(\"image\") > -1) {\n    return FilePictureIcon\n  }\n  if (type.indexOf(\"pdf\") > -1) {\n    return FilePdfIcon\n  }\n  if (type.indexOf(\"audio\") > -1) {\n    return FileMusicIcon\n  }\n  if (type.indexOf(\"video\") > -1) {\n    return FileVideoIcon\n  }\n  if (type.indexOf(\"wps\") > -1) {\n    return FileWPSIcon\n  }\n  return FileDefaultIcon\n}\n\nexport const isAcceptFile = (\n  file: File,\n  accept?: string | string[],\n): boolean => {\n  if (accept && file) {\n    const accepts = isArray(accept)\n      ? accept\n      : accept\n          .split(\",\")\n          .map((x) => x.trim())\n          .filter((x) => x)\n    const fileExtension = (\n      file.name.indexOf(\".\") > -1 ? `.${file.name.split(\".\").pop()}` : \"\"\n    ).toLowerCase()\n    return accepts.some((type) => {\n      const typeText = type && type.toLowerCase()\n      const fileType = (file.type || \"\").toLowerCase()\n      const baseFileType = fileType.split(\"/\")[0] // audio/mpeg => audio;\n      if (/^\\*(\\/\\*)?$/.test(typeText)) {\n        return true\n      }\n      if (\n        typeText === fileType ||\n        `${baseFileType}${fileExtension.replace(\".\", \"/\")}` === typeText\n      ) {\n        return true\n      }\n      if (/\\/\\*/.test(typeText)) {\n        // image/*\n        return fileType.replace(/\\/.*$/, \"\") === typeText.replace(/\\/.*$/, \"\")\n      }\n      if (/\\..*/.test(typeText)) {\n        // .jpg\n        let affixList = [typeText]\n        // accept=\".jpg\", jpeg\n        if (typeText === \".jpg\" || typeText === \".jpeg\") {\n          affixList = [\".jpg\", \".jpeg\"]\n        }\n        return affixList.includes(fileExtension)\n      }\n      return false\n    })\n  }\n  return !!file\n}\n\nexport const getAcceptedFiles = (fileList: FileList, accept?: string) => {\n  if (!fileList) {\n    return\n  }\n  let files = [].slice.call(fileList)\n  if (accept) {\n    files = files.filter((file) => {\n      return isAcceptFile(file, accept)\n    })\n  }\n  return files\n}\n\nexport const loopDirectory = (\n  items: InternalDataTransferItem[],\n  callback: (files: File[]) => void,\n  accept?: string | string[],\n) => {\n  const files: File[] = []\n  let restFileCount = 0\n  const onFinish = () => {\n    !restFileCount && callback(files)\n  }\n  const _loopDirectory = (item: InternalDataTransferItem) => {\n    restFileCount += 1\n    if (item.isFile) {\n      item.file((file) => {\n        restFileCount -= 1\n        if (isAcceptFile(file, accept)) {\n          Object.defineProperty(file, \"webkitRelativePath\", {\n            value: item.fullPath.replace(/^\\//, \"\"),\n          })\n          files.push(file)\n        }\n        onFinish()\n      })\n      return\n    } else if (item.isDirectory) {\n      const reader = item.createReader()\n      let flag = false\n      const readEntries = () => {\n        reader.readEntries((entries: InternalDataTransferItem[]) => {\n          if (!flag) {\n            restFileCount -= 1\n            flag = true\n          }\n          if (entries.length === 0) {\n            onFinish()\n          } else {\n            readEntries() // the maximum files read using readEntries is 100\n            entries.forEach(_loopDirectory)\n          }\n        })\n      }\n      readEntries()\n      return\n    }\n    restFileCount -= 1\n    onFinish()\n  }\n\n  items.forEach((item: DataTransferItem) => {\n    if (item.webkitGetAsEntry) {\n      _loopDirectory(item.webkitGetAsEntry() as any)\n    }\n  })\n}\n\nexport const getFileURL = (file: UploadItem) => {\n  const { originFile } = file\n  const url =\n    file.url ||\n    (file?.response &&\n      file?.response.hasOwnProperty(\"url\") &&\n      (file.response as { url: string }).url) ||\n    undefined\n  return url !== undefined\n    ? file.url\n    : originFile && isFunction(URL.createObjectURL)\n    ? URL.createObjectURL(originFile)\n    : undefined\n}\n\nexport const handleKeyDown = (\n  event: KeyboardEvent<HTMLSpanElement>,\n  callback?: () => void,\n) => {\n  const keyCode = event.code\n  if (keyCode === \"Enter\") {\n    callback?.()\n  }\n}\n\nconst extname = (url: string = \"\") => {\n  const temp = url.split(\"/\")\n  const filename = temp[temp.length - 1]\n  const filenameWithoutSuffix = filename.split(/#|\\?/)[0]\n  return (/\\.[^./\\\\]*$/.exec(filenameWithoutSuffix) || [\"\"])[0]\n}\n\nexport const isImageUrl = (file: UploadItem) => {\n  if (file.originFile && file.originFile.type) {\n    return file.originFile.type.indexOf(\"image/\") === 0\n  }\n  const url: string = (file.url || \"\") as string\n  const extension = extname(url)\n\n  if (\n    /^data:image\\//.test(url) ||\n    /(webp|svg|png|gif|jpg|jpeg|jfif|bmp|dpg|ico|heic|heif)$/i.test(extension)\n  ) {\n    return true\n  }\n  if (/^data:/.test(url)) {\n    // other file types of base64\n    return false\n  }\n  if (extension) {\n    // other file types which have extension\n    return false\n  }\n  return true\n}\n","import { css } from \"@emotion/react\"\nimport { globalColor, illaPrefix } from \"@illa-design/theme\"\n\nexport const overflowEllipsisCommonStyle = css`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport const getUploadListContainerStyle = (type: string = \"text\") => {\n  if (type === \"picture-card\") {\n    return css`\n      display: inline;\n      vertical-align: top;\n      width: 100%;\n    `\n  }\n  return css`\n    margin-top: 16px;\n    width: 100%;\n  `\n}\n\nexport const uploadListItemStyle = css`\n  width: 100%;\n  &:not(:last-child) {\n    margin-bottom: 16px;\n  }\n  border-radius: 2px;\n`\n\nexport const getTextItemContainerStyle = (listType: string = \"text\") => {\n  const paddingStyle =\n    listType === \"text\"\n      ? css`\n          padding: 7px 12px;\n        `\n      : css`\n          padding: 12px;\n        `\n\n  const basicStyle = css`\n    display: flex;\n    gap: 12px;\n    box-sizing: border-box;\n    ${paddingStyle};\n    width: 100%;\n    border-radius: 2px;\n    align-items: center;\n    justify-content: space-between;\n    background-color: ${globalColor(`--${illaPrefix}-grayBlue-09`)};\n  `\n  if (listType === \"text\") {\n    return css`\n      ${basicStyle};\n      min-height: 36px;\n    `\n  }\n  return css`\n    ${basicStyle};\n    min-height: 64px;\n  `\n}\n\nexport const textItemOperationIconStyle = css`\n  display: flex;\n  gap: 16px;\n  flex-shrink: 1;\n`\n\nexport const getTextItemContentContainerStyle = (listType: string = \"text\") => {\n  return css`\n    display: flex;\n    flex-wrap: nowrap;\n    overflow: hidden;\n    gap: 12px;\n    width: 100%;\n    box-sizing: border-box;\n    border-radius: 2px;\n  `\n}\n\nexport const textItemStyle = css`\n  display: flex;\n  flex-shrink: 1;\n  flex-grow: 1;\n  align-items: center;\n  ${overflowEllipsisCommonStyle};\n`\n\nexport const textItemImageStyle = css`\n  width: 40px;\n  height: 40px;\n  flex-shrink: 0;\n  display: flex;\n  border-radius: 4px;\n  & span {\n    display: flex;\n    width: 100%;\n    height: 100%;\n  }\n  & img,\n  & svg {\n    width: 100%;\n    height: 100%;\n    border-radius: 4px;\n  }\n`\n\nexport const textItemMainContentStyle = css`\n  display: flex;\n  ${overflowEllipsisCommonStyle};\n  flex-wrap: nowrap;\n  flex-shrink: 1;\n  flex-grow: 1;\n  align-items: center;\n`\n\nexport const textItemIconStyle = css`\n  width: 16px;\n  height: 20px;\n  display: flex;\n  flex-shrink: 0;\n  justify-content: center;\n  align-self: center;\n  align-items: center;\n  & > svg {\n    width: 100%;\n    height: 100%;\n  }\n`\n\nexport const getTextItemNameStyle = (status: string = \"init\") => {\n  let errorStyle = css``\n  if (status === \"error\") {\n    errorStyle = css`\n      color: ${globalColor(`--${illaPrefix}-red-03`)};\n    `\n  }\n  return css`\n    text-decoration: none;\n    font-size: 14px;\n    ${overflowEllipsisCommonStyle};\n    line-height: 22px;\n    color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n    ${errorStyle};\n  `\n}\n\nexport const textItemProgressStyle = css`\n  margin-left: auto;\n  width: auto;\n`\n\nexport const textItemDeleteIconStyle = css`\n  display: flex;\n  align-self: center;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-05`)};\n  cursor: pointer;\n  width: 16px;\n  height: 16px;\n  transition: color 200ms ease-in-out;\n  &:hover {\n    color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n  }\n  & > svg {\n    margin: auto;\n    width: 12px;\n    height: 12px;\n  }\n`\n\nexport const triggerNodeContainerStyle = css`\n  cursor: pointer;\n  display: inline-block;\n  vertical-align: top;\n  width: 100%;\n`\n\nexport const inputStyle = css`\n  visibility: hidden;\n  display: inline-block;\n  width: 100px;\n  height: 100px;\n`\n\nexport const inputContainerStyle = css`\n  width: 100px;\n  height: 100px;\n  position: relative;\n`\n\nexport const inputUploadStyle = css`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100px;\n  height: 100px;\n  border: 2px;\n  background-color: ${globalColor(`--${illaPrefix}-grayBlue-09`)};\n`\n\nexport const inputContentContainer = css`\n  margin: 32px 28px 22px 29px;\n`\n\nexport const listTypeButtonStyle = css`\n  width: 100%;\n  max-width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  padding: 5px 16px;\n  align-items: center;\n`\n\nexport const getPictureCardContainerStyle = (disabled: boolean) => {\n  const basicStyle = css`\n    width: 100px;\n    height: 100px;\n    border-radius: 2px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    box-sizing: border-box;\n  `\n  if (disabled) {\n    return css`\n      ${basicStyle};\n      background-color: ${globalColor(`--${illaPrefix}-grayBlue-09`)};\n      color: ${globalColor(`--${illaPrefix}-grayBlue-05`)};\n    `\n  }\n  return css`\n    ${basicStyle};\n    background-color: ${globalColor(`--${illaPrefix}-grayBlue-09`)};\n    color: ${globalColor(`--${illaPrefix}-grayBlue-04`)};\n    transition: background-color 200ms ease-in-out;\n    & svg {\n      color: ${globalColor(`--${illaPrefix}-grayBlue-03`)};\n    }\n    &:hover {\n      background-color: ${globalColor(`--${illaPrefix}-grayBlue-08`)};\n    }\n    &:active {\n      background-color: ${globalColor(`--${illaPrefix}-blue-08`)};\n      & svg {\n        color: ${globalColor(`--${illaPrefix}-blue-03`)};\n      }\n    }\n  `\n}\n\nexport const pictureCardContentStyle = css`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n`\n\nexport const pictureCardIconStyle = css`\n  width: 16px;\n  height: 16px;\n  align-self: center;\n`\n\nexport const pictureCardTextStyle = css`\n  flex-grow: 1;\n  font-weight: 400;\n  font-size: 14px;\n  text-align: center;\n  line-height: 22px;\n  ${overflowEllipsisCommonStyle};\n`\n\nexport const getDragContainerStyle = (disabled: boolean) => {\n  const basicStyle = css`\n    width: 100%;\n    padding: 24px 16px 48px 16px;\n    box-sizing: border-box;\n    background-color: ${globalColor(`--${illaPrefix}-grayBlue-09`)};\n    border-radius: 2px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  `\n  if (disabled) {\n    return css`\n      ${basicStyle};\n      cursor: not-allowed;\n      background-color: ${globalColor(`--${illaPrefix}-grayBlue-09`)};\n      color: ${globalColor(`--${illaPrefix}-grayBlue-05`)};\n    `\n  }\n  return css`\n    ${basicStyle};\n    color: ${globalColor(`--${illaPrefix}-grayBlue-03`)};\n    transition: background-color 200ms ease-in-out;\n    &:hover {\n      background-color: ${globalColor(`--${illaPrefix}-grayBlue-08`)};\n    }\n    &:active {\n      background-color: ${globalColor(`--${illaPrefix}-blue-08`)};\n      & svg {\n        color: ${globalColor(`--${illaPrefix}-blue-03`)};\n      }\n    }\n  `\n}\n\nexport const dragIconStyle = css`\n  width: 64px;\n  height: 64px;\n  padding: 24px;\n  box-sizing: border-box;\n  display: flex;\n  justify-content: center;\n`\n\nexport const dragContentContainerStyle = css`\n  flex: 1;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  gap: 4px;\n`\n\nexport const dragTextStyle = css`\n  min-height: 24px;\n  font-size: 16px;\n  font-weight: 500;\n  text-align: center;\n  word-wrap: break-word;\n`\n\nexport const dragTipsStyle = css`\n  flex: 1;\n  word-wrap: break-word;\n  text-align: center;\n  font-size: 14px;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-04`)};\n`\n\nexport const successIconStyle = css`\n  color: ${globalColor(`--${illaPrefix}-green-03`)};\n  display: flex;\n  width: 16px;\n  height: 16px;\n  & > svg {\n    margin: auto;\n    width: 12px;\n    height: 12px;\n  }\n`\n\nexport const uploadProgressStatus = css`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  width: 16px;\n  height: 16px;\n`\n\nexport const uploadProgressStyle = css`\n  position: absolute;\n  transform: translateX(-50%) translateY(-50%);\n  top: 50%;\n  left: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 16px;\n  height: 16px;\n  font-size: 16px;\n  color: ${globalColor(`--${illaPrefix}-white-03`)};\n`\n\nexport const uploadProgressFailStyle = css`\n  font-size: 14px;\n  flex: 1;\n  ${overflowEllipsisCommonStyle};\n  cursor: pointer;\n  color: ${globalColor(`--${illaPrefix}-blue-03`)};\n`\n\nexport const pictureItemUploading = css`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const pictureItemStyle = css`\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  text-align: center;\n  border-radius: 2px;\n  vertical-align: middle;\n  background-color: ${globalColor(`--${illaPrefix}-white-01`)};\n  & > img {\n    width: 100%;\n    height: 100%;\n  }\n`\n\nexport const pictureItemMask = css`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  cursor: pointer;\n  text-align: center;\n  font-size: 16px;\n  line-height: 100px;\n  opacity: 0;\n  transition: opacity 200ms ease-in-out;\n  background: ${globalColor(`--${illaPrefix}-blackAlpha-04`)};\n  &:hover {\n    opacity: 1;\n    display: block;\n  }\n`\n\nexport const pictureItemUploadingMask = css`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  cursor: pointer;\n  text-align: center;\n  font-size: 16px;\n  line-height: 100px;\n  transition: opacity 200ms ease-in-out;\n  background: ${globalColor(`--${illaPrefix}-blackAlpha-04`)};\n  opacity: 1;\n  display: block;\n  & svg {\n    color: ${globalColor(`--${illaPrefix}-white-01`)};\n  }\n`\n\nexport const pictureItemOperationsStyle = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  color: ${globalColor(`--${illaPrefix}-white-02`)};\n`\n\nexport const pictureItemPreviewStyle = css`\n  color: ${globalColor(`--${illaPrefix}-white-02`)};\n  text-decoration: none;\n`\n\nexport const errorImageContainerStyle = css`\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  color: ${globalColor(`--${illaPrefix}-red-03`)};\n  border: 1px solid ${globalColor(`--${illaPrefix}-red-03`)};\n  border-radius: 4px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nexport const pictureItemIconStyle = css`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  & img,\n  & svg {\n    width: 100%;\n    height: 100%;\n    display: block;\n  }\n`\n\nexport const errorListItemStyle = css`\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  color: ${globalColor(`--${illaPrefix}-red-03`)};\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-items: center;\n`\n\nexport const errorImageStyle = css`\n  width: 50%;\n  height: 50%;\n  display: block;\n  margin: auto;\n`\n\nexport const errorImageNameStyle = css`\n  font-size: 14px;\n  ${overflowEllipsisCommonStyle};\n`\n\nexport const listItemStyle = css`\n  display: inline-block;\n  vertical-align: center;\n  margin-top: 0;\n  width: 100px;\n  height: 100px;\n  border-radius: 4px;\n  margin-right: 8px;\n  margin-bottom: 8px;\n  overflow: hidden;\n`\n\nexport const getUploaderContinerStyle = (type: string) => {\n  if (type === \"picture-card\") {\n    return css`\n      display: inline-block;\n      max-width: 100%;\n    `\n  }\n  return css`\n    width: 100%;\n  `\n}\n","import {\n  useState,\n  useContext,\n  PropsWithChildren,\n  isValidElement,\n  cloneElement,\n  useEffect,\n  KeyboardEvent,\n  DragEvent,\n  useCallback,\n} from \"react\"\nimport { Button } from \"@illa-design/button\"\nimport { UploadIcon, AddIcon } from \"@illa-design/icon\"\nimport { TriggerNodeProps } from \"./interface\"\nimport {\n  ConfigProviderContext,\n  ConfigProviderProps,\n  def,\n} from \"@illa-design/config-provider\"\nimport { getAcceptedFiles, loopDirectory } from \"./utils\"\nimport {\n  dragContentContainerStyle,\n  dragIconStyle,\n  dragTextStyle,\n  dragTipsStyle,\n  getDragContainerStyle,\n  getPictureCardContainerStyle,\n  listTypeButtonStyle,\n  pictureCardContentStyle,\n  pictureCardIconStyle,\n  pictureCardTextStyle,\n  triggerNodeContainerStyle,\n} from \"./style\"\n\nconst TriggerNode = (props: PropsWithChildren<TriggerNodeProps>) => {\n  const configProviderProps = useContext<ConfigProviderProps>(\n    ConfigProviderContext,\n  )\n  const locale = configProviderProps?.locale?.upload ?? def.upload\n  const [isDragging, setIsDragging] = useState(false)\n  const [dragEnterCount, setDragEnterCount] = useState(0)\n\n  const {\n    tip,\n    text,\n    colorScheme,\n    variant,\n    loading,\n    children,\n    disabled,\n    drag,\n    listType,\n    accept,\n    directory,\n    multiple,\n    onClick,\n    onDrop,\n    onDragFiles,\n    onDragLeave,\n    onDragOver,\n  } = props\n\n  const cloneChildrenProps = {\n    disabled,\n  }\n\n  useEffect(() => {\n    setDragEnterCount(0)\n  }, [isDragging])\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLDivElement>) => {\n      const keyCode = event.code\n      if (keyCode === \"Enter\") {\n        onClick?.()\n      }\n    },\n    [onClick],\n  )\n\n  const handleDragEnter = useCallback(() => {\n    setDragEnterCount(dragEnterCount + 1)\n  }, [dragEnterCount])\n\n  const handleDragLeave = useCallback(\n    (e: DragEvent) => {\n      e.preventDefault()\n      if (dragEnterCount === 0) {\n        setIsDragging(false)\n        onDragLeave?.(e)\n      } else {\n        setDragEnterCount(dragEnterCount - 1)\n      }\n    },\n    [dragEnterCount, onDragLeave],\n  )\n\n  const handleDragOver = useCallback(\n    (e: DragEvent) => {\n      e.preventDefault()\n      if (!isDragging) {\n        setIsDragging(true)\n        onDragOver?.(e)\n      }\n    },\n    [isDragging, onDragOver],\n  )\n\n  const handleDrop = useCallback(\n    (e: DragEvent) => {\n      e.preventDefault()\n      if (!drag) {\n        return\n      }\n      setIsDragging(false)\n      if (directory) {\n        loopDirectory(\n          Array.prototype.slice.call(e.dataTransfer.items),\n          (files: File[]) => {\n            onDragFiles?.(files)\n          },\n          accept,\n        )\n      } else {\n        const files = getAcceptedFiles(e.dataTransfer.files, accept)\n        onDragFiles?.((multiple ? files : files?.slice(0, 1) || []) as File[])\n      }\n      onDrop?.(e)\n    },\n    [drag, directory, onDrop, accept, onDragFiles, multiple],\n  )\n\n  const events =\n    disabled || loading\n      ? {}\n      : {\n          onDragEnter: handleDragEnter,\n          onDragLeave: handleDragLeave,\n          onDragOver: handleDragOver,\n          onDrop: handleDrop,\n          onClick: onClick,\n          onKeyDown: handleKeyDown,\n        }\n\n  if (children === null) {\n    return null\n  }\n\n  return (\n    <div css={triggerNodeContainerStyle} {...events}>\n      {isValidElement(children) ? (\n        <div>{cloneElement(children, cloneChildrenProps)}</div>\n      ) : listType === \"picture-card\" ? (\n        <div\n          css={getPictureCardContainerStyle(!!disabled)}\n          tabIndex={0}\n          aria-label={locale.upload}\n        >\n          <div css={pictureCardContentStyle}>\n            <span css={pictureCardIconStyle}>\n              <AddIcon />\n            </span>\n            <div css={pictureCardTextStyle}>{text ?? locale.upload}</div>\n          </div>\n        </div>\n      ) : drag ? (\n        <div\n          tabIndex={0}\n          aria-label={locale.dragTip}\n          css={getDragContainerStyle(!!disabled)}\n        >\n          <div css={dragIconStyle}>\n            <AddIcon />\n          </div>\n          <div css={dragContentContainerStyle}>\n            <div css={dragTextStyle}>{text ?? locale.dragTip}</div>\n            {tip && <div css={dragTipsStyle}>{tip}</div>}\n          </div>\n        </div>\n      ) : (\n        <Button\n          {...cloneChildrenProps}\n          aria-label={locale.upload}\n          type=\"button\"\n          size=\"medium\"\n          loading={loading}\n          colorScheme={colorScheme}\n          variant={variant}\n          css={listTypeButtonStyle}\n          leftIcon={<UploadIcon />}\n        >\n          {text ?? locale.upload}\n        </Button>\n      )}\n    </div>\n  )\n}\n\nexport default TriggerNode\n","import {\n  forwardRef,\n  useState,\n  useRef,\n  useImperativeHandle,\n  useCallback,\n  useEffect,\n} from \"react\"\nimport {\n  UploaderProps,\n  UploadItem,\n  STATUS,\n  RequestOptions,\n  UploaderInstance,\n} from \"./interface\"\nimport uploadRequestSender from \"./request\"\nimport { AnimatePresence, motion } from \"framer-motion\"\nimport TriggerNode from \"./trigger-node\"\nimport { isFunction, isFile, isNumber } from \"@illa-design/system\"\nimport { isAcceptFile } from \"./utils\"\nimport { v4 } from \"uuid\"\n\nconst Uploader = forwardRef<UploaderInstance, UploaderProps>((props, ref) => {\n  const [uploadRequests, setUploadrequests] = useState<{ [key: string]: any }>(\n    {},\n  )\n  const inputRef = useRef<HTMLInputElement>(null)\n\n  const {\n    accept,\n    multiple,\n    children,\n    tip,\n    disabled,\n    drag,\n    hide,\n    listType,\n    directory,\n    limit,\n    fileList,\n    action,\n    headers,\n    text,\n    colorScheme,\n    variant,\n    loading,\n    name,\n    autoUpload,\n    data,\n    beforeUpload,\n    customRequest,\n    onExceedLimit,\n    onDrop,\n    onDragOver,\n    onDragLeave,\n    onFileStatusChange,\n  } = props\n\n  useEffect(() => {\n    return () => {\n      abort()\n    }\n  }, [])\n\n  const deleteUploadRequest = useCallback(\n    (uid: string) => {\n      const newValue = { ...uploadRequests }\n      delete newValue[uid]\n      setUploadrequests(newValue)\n    },\n    [uploadRequests],\n  )\n\n  const updateFileStatus = useCallback(\n    (file: UploadItem) => {\n      onFileStatusChange && onFileStatusChange(file)\n    },\n    [onFileStatusChange],\n  )\n\n  const upload = async (file: UploadItem) => {\n    await uploadFile(file)\n  }\n\n  const abort = useCallback(\n    (file?: UploadItem) => {\n      if (file) {\n        const req = uploadRequests[file.uid]\n        if (req) {\n          req.abort && req.abort()\n          updateFileStatus({\n            ...file,\n            status: STATUS.FAIL,\n          })\n          deleteUploadRequest(file.uid)\n        }\n      } else {\n        // when component unmount, delete all request\n        Object.keys(uploadRequests).forEach((uid) => {\n          const req = uploadRequests[uid]\n          if (req && req.abort) {\n            req.abort()\n          }\n          deleteUploadRequest(uid)\n        })\n      }\n    },\n    [deleteUploadRequest, updateFileStatus, uploadRequests],\n  )\n\n  const reupload = async (file: UploadItem) => {\n    await uploadFile({\n      ...file,\n      percent: 0,\n      status: STATUS.UPLOADING,\n    })\n  }\n\n  const getTargetFile = useCallback(\n    (file: UploadItem) => {\n      const key = \"uid\" in file ? \"uid\" : \"name\"\n      return fileList?.find((item) => item[key] === file[key])\n    },\n    [fileList],\n  )\n\n  const uploadFile = useCallback(\n    (file: UploadItem) => {\n      const targetFile = getTargetFile(file) || file\n      const onProgress = (percent: number, event?: ProgressEvent) => {\n        if (targetFile) {\n          targetFile.status = STATUS.UPLOADING\n          targetFile.percent = percent\n          props.onProgress?.(targetFile, event)\n        }\n      }\n      const onSuccess = (response?: object) => {\n        if (targetFile) {\n          targetFile.status = STATUS.SUCCESS\n          targetFile.response = response\n          updateFileStatus(targetFile)\n        }\n        deleteUploadRequest(file.uid)\n      }\n      const onError = (response?: object) => {\n        if (targetFile) {\n          targetFile.status = STATUS.FAIL\n          targetFile.response = response\n          updateFileStatus(targetFile)\n        }\n        deleteUploadRequest(file.uid)\n      }\n      const options = {\n        onProgress,\n        onSuccess,\n        onError,\n        headers,\n        name,\n        file: file.originFile,\n        data,\n      }\n      updateFileStatus(file)\n      let request: any\n      if (customRequest) {\n        request = customRequest(options as RequestOptions)\n      } else if (action) {\n        request = uploadRequestSender({ ...options, action } as RequestOptions)\n      }\n      setUploadrequests((requests) => ({\n        ...requests,\n        [file.uid]: request,\n      }))\n    },\n    [\n      action,\n      customRequest,\n      data,\n      deleteUploadRequest,\n      getTargetFile,\n      headers,\n      name,\n      props.onProgress,\n      updateFileStatus,\n    ],\n  )\n\n  const uploadSingleFile = useCallback(\n    (file: File, index: number) => {\n      const uploadItem: UploadItem = {\n        uid: v4(),\n        originFile: file,\n        percent: 0,\n        status: STATUS.INIT,\n        name: file.name,\n      }\n      updateFileStatus(uploadItem)\n      if (autoUpload) {\n        setTimeout(async () => {\n          await uploadFile({\n            ...uploadItem,\n            status: STATUS.UPLOADING,\n          })\n        }, 0)\n      }\n    },\n    [autoUpload, updateFileStatus, uploadFile],\n  )\n\n  const handleUploadedFiles = useCallback(\n    (files: File[]) => {\n      if (\n        isNumber(limit) &&\n        limit < (fileList ? fileList.length : 0) + files.length\n      ) {\n        return onExceedLimit && onExceedLimit(files, fileList || [])\n      }\n\n      files.forEach((file, index) => {\n        if (isAcceptFile(file, accept) || !directory) {\n          if (isFunction(beforeUpload)) {\n            Promise.resolve(beforeUpload(file, files))\n              .then((val) => {\n                if (val !== false) {\n                  const newFile = isFile(val) ? val : file\n                  uploadSingleFile(newFile as File, index)\n                }\n              })\n              .catch((e) => {\n                console.error(e)\n              })\n          } else {\n            uploadSingleFile(file, index)\n          }\n        }\n      })\n    },\n    [\n      limit,\n      fileList,\n      onExceedLimit,\n      accept,\n      directory,\n      beforeUpload,\n      uploadSingleFile,\n    ],\n  )\n\n  const handleTriggerClick = useCallback(() => {\n    if (disabled) {\n      return\n    }\n    inputRef.current && inputRef.current.click()\n  }, [disabled])\n\n  const handleUploadFileChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const files = e.target.files\n      if (files) {\n        handleUploadedFiles([].slice.call(files))\n        if (inputRef.current) {\n          inputRef.current.value = \"\"\n        }\n      }\n    },\n    [handleUploadedFiles],\n  )\n\n  useImperativeHandle(ref, () => {\n    return {\n      upload,\n      reupload,\n      abort,\n    }\n  })\n\n  return (\n    <>\n      <input\n        key=\"upload-input\"\n        ref={inputRef}\n        style={{ display: \"none\" }}\n        type=\"file\"\n        accept={accept}\n        multiple={multiple}\n        {...(directory ? { webkitdirectory: \"true\" } : {})}\n        onChange={handleUploadFileChange}\n        onClick={(e) => {\n          e.stopPropagation()\n        }}\n      />\n      <AnimatePresence>\n        {!hide && (\n          <motion.div\n            key=\"trigger-transition\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            transition={{\n              duration: 1,\n              default: {\n                ease: \"easeInOut\",\n              },\n            }}\n          >\n            <TriggerNode\n              directory={directory}\n              tip={tip}\n              multiple={multiple}\n              accept={accept}\n              text={text}\n              colorScheme={colorScheme}\n              variant={variant}\n              loading={loading}\n              disabled={disabled}\n              drag={drag}\n              listType={listType}\n              onDrop={onDrop}\n              onDragOver={onDragOver}\n              onDragLeave={onDragLeave}\n              onDragFiles={handleUploadedFiles}\n              onClick={handleTriggerClick}\n            >\n              {children}\n            </TriggerNode>\n          </motion.div>\n        )}\n      </AnimatePresence>\n      {tip && listType !== \"picture-card\" && !drag ? (\n        <div key=\"trigger-tip\">{tip}</div>\n      ) : null}\n    </>\n  )\n})\n\nUploader.displayName = \"Uploader\"\n\nexport default Uploader\n","import { FC, useContext } from \"react\"\nimport { STATUS, UploadProgressProps } from \"../interface\"\nimport { Progress } from \"@illa-design/progress\"\nimport { UploadIcon, SuccessIcon } from \"@illa-design/icon\"\nimport { isFunction } from \"@illa-design/system\"\nimport {\n  ConfigProviderContext,\n  ConfigProviderProps,\n  def,\n} from \"@illa-design/config-provider\"\nimport {\n  successIconStyle,\n  uploadProgressFailStyle,\n  uploadProgressStatus,\n} from \"../style\"\nimport { handleKeyDown } from \"../utils\"\nimport { globalColor, illaPrefix } from \"@illa-design/theme\"\n\nconst UploadProgress: FC<UploadProgressProps> = (props) => {\n  const { file, progressProps, progressRender, onReupload, onUpload } = props\n  const configProviderProps = useContext<ConfigProviderProps>(\n    ConfigProviderContext,\n  )\n  const locale = configProviderProps?.locale?.upload ?? def.upload\n  const { status, percent = 0 } = file\n  const progressStatus =\n    status === STATUS.FAIL\n      ? \"error\"\n      : status === STATUS.SUCCESS\n      ? \"success\"\n      : \"normal\"\n\n  const handleFileReupload = () => {\n    onReupload && onReupload(file)\n  }\n\n  const dom = (\n    <>\n      {status === STATUS.FAIL && props.reuploadIcon !== null && (\n        <span\n          onClick={handleFileReupload}\n          css={uploadProgressFailStyle}\n          tabIndex={0}\n          role=\"button\"\n          aria-label={locale.retry}\n          onKeyDown={(e) => handleKeyDown(e, handleFileReupload)}\n        >\n          {props.reuploadIcon ||\n            (props.listType === \"picture-card\" ? <UploadIcon /> : locale.retry)}\n        </span>\n      )}\n\n      {status === STATUS.SUCCESS && props.successIcon !== null && (\n        <span css={successIconStyle}>\n          {props.successIcon || <SuccessIcon />}\n        </span>\n      )}\n\n      {status !== STATUS.SUCCESS && status !== STATUS.FAIL && (\n        <div css={uploadProgressStatus}>\n          <Progress\n            showText={false}\n            type=\"miniCircle\"\n            w=\"16px\"\n            h=\"16px\"\n            status={progressStatus}\n            percent={percent}\n            color={globalColor(`--${illaPrefix}-blue-03`)}\n            trailColor={globalColor(`--${illaPrefix}-blue-06`)}\n            {...progressProps}\n          />\n        </div>\n      )}\n    </>\n  )\n\n  return isFunction(progressRender) ? progressRender(file, dom) : dom\n}\n\nexport default UploadProgress\n","import { STATUS, CustomIconType, UploadListItemProps } from \"../interface\"\nimport { isFunction, isObject } from \"@illa-design/system\"\nimport UploadProgress from \"./uploadProgress\"\nimport {\n  EyeOnIcon,\n  UploadIcon,\n  DeleteIcon,\n  ImageDefaultIcon,\n} from \"@illa-design/icon\"\nimport {\n  errorImageContainerStyle,\n  errorImageNameStyle,\n  errorImageStyle,\n  pictureItemIconStyle,\n  pictureItemMask,\n  pictureItemOperationsStyle,\n  pictureItemPreviewStyle,\n  pictureItemStyle,\n  pictureItemUploading,\n  pictureItemUploadingMask,\n} from \"../style\"\nimport { getFileURL, getIconType, handleKeyDown, isImageUrl } from \"../utils\"\nimport { useContext } from \"react\"\nimport {\n  ConfigProviderContext,\n  ConfigProviderProps,\n  def,\n} from \"@illa-design/config-provider\"\n\nconst PictureItem = (props: UploadListItemProps) => {\n  const { disabled, file, showUploadList, onRemove, onPreview, onReupload } =\n    props\n  const { status } = file\n\n  const configProviderProps = useContext<ConfigProviderProps>(\n    ConfigProviderContext,\n  )\n  const locale = configProviderProps?.locale?.upload ?? def.upload\n\n  const url = getFileURL(file)\n  const actionIcons = isObject(showUploadList)\n    ? (showUploadList as CustomIconType)\n    : {}\n  const Icon = getIconType(file)\n  const imageDom =\n    url && isImageUrl(file) ? <img src={url} alt={file.name} /> : <Icon />\n\n  const handleImagePreview = () => {\n    onPreview?.(file)\n  }\n\n  const handleImageReupload = () => {\n    onReupload?.(file)\n  }\n\n  const handleImageRemove = () => {\n    onRemove?.(file)\n  }\n\n  const image = isFunction(actionIcons.imageRender) ? (\n    actionIcons.imageRender(file)\n  ) : status === STATUS.FAIL ? (\n    <div css={errorImageContainerStyle}>\n      {<div css={pictureItemIconStyle}>{imageDom}</div> ?? (\n        <>\n          <ImageDefaultIcon css={errorImageStyle} />\n          <div css={errorImageNameStyle}>{file.name}</div>\n        </>\n      )}\n    </div>\n  ) : (\n    <div css={pictureItemIconStyle}>{imageDom}</div>\n  )\n\n  const removeIcon =\n    !disabled && actionIcons.removeIcon !== null ? (\n      <span\n        onClick={handleImageRemove}\n        role=\"button\"\n        aria-label={locale.delete}\n        tabIndex={0}\n        onKeyDown={(e) => handleKeyDown(e, handleImageRemove)}\n      >\n        {actionIcons.removeIcon || <DeleteIcon />}\n      </span>\n    ) : null\n\n  const previewIcon =\n    file.status !== STATUS.FAIL && actionIcons.previewIcon !== null ? (\n      <a\n        href={url}\n        tabIndex={1}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        role=\"button\"\n        css={pictureItemPreviewStyle}\n        aria-label={locale.preview}\n        onKeyDown={(e) => handleKeyDown(e, handleImagePreview)}\n        onClick={handleImagePreview}\n      >\n        {actionIcons.previewIcon || <EyeOnIcon />}\n      </a>\n    ) : null\n\n  const reuploadIcon =\n    file.status === STATUS.FAIL &&\n    (actionIcons.reuploadIcon !== null || onReupload) ? (\n      <span\n        onClick={handleImageReupload}\n        tabIndex={2}\n        role=\"button\"\n        aria-label={locale.retry}\n        onKeyDown={(e) => handleKeyDown(e, handleImageReupload)}\n      >\n        {actionIcons.reuploadIcon || <UploadIcon />}\n      </span>\n    ) : null\n\n  return (\n    <div css={pictureItemStyle}>\n      {image}\n      {status === STATUS.UPLOADING ? (\n        <div role=\"radiogroup\" css={pictureItemUploadingMask}>\n          <div css={pictureItemUploading}>\n            <UploadProgress\n              onReupload={props.onReupload}\n              onUpload={props.onUpload}\n              listType=\"picture-card\"\n              file={file}\n              progressProps={props.progressProps}\n              {...actionIcons}\n            />\n          </div>\n        </div>\n      ) : (\n        <>\n          <div role=\"radiogroup\" css={pictureItemMask}>\n            <div css={pictureItemOperationsStyle}>\n              {previewIcon}\n              {reuploadIcon}\n              {removeIcon}\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default PictureItem\n","import { useCallback, useContext } from \"react\"\nimport { STATUS, CustomIconType, UploadListItemProps } from \"../interface\"\nimport { isObject, isFunction } from \"@illa-design/system\"\nimport UploadProgress from \"./uploadProgress\"\nimport { DeleteIcon } from \"@illa-design/icon\"\nimport {\n  errorListItemStyle,\n  getTextItemContainerStyle,\n  getTextItemContentContainerStyle,\n  getTextItemNameStyle,\n  textItemDeleteIconStyle,\n  textItemIconStyle,\n  textItemImageStyle,\n  textItemMainContentStyle,\n  textItemOperationIconStyle,\n  textItemProgressStyle,\n} from \"../style\"\nimport { getFileURL, getIconType, handleKeyDown, isImageUrl } from \"../utils\"\nimport {\n  ConfigProviderContext,\n  ConfigProviderProps,\n  def,\n} from \"@illa-design/config-provider\"\n\nconst TextItem = (props: UploadListItemProps) => {\n  const { disabled, file, onRemove } = props\n  const configProviderProps = useContext<ConfigProviderProps>(\n    ConfigProviderContext,\n  )\n  const locale = configProviderProps?.locale?.upload ?? def.upload\n  const Icon = getIconType(file)\n  const showUploadList = isObject(props.showUploadList)\n    ? (props.showUploadList as CustomIconType)\n    : {}\n  const imageUrl = getFileURL(file)\n  const actionIcons = isObject(showUploadList)\n    ? (showUploadList as CustomIconType)\n    : {}\n\n  const fileName = isFunction(showUploadList.fileName)\n    ? showUploadList.fileName(file)\n    : file.name || (file.originFile && file.originFile.name)\n\n  let triggerProps = {}\n  if (file.status !== STATUS.FAIL) {\n    triggerProps = {\n      popupVisible: false,\n    }\n  }\n\n  const handleItemRemove = useCallback(() => {\n    onRemove?.(file)\n  }, [onRemove, file])\n\n  const imageNode =\n    imageUrl && isImageUrl(file) ? <img src={imageUrl} /> : <Icon />\n\n  const pictureListIcon = isFunction(showUploadList.imageRender) ? (\n    showUploadList.imageRender(file)\n  ) : file.status === STATUS.FAIL ? (\n    <div css={errorListItemStyle}>{imageNode}</div>\n  ) : (\n    <>{imageNode}</>\n  )\n\n  const deleteIcon = !disabled && actionIcons.removeIcon !== null && (\n    <span\n      onClick={handleItemRemove}\n      tabIndex={0}\n      aria-label={locale.delete}\n      css={textItemDeleteIconStyle}\n      onKeyDown={(e) => handleKeyDown(e, handleItemRemove)}\n    >\n      {actionIcons.removeIcon || <DeleteIcon />}\n    </span>\n  )\n\n  return (\n    <div css={getTextItemContainerStyle(props.listType)}>\n      <div css={getTextItemContentContainerStyle(props.listType)}>\n        {props.listType === \"picture-list\" && (\n          <div css={textItemImageStyle}>{pictureListIcon}</div>\n        )}\n        {props.listType === \"text\" && actionIcons.fileIcon !== null && (\n          <span css={textItemIconStyle}>\n            {actionIcons.fileIcon || <Icon />}\n          </span>\n        )}\n        <div css={textItemMainContentStyle}>\n          {imageUrl ? (\n            <a\n              href={imageUrl}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              css={getTextItemNameStyle(file.status)}\n            >\n              {fileName}\n            </a>\n          ) : (\n            <span css={getTextItemNameStyle(file.status)}>{fileName}</span>\n          )}\n        </div>\n      </div>\n      <div css={textItemOperationIconStyle}>\n        <div css={textItemProgressStyle}>\n          <UploadProgress\n            file={file}\n            progressProps={props.progressProps}\n            onReupload={props.onReupload}\n            onUpload={props.onUpload}\n            {...actionIcons}\n          />\n        </div>\n        {deleteIcon}\n      </div>\n    </div>\n  )\n}\n\nexport default TextItem\n","import React, { ReactNode, Fragment } from \"react\"\nimport PictureItem from \"./pictureItem\"\nimport TextItem from \"./textItem\"\nimport { UploadItem, UploadListProps } from \"../interface\"\nimport { isFunction } from \"@illa-design/system\"\nimport {\n  getUploadListContainerStyle,\n  listItemStyle,\n  uploadListItemStyle,\n} from \"../style\"\n\nconst UploadList = (props: UploadListProps) => {\n  const {\n    listType,\n    fileList = [],\n    renderUploadList,\n    renderUploadItem,\n    onPreview,\n    ...rest\n  } = props\n\n  if (isFunction(renderUploadList)) {\n    return (\n      <div css={getUploadListContainerStyle(listType)}>\n        {renderUploadList(fileList, rest)}\n      </div>\n    )\n  }\n\n  const handlePictureItemPreview = (file: UploadItem) => {\n    onPreview?.(file)\n  }\n\n  if (!fileList || !fileList.length) {\n    return null\n  }\n\n  const fileListNodes = fileList?.map((file, index) => {\n    let originNode: ReactNode =\n      listType === \"picture-card\" ? (\n        <div css={listItemStyle}>\n          <PictureItem\n            {...props}\n            onPreview={handlePictureItemPreview}\n            file={file}\n          />\n        </div>\n      ) : (\n        <TextItem {...props} file={file} />\n      )\n    if (isFunction(renderUploadItem)) {\n      originNode = renderUploadItem(originNode, file, fileList)\n    }\n    return listType === \"picture-card\" ? (\n      <Fragment key={index}>{originNode}</Fragment>\n    ) : (\n      <div key={index} css={uploadListItemStyle}>\n        {originNode}\n      </div>\n    )\n  })\n\n  return <div css={getUploadListContainerStyle(listType)}>{fileListNodes}</div>\n}\n\nUploadList.displayName = \"UploadList\"\n\nexport default UploadList\n","import {\n  forwardRef,\n  useImperativeHandle,\n  useRef,\n  useState,\n  useCallback,\n} from \"react\"\nimport {\n  UploadProps,\n  UploadItem,\n  STATUS,\n  UploadInstance,\n  UploaderInstance,\n} from \"./interface\"\nimport Uploader from \"./uploader\"\nimport { isFunction, isNumber, isArray } from \"@illa-design/system\"\nimport UploadList from \"./list\"\nimport { v4 } from \"uuid\"\nimport { getUploaderContinerStyle } from \"./style\"\n\ntype UploadStateType = {\n  [key in string]: UploadItem\n}\nconst getUploadState = (fileList?: UploadItem[]): UploadStateType => {\n  const res: UploadStateType = {}\n  if (!isArray(fileList)) {\n    return res\n  }\n  fileList.forEach((file, index) => {\n    const uid = file.uid || v4()\n    res[uid] = {\n      status: STATUS.SUCCESS,\n      percent: 100,\n      ...file,\n      uid,\n    }\n  })\n  return res\n}\n\nconst getFileList = (uploadState: UploadStateType): UploadItem[] => {\n  return Object.keys(uploadState).map((x) => uploadState[x])\n}\n\nexport const Upload = forwardRef<UploadInstance, UploadProps>((props, ref) => {\n  const uploaderRef = useRef<UploaderInstance>(null)\n  const uploadStateRef = useRef<UploadStateType>({})\n  const [innerUploadState, setInnerUploadState] = useState<{\n    [key: string]: UploadItem\n  }>(\n    \"fileList\" in props\n      ? getUploadState(props.fileList)\n      : \"defaultFileList\" in props\n      ? getUploadState(props.defaultFileList)\n      : {},\n  )\n\n  uploadStateRef.current =\n    \"fileList\" in props ? getUploadState(props.fileList) : innerUploadState\n\n  const {\n    listType = \"text\",\n    renderUploadItem,\n    showUploadList = true,\n    autoUpload = true,\n    renderUploadList,\n    beforeUpload = () => true,\n    progressProps,\n    onProgress,\n    onChange,\n    onRemove,\n    onReupload,\n  } = props\n\n  const deleteUploadFile = useCallback(\n    (file: UploadItem) => {\n      const obj = { ...uploadStateRef.current }\n      delete obj[file.uid]\n\n      if (!(\"fileList\" in props)) {\n        setInnerUploadState(obj)\n      }\n      onChange && onChange(getFileList(obj), file)\n    },\n    [onChange, props],\n  )\n\n  const uploadFile = useCallback((file: UploadItem) => {\n    if (!file) {\n      return\n    }\n    setTimeout(() => {\n      uploaderRef.current && uploaderRef.current.upload(file)\n    }, 0)\n  }, [])\n\n  const reuploadFile = useCallback(\n    (file: UploadItem) => {\n      uploaderRef.current && uploaderRef.current.reupload(file)\n      onReupload && onReupload(file)\n    },\n    [onReupload],\n  )\n\n  const removeFile = useCallback(\n    (file: UploadItem) => {\n      if (!file) {\n        return\n      }\n      Promise.resolve(\n        isFunction(onRemove)\n          ? onRemove(file, getFileList(uploadStateRef.current))\n          : onRemove,\n      )\n        .then((val) => {\n          if (val !== false) {\n            uploaderRef.current && uploaderRef.current.abort(file)\n            deleteUploadFile(file)\n          }\n        })\n        .catch((e) => {\n          console.error(e)\n        })\n    },\n    [deleteUploadFile, onRemove],\n  )\n\n  const abortFile = useCallback((file: UploadItem) => {\n    if (file) {\n      uploaderRef.current && uploaderRef.current.abort(file)\n    }\n  }, [])\n\n  useImperativeHandle(ref, () => {\n    return {\n      submit: (file?: UploadItem) => {\n        let list: UploadItem[] =\n          (file\n            ? [file]\n            : getFileList(uploadStateRef.current).filter(\n                (x) => x.status === STATUS.INIT,\n              )) || []\n        list.forEach((x) => {\n          uploadFile(x)\n        })\n      },\n      abort: (file: UploadItem) => {\n        abortFile(file)\n      },\n      reupload: (file: UploadItem) => {\n        reuploadFile(file)\n      },\n    }\n  })\n\n  const fileList = getFileList(uploadStateRef.current)\n  const limit = isNumber(props.limit)\n    ? { hideOnExceedLimit: true, maxCount: props.limit }\n    : { hideOnExceedLimit: true, ...props.limit }\n\n  const exceedLimit = !!(limit.maxCount && limit.maxCount <= fileList.length)\n  const disabledUploadDom =\n    props.disabled ?? (!limit.hideOnExceedLimit && exceedLimit)\n\n  const isPictureCard = listType === \"picture-card\"\n\n  const handleProgress = useCallback(\n    (file: UploadItem, e?: ProgressEvent) => {\n      if (file) {\n        if (!(\"fileList\" in props)) {\n          setInnerUploadState((v) => {\n            return {\n              ...v,\n              [file.uid]: file,\n            }\n          })\n        }\n        onProgress && onProgress(file, e)\n      }\n    },\n    [onProgress, props],\n  )\n\n  const handleFileStatusChange = useCallback(\n    (file: UploadItem) => {\n      if (!(\"fileList\" in props)) {\n        setInnerUploadState((v) => {\n          return {\n            ...v,\n            [file.uid]: file,\n          }\n        })\n      }\n      onChange &&\n        onChange(\n          getFileList({ ...uploadStateRef.current, [file.uid]: file }),\n          file,\n        )\n    },\n    [onChange, props],\n  )\n\n  const uploadComponent = (\n    <div css={getUploaderContinerStyle(listType)}>\n      <Uploader\n        ref={uploaderRef}\n        {...props}\n        listType={listType}\n        beforeUpload={beforeUpload}\n        fileList={fileList}\n        showUploadList={showUploadList}\n        autoUpload={autoUpload}\n        limit={limit.maxCount}\n        hide={limit.hideOnExceedLimit && exceedLimit}\n        disabled={disabledUploadDom}\n        onProgress={handleProgress}\n        onFileStatusChange={handleFileStatusChange}\n      />\n    </div>\n  )\n\n  return (\n    <>\n      {!isPictureCard && uploadComponent}\n      {showUploadList && (\n        <UploadList\n          progressProps={progressProps}\n          showUploadList={showUploadList}\n          disabled={props.disabled}\n          listType={listType}\n          fileList={fileList}\n          renderUploadItem={renderUploadItem}\n          renderUploadList={renderUploadList}\n          onUpload={uploadFile}\n          onRemove={removeFile}\n          onReupload={reuploadFile}\n          onPreview={props.onPreview}\n        />\n      )}\n      {isPictureCard && uploadComponent}\n    </>\n  )\n})\n\nUpload.displayName = \"Upload\"\n"],"names":["FileWPSIcon","createIcon","jsxs","Fragment","jsx","STATUS","initialHandler","getBody","xhr","text","uploadRequestSender","options","onProgress","onError","onSuccess","action","headers","originName","file","originData","name","isFunction","data","event","percent","e","formData","key","value","isArray","item","h","uploadRequestSender$1","getIconType","type","fileExtension","FilePPTIcon","FileWordIcon","FileExcelIcon","FilePictureIcon","FilePdfIcon","FileMusicIcon","FileVideoIcon","FileDefaultIcon","isAcceptFile","accept","accepts","x","typeText","fileType","baseFileType","affixList","getAcceptedFiles","fileList","files","loopDirectory","items","callback","restFileCount","onFinish","_loopDirectory","reader","flag","readEntries","entries","getFileURL","originFile","handleKeyDown","extname","url","temp","filenameWithoutSuffix","isImageUrl","extension","overflowEllipsisCommonStyle","css","getUploadListContainerStyle","uploadListItemStyle","getTextItemContainerStyle","listType","paddingStyle","basicStyle","globalColor","illaPrefix","textItemOperationIconStyle","getTextItemContentContainerStyle","textItemImageStyle","textItemMainContentStyle","textItemIconStyle","getTextItemNameStyle","status","errorStyle","textItemProgressStyle","textItemDeleteIconStyle","triggerNodeContainerStyle","listTypeButtonStyle","getPictureCardContainerStyle","disabled","pictureCardContentStyle","pictureCardIconStyle","pictureCardTextStyle","getDragContainerStyle","dragIconStyle","dragContentContainerStyle","dragTextStyle","dragTipsStyle","successIconStyle","uploadProgressStatus","uploadProgressFailStyle","pictureItemUploading","pictureItemStyle","pictureItemMask","pictureItemUploadingMask","pictureItemOperationsStyle","pictureItemPreviewStyle","errorImageContainerStyle","pictureItemIconStyle","errorListItemStyle","errorImageStyle","errorImageNameStyle","listItemStyle","getUploaderContinerStyle","TriggerNode","props","configProviderProps","useContext","ConfigProviderContext","locale","_a","def","isDragging","setIsDragging","useState","dragEnterCount","setDragEnterCount","tip","colorScheme","variant","loading","children","drag","directory","multiple","onClick","onDrop","onDragFiles","onDragLeave","onDragOver","cloneChildrenProps","useEffect","useCallback","handleDragEnter","handleDragLeave","handleDragOver","handleDrop","events","isValidElement","cloneElement","AddIcon","Button","UploadIcon","TriggerNode$1","Uploader","forwardRef","ref","uploadRequests","setUploadrequests","inputRef","useRef","hide","limit","autoUpload","beforeUpload","customRequest","onExceedLimit","onFileStatusChange","abort","deleteUploadRequest","uid","newValue","updateFileStatus","upload","uploadFile","req","reupload","getTargetFile","targetFile","response","request","requests","uploadSingleFile","index","uploadItem","v4","handleUploadedFiles","isNumber","val","newFile","isFile","handleTriggerClick","handleUploadFileChange","useImperativeHandle","AnimatePresence","motion","Uploader$1","UploadProgress","progressProps","progressRender","onReupload","onUpload","progressStatus","handleFileReupload","dom","SuccessIcon","Progress","UploadProgress$1","PictureItem","showUploadList","onRemove","onPreview","actionIcons","isObject","Icon","imageDom","handleImagePreview","handleImageReupload","handleImageRemove","image","ImageDefaultIcon","removeIcon","DeleteIcon","previewIcon","EyeOnIcon","reuploadIcon","PictureItem$1","TextItem","imageUrl","fileName","handleItemRemove","imageNode","pictureListIcon","deleteIcon","TextItem$1","UploadList","renderUploadList","renderUploadItem","rest","handlePictureItemPreview","fileListNodes","originNode","UploadList$1","getUploadState","res","getFileList","uploadState","Upload","uploaderRef","uploadStateRef","innerUploadState","setInnerUploadState","onChange","deleteUploadFile","obj","reuploadFile","removeFile","abortFile","exceedLimit","disabledUploadDom","isPictureCard","handleProgress","v","handleFileStatusChange","uploadComponent"],"mappings":"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"}