{"version":3,"file":"collapse.stories-9b7b276b.js","sources":["../../../../packages/collapse/src/collapse-context.tsx","../../../../packages/collapse/src/style.ts","../../../../packages/collapse/src/collapse.tsx","../../../../node_modules/.pnpm/react-transition-group@4.4.5_react-dom@18.2.0_react@18.2.0/node_modules/react-transition-group/esm/config.js","../../../../node_modules/.pnpm/react-transition-group@4.4.5_react-dom@18.2.0_react@18.2.0/node_modules/react-transition-group/esm/TransitionGroupContext.js","../../../../node_modules/.pnpm/react-transition-group@4.4.5_react-dom@18.2.0_react@18.2.0/node_modules/react-transition-group/esm/utils/reflow.js","../../../../node_modules/.pnpm/react-transition-group@4.4.5_react-dom@18.2.0_react@18.2.0/node_modules/react-transition-group/esm/Transition.js","../../../../packages/collapse/src/collapse-item.tsx"],"sourcesContent":["import { createContext } from \"react\"\nimport { CollapseContextProps } from \"./interface\"\n\nexport const CollapseContext = createContext<CollapseContextProps>(\n  {} as CollapseContextProps,\n)\n\nCollapseContext.displayName = \"CollapseContext\"\n","import { CollapsePosition } from \"./interface\"\nimport { css, SerializedStyles } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/theme\"\n\nexport function applyCollapseStyle(bordered?: boolean): SerializedStyles {\n  const borderCSS = bordered\n    ? css`\n        border: solid 1px ${getColor(\"grayBlue\", \"08\")};\n      `\n    : css``\n  return css`\n    ${borderCSS}\n  `\n}\n\nexport const collapseStyle = css`\n  display: flex;\n  flex-direction: column;\n`\n\nexport function applyChildrenContainerStyle(\n  active?: boolean,\n): SerializedStyles {\n  return css`\n    display: ${active ? \"block\" : \"none\"};\n    overflow: hidden;\n    transition: height 0.2s ease-in-out;\n  `\n}\n\nexport function applyChildrenContentStyle(): SerializedStyles {\n  return css`\n    background-color: ${getColor(\"grayBlue\", \"09\")};\n    padding: 8px 32px;\n  `\n}\n\nexport function applyCollapseTitleContainerStyle(\n  disabled?: boolean,\n): SerializedStyles {\n  return css`\n    display: flex;\n    align-items: center;\n    padding: 8px 12px;\n    flex-direction: row;\n    cursor: ${disabled ? \"not-allowed\" : \"auto\"};\n  `\n}\n\nexport const expandIconStyle = css`\n  display: flex;\n  align-items: center;\n  padding: 4px;\n  font-size: 8px;\n`\n\nexport function applyCollapseTitleStyle(\n  showIcon: boolean,\n  disabled?: boolean,\n): SerializedStyles {\n  return css`\n    margin-left: ${showIcon ? \"4px\" : \"0\"};\n    font-size: 14px;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n    flex-shrink: 1;\n    color: ${disabled ? getColor(\"gray\", \"05\") : getColor(\"gray\", \"02\")};\n  `\n}\n\nexport function applyPositionIconAnimateStyle(\n  active: boolean,\n  position?: CollapsePosition,\n): SerializedStyles {\n  return css`\n    transform: rotate(\n      ${active ? (position === \"left\" ? \"90deg\" : \"-90deg\") : \"0deg\"}\n    );\n    transition: transform 200ms ease-in-out;\n    transform-origin: center;\n  `\n}\n\nexport function applyCollapseExtraStyle(showIcon: boolean): SerializedStyles {\n  return css`\n    margin-right: ${showIcon ? \"4px\" : \"0\"}; ;\n  `\n}\n\nexport const dividerStyle = css`\n  flex: 1;\n`\n","import { forwardRef, MouseEvent, useCallback } from \"react\"\nimport { CollapseProps } from \"./interface\"\nimport { CollapseContext } from \"./collapse-context\"\nimport { useMergeValue } from \"@illa-design/system\"\nimport { applyCollapseStyle } from \"./style\"\nimport { applyBoxStyle, deleteCssProps } from \"@illa-design/theme\"\n\nconst getActiveKeys = (\n  keys: string | string[],\n  accordion?: boolean,\n): string[] => {\n  if (typeof keys === \"string\") {\n    keys = [keys]\n  }\n  const res = keys!.map((item) => item)\n  if (accordion) {\n    return res.slice(0, 1)\n  }\n  return res\n}\n\nexport const Collapse = forwardRef<HTMLDivElement, CollapseProps>(\n  (props, ref) => {\n    const {\n      children,\n      bordered = true,\n      expandIcon,\n      lazyload = true,\n      expandIconPosition = \"left\",\n      destroyOnHide,\n      accordion,\n      defaultActiveKey,\n      activeKey,\n      onChange,\n      showExpandIcon = true,\n      triggerRegion = \"header\",\n      ...otherProps\n    } = props\n\n    const [activeKeys, setActiveKeys] = useMergeValue<string[]>([], {\n      defaultValue: defaultActiveKey\n        ? getActiveKeys(defaultActiveKey, accordion)\n        : undefined,\n      value: activeKey ? getActiveKeys(activeKey, accordion) : undefined,\n    })\n\n    const changeFun = useCallback(\n      (key: string, keys: string[], e?: MouseEvent<HTMLDivElement>) => {\n        let newKeys: string[] = []\n        if (accordion) {\n          if (keys.some((value) => value === key)) {\n            newKeys = [key]\n          } else {\n            newKeys = []\n          }\n        } else {\n          newKeys = keys\n        }\n        if (activeKey === undefined) {\n          setActiveKeys(newKeys)\n        }\n        onChange?.(key, newKeys, e)\n      },\n      [accordion, activeKey, onChange, setActiveKeys],\n    )\n\n    return (\n      <CollapseContext.Provider\n        value={{\n          destroyOnHide,\n          lazyload,\n          expandIconPosition,\n          triggerRegion,\n          expandIcon,\n          showExpandIcon,\n          activeKey: activeKeys,\n          onToggle: changeFun,\n        }}\n      >\n        <div\n          ref={ref}\n          css={[applyCollapseStyle(bordered), applyBoxStyle(props)]}\n          {...deleteCssProps(otherProps)}\n        >\n          {children}\n        </div>\n      </CollapseContext.Provider>\n    )\n  },\n)\n\nCollapse.displayName = \"Collapse\"\n","export default {\n  disabled: false\n};","import React from 'react';\nexport default React.createContext(null);","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import { CollapseContext } from \"./collapse-context\"\nimport { CollapseItemProps } from \"./interface\"\nimport {\n  applyChildrenContainerStyle,\n  applyChildrenContentStyle,\n  applyCollapseExtraStyle,\n  applyCollapseTitleContainerStyle,\n  applyCollapseTitleStyle,\n  applyPositionIconAnimateStyle,\n  collapseStyle,\n  dividerStyle,\n  expandIconStyle,\n} from \"./style\"\nimport { CaretLeftIcon, CaretRightIcon } from \"@illa-design/icon\"\nimport { deleteCssProps, getColor } from \"@illa-design/theme\"\nimport { forwardRef, MouseEvent, useCallback, useContext, useMemo } from \"react\"\nimport { Transition } from \"react-transition-group\"\n\nexport const CollapseItem = forwardRef<HTMLDivElement, CollapseItemProps>(\n  (props, ref) => {\n    const {\n      children,\n      name,\n      header,\n      extra,\n      disabled,\n      destroyOnHide,\n      expandIcon,\n      showExpandIcon,\n      lazyload,\n      triggerRegion,\n      expandIconPosition,\n      ...otherProps\n    } = props\n\n    const collapseContext = useContext(CollapseContext)\n\n    const ll = lazyload ? lazyload : collapseContext.lazyload ?? false\n\n    const doh = destroyOnHide\n      ? destroyOnHide\n      : collapseContext.destroyOnHide ?? false\n\n    const se = showExpandIcon\n      ? showExpandIcon\n      : collapseContext.showExpandIcon ?? false\n    const eip = expandIconPosition\n      ? expandIconPosition\n      : collapseContext.expandIconPosition ?? false\n\n    const ei = expandIcon ? expandIcon : collapseContext.expandIcon\n\n    const tr = triggerRegion\n      ? triggerRegion\n      : collapseContext.triggerRegion ?? \"header\"\n\n    const active = useMemo(() => {\n      if (collapseContext.activeKey) {\n        if (typeof collapseContext.activeKey === \"string\") {\n          return name === collapseContext.activeKey\n        } else {\n          return collapseContext.activeKey?.some((value) => {\n            return value === name\n          })\n        }\n      } else {\n        return false\n      }\n    }, [collapseContext.activeKey, name])\n\n    const expandFun = useCallback(\n      (e?: MouseEvent<HTMLDivElement>) => {\n        if (disabled) {\n          return\n        }\n        let keys = new Set<string>(collapseContext.activeKey)\n        if (active) {\n          keys.delete(name)\n          collapseContext?.onToggle?.(\n            name,\n            Array.from<string>(keys.values()),\n            e,\n          )\n        } else {\n          keys.add(name)\n          collapseContext?.onToggle?.(\n            name,\n            Array.from<string>(keys.values()),\n            e,\n          )\n        }\n      },\n      [active, collapseContext, disabled, name],\n    )\n\n    return (\n      <div css={collapseStyle} ref={ref} {...deleteCssProps(otherProps)}>\n        <div\n          css={applyCollapseTitleContainerStyle(disabled)}\n          onClick={(e) => {\n            if (tr === \"header\") {\n              expandFun(e)\n            }\n          }}\n        >\n          {se && eip === \"left\" && (\n            <div\n              css={expandIconStyle}\n              onClick={(e) => {\n                if (tr === \"icon\") {\n                  expandFun(e)\n                }\n              }}\n            >\n              {ei ? (\n                ei\n              ) : (\n                <CaretRightIcon\n                  css={applyPositionIconAnimateStyle(active, eip)}\n                  c={disabled ? getColor(\"gray\", \"05\") : getColor(\"gray\", \"03\")}\n                />\n              )}\n            </div>\n          )}\n          <div css={applyCollapseTitleStyle(se && eip === \"left\", disabled)}>\n            {header}\n          </div>\n          <div css={dividerStyle} />\n          <div css={applyCollapseExtraStyle(se && eip === \"right\")}>\n            {extra}\n          </div>\n          {se && eip === \"right\" && (\n            <div\n              css={expandIconStyle}\n              onClick={(e) => {\n                if (tr === \"icon\") {\n                  expandFun(e)\n                }\n              }}\n            >\n              {ei ? (\n                ei\n              ) : (\n                <CaretLeftIcon\n                  css={applyPositionIconAnimateStyle(active, eip)}\n                  c={disabled ? getColor(\"gray\", \"05\") : getColor(\"gray\", \"03\")}\n                />\n              )}\n            </div>\n          )}\n        </div>\n        <Transition\n          in={active}\n          addEndListener={(node, done) => {\n            node.addEventListener(\"transitionend\", done, false)\n          }}\n          mountOnEnter={doh || ll}\n          unmountOnExit={doh}\n          onEnter={(e: HTMLElement) => {\n            e.style.height = \"0\"\n            e.style.display = \"block\"\n          }}\n          onEntering={(e: HTMLElement) => {\n            e.style.height = `${e.scrollHeight}px`\n          }}\n          onEntered={(e: HTMLElement) => {\n            e.style.height = \"auto\"\n          }}\n          onExit={(e: HTMLElement) => {\n            e.style.display = \"block\"\n            e.style.height = `${e.offsetHeight}px`\n            // have to trigger reflow to get animation effect on exit\n            e.offsetHeight // eslint-disable-line\n          }}\n          onExiting={(e: HTMLElement) => {\n            e.style.height = \"0\"\n          }}\n          onExited={(e: HTMLElement) => {\n            e.style.display = \"none\"\n            e.style.height = \"auto\"\n          }}\n        >\n          <div css={applyChildrenContainerStyle(active)}>\n            <div css={applyChildrenContentStyle()}>{children}</div>\n          </div>\n        </Transition>\n      </div>\n    )\n  },\n)\n\nCollapseItem.displayName = \"CollapseItem\"\n"],"names":["CollapseContext","createContext","applyCollapseStyle","bordered","borderCSS","css","getColor","collapseStyle","applyChildrenContainerStyle","active","applyChildrenContentStyle","applyCollapseTitleContainerStyle","disabled","expandIconStyle","applyCollapseTitleStyle","showIcon","applyPositionIconAnimateStyle","position","applyCollapseExtraStyle","dividerStyle","getActiveKeys","keys","accordion","res","item","Collapse","forwardRef","props","ref","children","expandIcon","lazyload","expandIconPosition","destroyOnHide","defaultActiveKey","activeKey","onChange","showExpandIcon","triggerRegion","otherProps","activeKeys","setActiveKeys","useMergeValue","changeFun","useCallback","key","e","newKeys","value","jsx","applyBoxStyle","deleteCssProps","config","TransitionGroupContext","React","forceReflow","node","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","_inheritsLoose","context","_this","parentGroup","appear","initialStatus","_ref","prevState","nextIn","_proto","prevProps","nextStatus","status","timeout","exit","enter","mounting","ReactDOM","_this2","appearing","_ref2","maybeNode","maybeAppearing","timeouts","enterTimeout","_this3","nextState","callback","_this4","event","handler","doesNotHaveTimeoutOrListener","_ref3","maybeNextCallback","_this$props","childProps","_objectWithoutPropertiesLoose","noop","Transition$1","CollapseItem","name","header","extra","collapseContext","useContext","ll","doh","se","eip","ei","tr","useMemo","_a","expandFun","_b","jsxs","CaretRightIcon","CaretLeftIcon","done"],"mappings":"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","x_google_ignoreList":[3,4,5,6]}