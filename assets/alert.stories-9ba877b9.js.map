{"version":3,"file":"alert.stories-9ba877b9.js","sources":["../../../../packages/alert/src/style.ts","../../../../packages/alert/src/alert.tsx"],"sourcesContent":["import { css, SerializedStyles } from \"@emotion/react\"\nimport { getColor, globalColor, illaPrefix } from \"@illa-design/theme\"\nimport { AlertType } from \"./interface\"\n\nexport const colorMap = {\n  info: `${globalColor(`--${illaPrefix}-blue-07`)}`,\n  success: `${globalColor(`--${illaPrefix}-green-07`)}`,\n  warning: `${globalColor(`--${illaPrefix}-orange-07`)}`,\n  error: `${globalColor(`--${illaPrefix}-red-07`)}`,\n}\n\nexport const iconColorMap = {\n  info: `${globalColor(`--${illaPrefix}-blue-03`)}`,\n  success: `${globalColor(`--${illaPrefix}-green-03`)}`,\n  warning: `${globalColor(`--${illaPrefix}-orange-03`)}`,\n  error: `${globalColor(`--${illaPrefix}-red-03`)}`,\n}\n\nexport const leftContentStyle = css`\n  display: flex;\n  flex-grow: 1;\n  margin-right: 8px;\n  flex-direction: column;\n`\n\nexport const leftIconStyle = css`\n  margin-right: 8px;\n  font-size: 16px;\n`\n\nexport const leftIconSizeStyle = css`\n  flex-shrink: 0;\n`\n\nexport const titleContainerStyle = css`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nexport const titleStyle = css`\n  font-size: 14px;\n  color: ${getColor(\"gray\", \"02\")};\n`\n\nexport const contentStyle = css`\n  font-size: 14px;\n  margin-top: 4px;\n  color: ${getColor(\"gray\", \"04\")};\n`\n\nexport const closeIconStyle = css`\n  margin-left: 8px;\n`\n\nexport function applyAlertContainer(\n  type: AlertType,\n  showBanner?: boolean,\n  hasContent?: boolean,\n): SerializedStyles {\n  const radius = showBanner\n    ? css``\n    : css`\n        border-radius: 8px;\n      `\n  return css`\n    display: flex;\n    flex-direction: row;\n    padding: 9px 16px;\n    font-size: 14px;\n    align-items: ${hasContent ? \"flex-start\" : \"center\"};\n    background-color: ${colorMap[type]};\n    ${radius};\n  `\n}\n","import { forwardRef, MouseEvent, useCallback, useMemo, useState } from \"react\"\nimport { AlertProps } from \"./interface\"\nimport { AnimatePresence, motion } from \"framer-motion\"\nimport {\n  CloseIcon,\n  ErrorCircleIcon,\n  InfoCircleIcon,\n  SuccessCircleIcon,\n  WarningCircleIcon,\n} from \"@illa-design/icon\"\nimport {\n  applyAlertContainer,\n  closeIconStyle,\n  contentStyle,\n  iconColorMap,\n  leftContentStyle,\n  leftIconSizeStyle,\n  leftIconStyle,\n  titleStyle,\n} from \"./style\"\nimport { applyBoxStyle, deleteCssProps } from \"@illa-design/theme\"\n\nconst variants = {\n  enter: {\n    opacity: 1,\n    transformOrigin: \"0% 0%\",\n    transform: \"scaleY(1) translateZ(0)\",\n  },\n  hidden: {\n    opacity: 0,\n    transformOrigin: \"0% 0%\",\n    transform: \"scaleY(0.8) translateZ(0)\",\n    transition: {\n      opacity: { duration: 0.2, ease: \"linear\" },\n      transform: { duration: 0.2, ease: \"linear\" },\n    },\n  },\n  show: {\n    opacity: 1,\n    transformOrigin: \"0% 0%\",\n    transform: \"scaleY(1) translateZ(0)\",\n    transition: {\n      opacity: { duration: 0.2, ease: \"linear\" },\n      transform: { duration: 0.2, ease: \"linear\" },\n    },\n  },\n}\n\nexport const Alert = forwardRef<HTMLDivElement, AlertProps>((props, ref) => {\n  const {\n    title,\n    action,\n    closable,\n    type = \"info\",\n    content,\n    icon,\n    showIcon = true,\n    banner,\n    closeElement,\n    onClose,\n    afterClose,\n    ...restProps\n  } = props\n\n  const [visible, setVisible] = useState<boolean>(true)\n\n  const leftIcon = useMemo(() => {\n    if (showIcon) {\n      if (icon) {\n        return <span css={[leftIconStyle, leftIconSizeStyle]}>{icon}</span>\n      }\n      switch (type) {\n        case \"success\":\n          return (\n            <SuccessCircleIcon\n              mr=\"8px\"\n              fs=\"16px\"\n              mt={content ? \"2px\" : \"0\"}\n              c={iconColorMap[\"success\"]}\n              css={leftIconSizeStyle}\n            />\n          )\n        case \"warning\":\n          return (\n            <WarningCircleIcon\n              mr=\"8px\"\n              fs=\"16px\"\n              mt={content ? \"2px\" : \"0\"}\n              c={iconColorMap[\"warning\"]}\n              css={leftIconSizeStyle}\n            />\n          )\n        case \"error\":\n          return (\n            <ErrorCircleIcon\n              mr=\"8px\"\n              fs=\"16px\"\n              mt={content ? \"2px\" : \"0\"}\n              c={iconColorMap[\"error\"]}\n              css={leftIconSizeStyle}\n            />\n          )\n        case \"info\":\n          return (\n            <InfoCircleIcon\n              mr=\"8px\"\n              fs=\"16px\"\n              mt={content ? \"2px\" : \"0\"}\n              c={iconColorMap[\"info\"]}\n              css={leftIconSizeStyle}\n            />\n          )\n      }\n    }\n    return <></>\n  }, [content, icon, showIcon, type])\n\n  const onHandleClose = useCallback(\n    (e: MouseEvent) => {\n      setVisible(false)\n      onClose?.(e)\n    },\n    [onClose],\n  )\n\n  return (\n    <AnimatePresence>\n      {visible && (\n        <motion.div\n          css={[\n            applyAlertContainer(type, banner, content !== undefined),\n            applyBoxStyle(restProps),\n          ]}\n          variants={variants}\n          animate={\"show\"}\n          exit={\"hidden\"}\n          initial={\"enter\"}\n          ref={ref}\n          onAnimationComplete={(definition) => {\n            if (definition === \"hidden\") {\n              afterClose?.()\n            }\n          }}\n          {...deleteCssProps(restProps)}\n        >\n          {leftIcon}\n          <div css={leftContentStyle}>\n            {title && <div css={titleStyle}>{title}</div>}\n            {content && <div css={contentStyle}>{content}</div>}\n          </div>\n          {action}\n          {closable && (\n            <div css={closeIconStyle} onClick={onHandleClose}>\n              {closeElement || <CloseIcon c={iconColorMap[type]} fs=\"8px\" />}\n            </div>\n          )}\n        </motion.div>\n      )}\n    </AnimatePresence>\n  )\n})\n\nAlert.displayName = \"Alert\"\n"],"names":["colorMap","globalColor","illaPrefix","iconColorMap","leftContentStyle","css","leftIconStyle","leftIconSizeStyle","titleStyle","getColor","contentStyle","closeIconStyle","applyAlertContainer","type","showBanner","hasContent","radius","variants","Alert","forwardRef","props","ref","title","action","closable","content","icon","showIcon","banner","closeElement","onClose","afterClose","restProps","visible","setVisible","useState","leftIcon","useMemo","jsx","SuccessCircleIcon","WarningCircleIcon","ErrorCircleIcon","InfoCircleIcon","Fragment","onHandleClose","useCallback","e","AnimatePresence","jsxs","motion","applyBoxStyle","definition","deleteCssProps","CloseIcon"],"mappings":"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"}