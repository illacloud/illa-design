{"version":3,"file":"button-group-context-9000c136.js","sources":["../../../../packages/button/src/style.ts","../../../../packages/button/src/button.tsx","../../../../packages/button/src/button-group-context.tsx"],"sourcesContent":["import { css, SerializedStyles } from \"@emotion/react\"\nimport {\n  ButtonColorScheme,\n  ButtonShape,\n  ButtonSize,\n  ButtonVariant,\n} from \"./interface\"\nimport {\n  getColor,\n  getSpecialThemeColor,\n  hasGlobalColor,\n  illaPrefix,\n  zIndex,\n} from \"@illa-design/theme\"\n\n// button\nexport function applyTagContainer(\n  fullWidth?: boolean,\n  fullHeight?: boolean,\n): SerializedStyles {\n  return css`\n    ${fullWidth\n      ? css`\n          width: 100%;\n        `\n      : null};\n    ${fullHeight\n      ? css`\n          height: 100%;\n        `\n      : null};\n    transition: color 200ms ease-in-out, background-color 200ms ease-in-out;\n    vertical-align: middle;\n    white-space: nowrap;\n    outline: none;\n    border: 0;\n    background-color: transparent;\n    display: inline-flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n  `\n}\n\nexport enum State {\n  DEFAULT,\n  HOVER,\n  ACTIVE,\n  DISABLE,\n}\n\nexport function getDifferentStatusColor(\n  colorScheme: ButtonColorScheme,\n  variant: ButtonVariant,\n  state: State,\n): string[] {\n  switch (state) {\n    case State.DEFAULT:\n      switch (variant) {\n        case \"fill\":\n          if (colorScheme === \"white\") {\n            return [getColor(\"white\", \"01\"), getColor(\"gray\", \"02\")]\n          } else if (colorScheme != \"gray\" && colorScheme != \"grayBlue\") {\n            return [getSpecialThemeColor(colorScheme), getColor(\"white\", \"01\")]\n          } else {\n            return [getColor(colorScheme, \"09\"), getColor(colorScheme, \"02\")]\n          }\n        case \"light\": {\n          if (colorScheme === \"white\") {\n            return [getColor(\"white\", \"01\"), getColor(\"gray\", \"02\")]\n          } else {\n            return [\n              getColor(colorScheme, \"08\"),\n              getSpecialThemeColor(colorScheme),\n            ]\n          }\n        }\n        case \"dashed\":\n        case \"outline\":\n          if (colorScheme == \"white\") {\n            return [getColor(\"white\", \"01\"), getColor(\"white\", \"01\")]\n          } else if (colorScheme != \"gray\" && colorScheme != \"grayBlue\") {\n            return [\n              getSpecialThemeColor(colorScheme),\n              getSpecialThemeColor(colorScheme),\n            ]\n          } else {\n            return [getColor(colorScheme, \"08\"), getColor(colorScheme, \"02\")]\n          }\n        case \"text\":\n          if (colorScheme == \"white\") {\n            return [getColor(\"transparent\", \"01\"), getColor(\"gray\", \"02\")]\n          } else {\n            return [\n              getColor(\"transparent\", \"01\"),\n              getSpecialThemeColor(colorScheme),\n            ]\n          }\n      }\n    case State.HOVER:\n      switch (variant) {\n        case \"fill\":\n          if (colorScheme == \"white\") {\n            return [getColor(\"white\", \"02\"), getColor(\"gray\", \"02\")]\n          } else if (colorScheme != \"gray\" && colorScheme != \"grayBlue\") {\n            return [getColor(colorScheme, \"04\"), getColor(\"white\", \"01\")]\n          } else {\n            return [getColor(colorScheme, \"08\"), getColor(colorScheme, \"02\")]\n          }\n        case \"light\": {\n          if (colorScheme == \"white\") {\n            return [getColor(\"white\", \"02\"), getColor(\"gray\", \"02\")]\n          } else {\n            return [\n              getColor(colorScheme, \"07\"),\n              getSpecialThemeColor(colorScheme),\n            ]\n          }\n        }\n        case \"dashed\":\n        case \"outline\":\n          if (colorScheme == \"white\") {\n            return [getColor(\"white\", \"02\"), getColor(\"gray\", \"02\")]\n          } else if (colorScheme != \"gray\" && colorScheme != \"grayBlue\") {\n            return [getColor(colorScheme, \"04\"), getColor(colorScheme, \"04\")]\n          } else {\n            return [getColor(colorScheme, \"07\"), getColor(colorScheme, \"02\")]\n          }\n        case \"text\":\n          if (colorScheme == \"white\") {\n            return [getColor(\"white\", \"02\"), getColor(\"gray\", \"02\")]\n          } else {\n            return [getColor(\"grayBlue\", \"09\"), getColor(colorScheme, \"04\")]\n          }\n      }\n    case State.ACTIVE:\n      switch (variant) {\n        case \"fill\":\n          if (colorScheme == \"white\") {\n            return [getColor(\"white\", \"03\"), getColor(\"gray\", \"02\")]\n          } else if (colorScheme != \"gray\" && colorScheme != \"grayBlue\") {\n            return [getColor(colorScheme, \"02\"), getColor(\"white\", \"01\")]\n          } else {\n            return [getColor(colorScheme, \"06\"), getColor(colorScheme, \"02\")]\n          }\n        case \"light\": {\n          if (colorScheme == \"white\") {\n            return [getColor(\"white\", \"02\"), getColor(\"gray\", \"02\")]\n          } else {\n            return [\n              getColor(colorScheme, \"06\"),\n              getSpecialThemeColor(colorScheme),\n            ]\n          }\n        }\n        case \"dashed\":\n        case \"outline\":\n          if (colorScheme == \"white\") {\n            return [getColor(\"white\", \"03\"), getColor(\"gray\", \"02\")]\n          } else if (colorScheme != \"gray\" && colorScheme != \"grayBlue\") {\n            return [getColor(colorScheme, \"02\"), getColor(colorScheme, \"02\")]\n          } else {\n            return [getColor(colorScheme, \"05\"), getColor(colorScheme, \"02\")]\n          }\n        case \"text\":\n          if (colorScheme == \"white\") {\n            return [getColor(\"white\", \"03\"), getColor(\"gray\", \"02\")]\n          } else {\n            return [\n              getColor(\"grayBlue\", \"08\"),\n              getSpecialThemeColor(colorScheme),\n            ]\n          }\n      }\n    case State.DISABLE:\n      switch (variant) {\n        case \"fill\":\n          if (colorScheme == \"white\") {\n            return [getColor(\"white\", \"04\"), getColor(\"gray\", \"02\")]\n          } else if (colorScheme != \"gray\" && colorScheme != \"grayBlue\") {\n            return [\n              getColor(\n                colorScheme,\n                hasGlobalColor(`--${illaPrefix}-${colorScheme}-07`)\n                  ? \"07\"\n                  : \"05\",\n              ),\n              getColor(\"white\", \"01\"),\n            ]\n          } else {\n            return [getColor(colorScheme, \"09\"), getColor(colorScheme, \"05\")]\n          }\n        case \"light\": {\n          if (colorScheme == \"white\") {\n            return [getColor(\"white\", \"04\"), getColor(\"gray\", \"02\")]\n          } else {\n            return [getColor(colorScheme, \"08\"), getColor(colorScheme, \"05\")]\n          }\n        }\n        case \"dashed\":\n        case \"outline\":\n          if (colorScheme == \"white\") {\n            return [getColor(\"white\", \"04\"), getColor(\"gray\", \"02\")]\n          } else if (colorScheme != \"gray\" && colorScheme != \"grayBlue\") {\n            return [getColor(colorScheme, \"06\"), getColor(colorScheme, \"06\")]\n          } else {\n            return [getColor(colorScheme, \"08\"), getColor(colorScheme, \"05\")]\n          }\n        case \"text\":\n          if (colorScheme == \"white\") {\n            return [getColor(\"white\", \"04\"), getColor(\"gray\", \"02\")]\n          } else {\n            return [getColor(\"transparent\", \"01\"), getColor(colorScheme, \"07\")]\n          }\n      }\n  }\n  return []\n}\n\nexport function applyBg(\n  variant: ButtonVariant,\n  colorScheme: ButtonColorScheme,\n): SerializedStyles {\n  switch (variant) {\n    case \"text\":\n      return css`\n        &:hover {\n          background-color: ${getDifferentStatusColor(\n            colorScheme,\n            variant,\n            State.HOVER,\n          )[0]};\n        }\n\n        &:active {\n          transition: none;\n          background-color: ${getDifferentStatusColor(\n            colorScheme,\n            variant,\n            State.ACTIVE,\n          )[0]};\n        }\n      `\n    case \"dashed\":\n      return css`\n        border: dashed 1px\n          ${getDifferentStatusColor(colorScheme, variant, State.DEFAULT)[0]};\n\n        &:hover {\n          border: dashed 1px\n            ${getDifferentStatusColor(colorScheme, variant, State.HOVER)[0]};\n        }\n\n        &:active {\n          transition: none;\n          border: dashed 1px\n            ${getDifferentStatusColor(colorScheme, variant, State.ACTIVE)[0]};\n        }\n\n        &:disabled {\n          border: dashed 1px\n            ${getDifferentStatusColor(colorScheme, variant, State.DISABLE)[0]};\n        }\n      `\n    case \"fill\":\n      return css`\n        background-color: ${getDifferentStatusColor(\n          colorScheme,\n          variant,\n          State.DEFAULT,\n        )[0]};\n\n        &:hover {\n          background-color: ${getDifferentStatusColor(\n            colorScheme,\n            variant,\n            State.HOVER,\n          )[0]};\n        }\n\n        &:active {\n          transition: none;\n          background-color: ${getDifferentStatusColor(\n            colorScheme,\n            variant,\n            State.ACTIVE,\n          )[0]};\n        }\n\n        &:disabled {\n          background-color: ${getDifferentStatusColor(\n            colorScheme,\n            variant,\n            State.DISABLE,\n          )[0]};\n        }\n      `\n    case \"outline\":\n      return css`\n        border: solid 1px\n          ${getDifferentStatusColor(colorScheme, variant, State.DEFAULT)[0]};\n\n        &:hover {\n          border: solid 1px\n            ${getDifferentStatusColor(colorScheme, variant, State.HOVER)[0]};\n        }\n\n        &:active {\n          transition: none;\n          border: solid 1px\n            ${getDifferentStatusColor(colorScheme, variant, State.ACTIVE)[0]};\n        }\n\n        &:disabled {\n          border: solid 1px\n            ${getDifferentStatusColor(colorScheme, variant, State.DISABLE)[0]};\n        }\n      `\n    case \"light\":\n      return css`\n        background-color: ${getDifferentStatusColor(\n          colorScheme,\n          variant,\n          State.DEFAULT,\n        )[0]};\n\n        &:hover {\n          background-color: ${getDifferentStatusColor(\n            colorScheme,\n            variant,\n            State.HOVER,\n          )[0]};\n        }\n\n        &:active {\n          transition: none;\n          background-color: ${getDifferentStatusColor(\n            colorScheme,\n            variant,\n            State.ACTIVE,\n          )[0]};\n        }\n\n        &:disabled {\n          background-color: ${getDifferentStatusColor(\n            colorScheme,\n            variant,\n            State.DISABLE,\n          )[0]};\n        }\n      `\n  }\n}\n\nexport function applyCursor(loading: boolean): SerializedStyles {\n  if (loading) {\n    return css`\n      cursor: default;\n\n      &:disabled {\n        cursor: not-allowed;\n      }\n    `\n  } else {\n    return css`\n      cursor: pointer;\n\n      &:disabled {\n        cursor: not-allowed;\n      }\n    `\n  }\n}\n\nexport function applyElementColor(\n  variant: ButtonVariant,\n  colorScheme: ButtonColorScheme,\n): SerializedStyles {\n  switch (variant) {\n    case \"text\":\n      return css`\n        color: ${getDifferentStatusColor(\n          colorScheme,\n          variant,\n          State.DEFAULT,\n        )[1]};\n\n        &:disabled {\n          color: ${getDifferentStatusColor(\n            colorScheme,\n            variant,\n            State.DISABLE,\n          )[1]};\n        }\n      `\n    case \"light\":\n      return css`\n        color: ${getDifferentStatusColor(\n          colorScheme,\n          variant,\n          State.DEFAULT,\n        )[1]};\n\n        &:hover {\n          color: ${getDifferentStatusColor(\n            colorScheme,\n            variant,\n            State.HOVER,\n          )[1]};\n        }\n\n        &:active {\n          transition: none;\n          color: ${getDifferentStatusColor(\n            colorScheme,\n            variant,\n            State.ACTIVE,\n          )[1]};\n        }\n\n        &:disabled {\n          color: ${getDifferentStatusColor(\n            colorScheme,\n            variant,\n            State.DISABLE,\n          )[1]};\n        }\n      `\n    case \"outline\":\n    case \"dashed\":\n      return css`\n        color: ${getDifferentStatusColor(\n          colorScheme,\n          variant,\n          State.DEFAULT,\n        )[1]};\n\n        &:hover {\n          color: ${getDifferentStatusColor(\n            colorScheme,\n            variant,\n            State.HOVER,\n          )[1]};\n        }\n\n        &:active {\n          transition: none;\n          color: ${getDifferentStatusColor(\n            colorScheme,\n            variant,\n            State.ACTIVE,\n          )[1]};\n        }\n\n        &:disabled {\n          color: ${getDifferentStatusColor(\n            colorScheme,\n            variant,\n            State.DISABLE,\n          )[1]};\n        }\n      `\n    case \"fill\":\n      return css`\n        color: ${getDifferentStatusColor(\n          colorScheme,\n          variant,\n          State.DEFAULT,\n        )[1]};\n\n        &:hover {\n          color: ${getDifferentStatusColor(\n            colorScheme,\n            variant,\n            State.HOVER,\n          )[1]};\n        }\n\n        &:active {\n          transition: none;\n          color: ${getDifferentStatusColor(\n            colorScheme,\n            variant,\n            State.ACTIVE,\n          )[1]};\n        }\n\n        &:disabled {\n          color: ${getDifferentStatusColor(\n            colorScheme,\n            variant,\n            State.DISABLE,\n          )[1]};\n        }\n      `\n  }\n  return css``\n}\n\nexport function applyShape(\n  shape: ButtonShape,\n  attached: boolean,\n  first: boolean,\n  last: boolean,\n): SerializedStyles {\n  switch (shape) {\n    case \"square\":\n      if (attached) {\n        if (first) {\n          return css`\n            border-top-left-radius: 4px;\n            border-bottom-left-radius: 4px;\n          `\n        } else if (last) {\n          return css`\n            border-top-right-radius: 4px;\n            border-bottom-right-radius: 4px;\n          `\n        } else {\n          return css`\n            border-radius: 0;\n          `\n        }\n      }\n      return css`\n        border-radius: 8px;\n      `\n    case \"round\":\n      if (attached) {\n        if (first) {\n          return css`\n            border-top-left-radius: 999px;\n            border-bottom-left-radius: 999px;\n          `\n        } else if (last) {\n          return css`\n            border-top-right-radius: 999px;\n            border-bottom-right-radius: 999px;\n          `\n        } else {\n          return css`\n            border-radius: 0;\n          `\n        }\n      } else {\n        return css`\n          border-radius: 999px;\n        `\n      }\n  }\n}\n\nexport function applyPaddingStyle(\n  size: ButtonSize,\n  variant: ButtonVariant,\n): SerializedStyles {\n  switch (size) {\n    case \"small\":\n      return css`\n        padding: ${variant == \"outline\" || variant == \"dashed\"\n          ? \"1px 7px\"\n          : \"2px 8px\"};\n        min-height: 24px;\n      `\n    case \"medium\":\n      return css`\n        padding: ${variant == \"outline\" || variant == \"dashed\"\n          ? \"4px 15px\"\n          : \"5px 16px\"};\n        min-height: 32px;\n      `\n    case \"large\":\n      return css`\n        padding: ${variant == \"outline\" || variant == \"dashed\"\n          ? \"8px 15px\"\n          : \"9px 16px\"};\n        min-height: 40px;\n      `\n  }\n}\n\nexport function applyWithoutTextSize(\n  size: ButtonSize,\n  fullWidth?: boolean,\n  fullHeight?: boolean,\n): SerializedStyles {\n  switch (size) {\n    case \"small\":\n      return css`\n        justify-content: center;\n        width: ${fullWidth ? \"100%\" : \"24px\"};\n        height: ${fullHeight ? \"100%\" : \"24px\"};\n        font-size: 16px;\n      `\n    case \"medium\":\n      return css`\n        justify-content: center;\n        width: ${fullWidth ? \"100%\" : \"32px\"};\n        height: ${fullHeight ? \"100%\" : \"32px\"};\n        font-size: 16px;\n      `\n    case \"large\":\n      return css`\n        justify-content: center;\n        width: ${fullWidth ? \"100%\" : \"40px\"};\n        height: ${fullHeight ? \"100%\" : \"40px\"};\n        font-size: 16px;\n      `\n  }\n}\n\nexport function applyFontStyle(size: ButtonSize): SerializedStyles {\n  switch (size) {\n    case \"small\":\n      return css`\n        font-size: 12px;\n        font-weight: normal;\n        font-stretch: normal;\n        font-style: normal;\n        line-height: 20px;\n        letter-spacing: normal;\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n      `\n    case \"medium\":\n    case \"large\":\n      return css`\n        font-size: 14px;\n        font-weight: normal;\n        font-stretch: normal;\n        font-style: normal;\n        line-height: 22px;\n        letter-spacing: normal;\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n      `\n  }\n}\n\nexport function applyLeftIconStyle(\n  size: ButtonSize,\n  hasChildren?: boolean,\n): SerializedStyles {\n  switch (size) {\n    case \"small\":\n      return css`\n        display: inline-flex;\n        flex-direction: row;\n        align-items: center;\n        font-size: 16px;\n        margin-right: ${hasChildren ? \"4px\" : \"0\"};\n      `\n    case \"medium\":\n    case \"large\":\n      return css`\n        display: inline-flex;\n        flex-direction: row;\n        align-items: center;\n        font-size: 16px;\n        margin-right: ${hasChildren ? \"8px\" : \"0\"};\n      `\n  }\n}\n\nexport function applyIconWithoutText(size: ButtonSize): SerializedStyles {\n  switch (size) {\n    case \"small\":\n    case \"medium\":\n    case \"large\":\n      return css`\n        display: inline-flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: center;\n      `\n  }\n}\n\nexport function applyRightIconStyle(\n  size: ButtonSize,\n  hasChildren?: boolean,\n): SerializedStyles {\n  switch (size) {\n    case \"small\":\n      return css`\n        display: inline-flex;\n        flex-direction: row;\n        align-items: center;\n        font-size: 16px;\n        margin-left: ${hasChildren ? \"6px\" : \"0\"};\n      `\n    case \"medium\":\n    case \"large\":\n      return css`\n        display: inline-flex;\n        flex-direction: row;\n        align-items: center;\n        font-size: 16px;\n        margin-left: ${hasChildren ? \"8px\" : \"0\"};\n      `\n  }\n}\n\n// button group\nexport const avatarGroupContainer = css`\n  display: inline-flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nexport function applySpacing(\n  spacing: string,\n  index: number,\n  attached: boolean,\n): SerializedStyles {\n  if (attached) {\n    return css`\n      display: inline-flex;\n      margin-left: ${index != 0 ? \"-1px\" : \"0px\"};\n    `\n  } else {\n    return css`\n      display: inline-flex;\n      margin-left: ${index == 0 ? \"0px\" : spacing};\n    `\n  }\n}\n","import { Children, forwardRef } from \"react\"\nimport { ButtonProps } from \"./interface\"\nimport { css } from \"@emotion/react\"\nimport { LoadingIcon } from \"@illa-design/icon\"\nimport {\n  applyBg,\n  applyCursor,\n  applyElementColor,\n  applyFontStyle,\n  applyIconWithoutText,\n  applyLeftIconStyle,\n  applyPaddingStyle,\n  applyRightIconStyle,\n  applyShape,\n  applyTagContainer,\n  applyWithoutTextSize,\n} from \"./style\"\nimport { ButtonGroupContext } from \".\"\nimport { applyBoxStyle, deleteCssProps } from \"@illa-design/theme\"\n\nexport const Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  (props, ref) => {\n    return (\n      <ButtonGroupContext.Consumer>\n        {(value) => {\n          const { attached, first, last } = value ?? {}\n          const {\n            colorScheme = value?.colorScheme ?? \"blue\",\n            size = value?.size ?? \"medium\",\n            variant = value?.variant ?? \"fill\",\n            shape = value?.shape ?? \"square\",\n            fullWidth,\n            fullHeight,\n            loading,\n            loadingText,\n            leftIcon,\n            disabled,\n            rightIcon,\n            onClick,\n            ...otherProps\n          } = props\n\n          const hasLoadingText =\n            loadingText != undefined && loadingText.length > 0\n          const hasChild = Children.count(props.children) >= 1\n          const hasPropContent = hasChild || (hasLoadingText && loading)\n          const finalContainer = css`\n            ${applyTagContainer(fullWidth, fullHeight)};\n            ${applyCursor(loading ?? false)}\n            ${hasPropContent\n              ? applyPaddingStyle(size, variant)\n              : applyWithoutTextSize(size, fullWidth, fullHeight)};\n            ${applyShape(\n              shape,\n              attached ?? false,\n              first ?? false,\n              last ?? false,\n            )};\n            ${applyElementColor(variant, colorScheme)};\n            ${applyBg(variant, colorScheme)};\n          `\n\n          return (\n            <button\n              ref={ref}\n              css={[finalContainer, applyBoxStyle(otherProps)]}\n              onClick={(e) => {\n                if (disabled || loading) {\n                  return\n                }\n                onClick?.(e)\n              }}\n              disabled={disabled || loading}\n              {...deleteCssProps(otherProps)}\n            >\n              {(loading || leftIcon) && (\n                <span\n                  css={\n                    hasPropContent\n                      ? applyLeftIconStyle(size, hasChild)\n                      : applyIconWithoutText(size)\n                  }\n                >\n                  {loading ? <LoadingIcon spin={true} /> : leftIcon}\n                </span>\n              )}\n              {hasPropContent && (\n                <span css={applyFontStyle(size)}>\n                  {loading && loadingText ? loadingText : props.children}\n                </span>\n              )}\n              {rightIcon && (\n                <span\n                  css={\n                    hasPropContent\n                      ? applyRightIconStyle(size, hasChild)\n                      : applyIconWithoutText(size)\n                  }\n                >\n                  {rightIcon}\n                </span>\n              )}\n            </button>\n          )\n        }}\n      </ButtonGroupContext.Consumer>\n    )\n  },\n)\n\nButton.displayName = \"Button\"\n","import { createContext } from \"react\"\nimport { ButtonGroupContextProps } from \"./interface\"\n\nexport const ButtonGroupContext = createContext<\n  ButtonGroupContextProps | undefined\n>(undefined)\n\nButtonGroupContext.displayName = \"ButtonGroupContext\"\n"],"names":["applyTagContainer","fullWidth","fullHeight","css","getDifferentStatusColor","colorScheme","variant","state","getColor","getSpecialThemeColor","hasGlobalColor","illaPrefix","applyBg","applyCursor","loading","applyElementColor","applyShape","shape","attached","first","last","applyPaddingStyle","size","applyWithoutTextSize","applyFontStyle","applyLeftIconStyle","hasChildren","applyIconWithoutText","applyRightIconStyle","avatarGroupContainer","applySpacing","spacing","index","Button","forwardRef","props","ref","jsx","ButtonGroupContext","value","loadingText","leftIcon","disabled","rightIcon","onClick","otherProps","hasLoadingText","hasChild","Children","hasPropContent","finalContainer","jsxs","applyBoxStyle","e","deleteCssProps","LoadingIcon","createContext"],"mappings":"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"}