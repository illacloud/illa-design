{"version":3,"file":"week-picker.stories-f5939565.js","sources":["../../../../packages/date-picker/src/single-week-picker.tsx"],"sourcesContent":["import {\n  ChangeEvent,\n  FC,\n  useRef,\n  useState,\n  MouseEvent,\n  useEffect,\n  forwardRef,\n} from \"react\"\nimport {\n  GetHeaderOperationsFun,\n  DatePickerModeType,\n  SingleWeekPickerProps,\n} from \"./interface\"\nimport { PickerContext } from \"./context\"\nimport { Trigger } from \"@illa-design/trigger\"\nimport { DateInput } from \"./input/singleInput\"\nimport { getFormat } from \"./utils/uiHelpers\"\nimport { Dayjs, UnitType } from \"dayjs\"\nimport { getDefaultValue, getLocaleDayjsValue } from \"./utils/dateHelper\"\nimport {\n  dayjsPro,\n  getDayjsValue,\n  getNow,\n  isDayjsChange,\n  toLocal,\n  toTimezone,\n  usePrevious,\n} from \"@illa-design/system\"\nimport { CalendarIcon } from \"@illa-design/icon\"\nimport { BasicFooterSection } from \"./panels/basic-footer-section\"\nimport { WeekPickerPanel } from \"./panels/week\"\nimport { applyBoxStyle } from \"@illa-design/theme\"\n\nexport const SingleWeekPicker = forwardRef<\n  HTMLDivElement,\n  SingleWeekPickerProps\n>((props, ref) => {\n  const {\n    allowClear = true,\n    placeholder,\n    disabled,\n    position = \"bottom-start\",\n    error,\n    editable = true,\n    triggerProps,\n    onSelect,\n    onVisibleChange,\n    value: propsValue,\n    onChange,\n    disabledDate,\n    extra,\n    defaultPickerValue,\n    pickerValue,\n    onPickerValueChange,\n    utcOffset,\n    timezone,\n    defaultValue,\n    size = \"medium\",\n    colorScheme = \"blue\",\n    inputSuffix,\n    onOk,\n  } = props\n\n  const refInput = useRef<HTMLInputElement>(null)\n\n  const weekStart = 0\n\n  const realFormat = getFormat(\"week\", props.format) as string\n  let format = realFormat\n\n  const [value, setValue] = useState<Dayjs | undefined>(\n    getDefaultValue(\n      format,\n      propsValue,\n      defaultValue,\n      utcOffset,\n      timezone,\n    ) as Dayjs,\n  )\n  const [popupVisible, setPopupVisible] = useState<boolean | undefined>(\n    !!props.popupVisible,\n  )\n  const [hoverPlaceholderValue, setHoverPlaceholderValue] = useState<string>()\n  const mergedPopupVisible =\n    \"popupVisible\" in props ? props.popupVisible : popupVisible\n  const mergedValue =\n    \"value\" in props\n      ? (getDayjsValue(\n          propsValue as Dayjs,\n          format,\n          utcOffset,\n          timezone,\n        ) as Dayjs)\n      : value\n\n  const defaultPageShowDate =\n    mergedValue ||\n    (getDayjsValue(defaultPickerValue as Dayjs, format) as Dayjs) ||\n    getNow()\n\n  const [inputValue, setInputValue] = useState<string | undefined>()\n  const [valueShow, setValueShow] = useState<Dayjs>()\n  const [pageShowDate, setPageShowDate] = useState<Dayjs | undefined>(\n    defaultPageShowDate,\n  )\n  const mergedPageShowDate =\n    (getDayjsValue(pickerValue as Dayjs, format) as Dayjs) || pageShowDate\n\n  const panelValue = valueShow || mergedValue\n  const [panelMode, setPanelMode] = useState<DatePickerModeType>(\"week\")\n\n  function focusInput() {\n    refInput.current?.focus?.()\n  }\n\n  function blurInput() {\n    refInput.current?.blur?.()\n  }\n\n  const previousUtcOffset = usePrevious(utcOffset)\n  const previousTimezone = usePrevious(timezone)\n\n  const isDidMount = useRef<boolean>(false)\n\n  useEffect(() => {\n    if (isDidMount.current) {\n      if (\n        value &&\n        (previousUtcOffset !== utcOffset || timezone !== previousTimezone)\n      ) {\n        const localValue = toLocal(value, previousUtcOffset, previousTimezone)\n        setValue(toTimezone(localValue, utcOffset, timezone))\n      }\n    } else {\n      isDidMount.current = true\n    }\n  }, [previousTimezone, previousUtcOffset, timezone, utcOffset, value])\n\n  useEffect(() => {\n    setInputValue(undefined)\n    setHoverPlaceholderValue(undefined)\n\n    if (mergedPopupVisible) {\n      setPageShowDate(defaultPageShowDate)\n    } else {\n      setValueShow(undefined)\n      setTimeout(() => {\n        setPanelMode(\"week\")\n        blurInput()\n      }, 100)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mergedPopupVisible])\n\n  function visibleChange(visible: boolean) {\n    if (visible) {\n      setOpen(visible, () => {\n        focusInput()\n      })\n    } else {\n      setOpen(false)\n    }\n  }\n\n  function handlePickerValueChange(v?: Dayjs) {\n    onPickerValueChange && onPickerValueChange(v?.format(format), v)\n  }\n\n  function setOpen(visible?: boolean, callback?: () => void) {\n    setPopupVisible(visible)\n    onVisibleChange && onVisibleChange(visible)\n    callback && callback()\n  }\n\n  function onClear(e: MouseEvent<HTMLSpanElement>) {\n    e.stopPropagation()\n    setValue(undefined)\n    setValueShow(undefined)\n    onHandleChange(undefined)\n    props.onClear && props.onClear()\n  }\n\n  function onClickConfirmBtn() {\n    const pv = getLocaleDayjsValue(panelValue, \"en-us\")\n    onConfirmValue()\n    onOk && onOk(pv && pv.format(format), pv)\n  }\n\n  function onConfirmValue() {\n    setValue(panelValue)\n    onHandleChange(panelValue)\n    setOpen(false)\n  }\n\n  function onHandleSelect(_: string | undefined, date?: Dayjs) {\n    setInputValue(undefined)\n    setHoverPlaceholderValue(undefined)\n    const localTime = getLocaleDayjsValue(\n      toLocal(date as Dayjs, utcOffset, timezone).locale(\"en-us\"),\n      \"en-us\",\n    )\n    onSelect &&\n      onSelect(\n        localTime ? localTime.format(format) : undefined,\n        localTime as Dayjs,\n      )\n    setValue(date)\n    onHandleChange(date)\n    setOpen(false)\n  }\n\n  function onHandleChange(newValue: Dayjs | undefined) {\n    if (isDayjsChange(newValue, mergedValue)) {\n      onChange &&\n        onChange((newValue as Dayjs).format(format), newValue as Dayjs)\n    }\n  }\n\n  function isValid(time: string | Dayjs): boolean {\n    return (\n      typeof time === \"string\" &&\n      dayjsPro(time, format).format(format) === time &&\n      (typeof disabledDate === \"function\"\n        ? !disabledDate(dayjsPro(time, format))\n        : true)\n    )\n  }\n\n  function onChangeInput(e: ChangeEvent<HTMLInputElement>) {\n    const niv = e.target.value\n    setInputValue(niv)\n    if (!mergedPopupVisible) {\n      setOpen(true)\n    }\n    if (isValid(niv)) {\n      const newValue = getDayjsValue(niv, format, utcOffset, timezone) as Dayjs\n      setValueShow(newValue)\n      setPageShowDate(newValue)\n      setInputValue(undefined)\n    }\n  }\n\n  function onPressEnter() {\n    if (panelValue) {\n      onConfirmValue()\n      blurInput()\n    } else if (mergedPopupVisible) {\n      setOpen(false)\n    }\n  }\n\n  function changePageShowDate(type: \"prev\" | \"next\", unit: UnitType, num = 1) {\n    let newPageShowDate\n    if (type === \"prev\") {\n      // @ts-ignore\n      newPageShowDate = mergedPageShowDate.subtract(num, unit)\n    }\n    if (type === \"next\") {\n      // @ts-ignore\n      newPageShowDate = mergedPageShowDate.add(num, unit)\n    }\n\n    handlePickerValueChange(newPageShowDate)\n    setPageShowDate(newPageShowDate)\n  }\n\n  function getHeaderOperations(pickMode: DatePickerModeType = \"week\") {\n    if (pickMode === \"date\" || pickMode === \"week\") {\n      return {\n        onPrev: () => changePageShowDate(\"prev\", \"month\"),\n        onNext: () => changePageShowDate(\"next\", \"month\"),\n        onSuperPrev: () => changePageShowDate(\"prev\", \"year\"),\n        onSuperNext: () => changePageShowDate(\"next\", \"year\"),\n      }\n    }\n    if (pickMode === \"month\" || pickMode === \"quarter\") {\n      return {\n        onSuperPrev: () => changePageShowDate(\"prev\", \"year\"),\n        onSuperNext: () => changePageShowDate(\"next\", \"year\"),\n      }\n    }\n    if (pickMode === \"year\") {\n      return {\n        onSuperPrev: () => changePageShowDate(\"prev\", \"year\", 10),\n        onSuperNext: () => changePageShowDate(\"next\", \"year\", 10),\n      }\n    }\n  }\n\n  function onSelectNow() {\n    const now = getLocaleDayjsValue(getNow(utcOffset, timezone), \"en-us\")\n    handlePickerValueChange(now)\n    onHandleSelect(now?.format(format), now)\n  }\n\n  function onMouseEnterCell(value: Dayjs, disabled: boolean) {\n    if (!disabled) {\n      setHoverPlaceholderValue(value.format(format))\n    }\n  }\n\n  function onMouseLeaveCell() {\n    setHoverPlaceholderValue(undefined)\n  }\n\n  const suffixIcon =\n    inputSuffix === null ? null : inputSuffix || <CalendarIcon />\n\n  return (\n    <PickerContext.Provider value={{ utcOffset, timezone, weekStart }}>\n      <Trigger\n        content={\n          <>\n            <WeekPickerPanel\n              {...props}\n              {...getHeaderOperations()}\n              getHeaderOperations={\n                getHeaderOperations as GetHeaderOperationsFun\n              }\n              onSelect={onHandleSelect}\n              popupVisible={mergedPopupVisible}\n              format={format}\n              value={panelValue}\n              pageShowDate={mergedPageShowDate}\n              setPageShowDate={(v) => {\n                setPageShowDate(v)\n                handlePickerValueChange(v)\n              }}\n              panelMode={panelMode}\n              setPanelMode={setPanelMode}\n            />\n            {!!extra && (\n              <BasicFooterSection\n                disabled={!panelValue}\n                onClickConfirmBtn={onClickConfirmBtn}\n                extra={extra}\n                mode={panelMode}\n                onSelectNow={onSelectNow}\n              />\n            )}\n          </>\n        }\n        trigger=\"click\"\n        position={position}\n        disabled={disabled}\n        onVisibleChange={visibleChange}\n        popupVisible={mergedPopupVisible}\n        colorScheme=\"white\"\n        showArrow={false}\n        withoutPadding\n        {...triggerProps}\n      >\n        <div css={applyBoxStyle(props)} ref={ref}>\n          <DateInput\n            ref={refInput}\n            placeholder={placeholder as string | undefined}\n            popupVisible={mergedPopupVisible}\n            value={valueShow || mergedValue}\n            inputValue={hoverPlaceholderValue || inputValue}\n            onChange={onChangeInput}\n            isPlaceholder={!!hoverPlaceholderValue}\n            format={realFormat}\n            disabled={disabled}\n            error={error}\n            size={size}\n            colorScheme={colorScheme}\n            onPressEnter={onPressEnter}\n            onClear={onClear}\n            allowClear={allowClear}\n            editable={editable}\n            suffixIcon={suffixIcon}\n          />\n        </div>\n      </Trigger>\n    </PickerContext.Provider>\n  )\n})\n\nSingleWeekPicker.displayName = \"SingleWeekPicker\"\n"],"names":["SingleWeekPicker","forwardRef","props","ref","allowClear","placeholder","disabled","position","error","editable","triggerProps","onSelect","onVisibleChange","propsValue","onChange","disabledDate","extra","defaultPickerValue","pickerValue","onPickerValueChange","utcOffset","timezone","defaultValue","size","colorScheme","inputSuffix","onOk","refInput","useRef","weekStart","realFormat","getFormat","format","value","setValue","useState","getDefaultValue","popupVisible","setPopupVisible","hoverPlaceholderValue","setHoverPlaceholderValue","mergedPopupVisible","mergedValue","getDayjsValue","defaultPageShowDate","getNow","inputValue","setInputValue","valueShow","setValueShow","pageShowDate","setPageShowDate","mergedPageShowDate","panelValue","panelMode","setPanelMode","focusInput","_b","_a","blurInput","previousUtcOffset","usePrevious","previousTimezone","isDidMount","useEffect","localValue","toLocal","toTimezone","visibleChange","visible","setOpen","handlePickerValueChange","v","callback","onClear","onHandleChange","onClickConfirmBtn","pv","getLocaleDayjsValue","onConfirmValue","onHandleSelect","_","date","localTime","newValue","isDayjsChange","isValid","time","dayjsPro","onChangeInput","niv","onPressEnter","changePageShowDate","type","unit","num","newPageShowDate","getHeaderOperations","pickMode","onSelectNow","now","suffixIcon","jsx","CalendarIcon","PickerContext","Trigger","jsxs","Fragment","WeekPickerPanel","BasicFooterSection","applyBoxStyle","DateInput"],"mappings":"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"}