{"version":3,"file":"tag-e795cf83.js","sources":["../../../../packages/tag/src/style.ts","../../../../packages/tag/src/tag.tsx"],"sourcesContent":["import { css, SerializedStyles } from \"@emotion/react\"\nimport { TagColorScheme, TagSize, TagVariant } from \"./interface\"\nimport { globalColor, illaPrefix } from \"@illa-design/theme\"\n\nexport function applyTagContainerStyle(clickable?: boolean): SerializedStyles {\n  return css`\n    display: inline-flex;\n    vertical-align: middle;\n    white-space: nowrap;\n    flex-direction: row;\n    align-items: center;\n    padding: 0 7px;\n    cursor: ${clickable ? \"pointer\" : \"default\"};\n  `\n}\n\nexport const tagSizeLargeStyle = css`\n  font-size: 14px;\n  line-height: 22px;\n  height: 32px;\n  font-weight: 400;\n`\n\nexport const tagSizeMediumStyle = css`\n  font-size: 14px;\n  line-height: 22px;\n  height: 24px;\n  font-weight: 400;\n`\n\nexport const tagSizeSmallStyle = css`\n  font-size: 12px;\n  line-height: 18px;\n  height: 18px;\n  font-weight: 400;\n`\n\nexport const tagContentStyle = css`\n  font-size: inherit;\n  line-height: inherit;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\nexport const leftIcon = css`\n  width: 12px;\n  font-size: 12px;\n  height: 12px;\n  display: inline-flex;\n  flex-direction: row;\n  align-items: center;\n  margin-right: 4px;\n`\n\nexport function applyCloseIcon(\n  color: TagColorScheme,\n  size: TagSize,\n  variant: TagVariant,\n): SerializedStyles {\n  let sizeCss: SerializedStyles\n  let variantCss: SerializedStyles = css()\n  if (size === \"small\") {\n    sizeCss = css({ padding: \"2px\" })\n  } else {\n    sizeCss = css({ padding: \"4px\" })\n  }\n  if (variant === \"fill\") {\n    variantCss = css`\n      &:hover {\n        background-color: ${globalColor(`--${illaPrefix}-white-07`)};\n      }\n    `\n  } else if (variant === \"outline\") {\n    if (color === \"gray\" || color === \"grayBlue\") {\n      variantCss = css`\n        &:hover {\n          background-color: ${globalColor(`--${illaPrefix}-${color}-08`)};\n        }\n      `\n    }\n  }\n\n  return css`\n    margin-left: 4px;\n    display: inline-flex;\n    align-items: center;\n    padding: 3px;\n    border-radius: 50%;\n\n    &:hover {\n      background-color: ${globalColor(`--${illaPrefix}-${color}-06`)};\n      cursor: pointer;\n    }\n\n    ${sizeCss}\n    ${variantCss}\n  `\n}\n\nexport const colors: TagColorScheme[] = [\n  \"white\",\n  \"blackAlpha\",\n  \"gray\",\n  \"grayBlue\",\n  \"red\",\n  \"orange\",\n  \"yellow\",\n  \"green\",\n  \"blue\",\n  \"cyan\",\n  \"purple\",\n  \"techPurple\",\n  \"techPink\",\n]\n\nexport function tagOutlinePrepare(color: TagColorScheme): SerializedStyles {\n  if (color == \"gray\" || color == \"grayBlue\") {\n    return css`\n      border-radius: 12px;\n      border: solid 1px ${globalColor(`--${illaPrefix}-${color}-08`)};\n      color: ${globalColor(`--${illaPrefix}-${color}-02`)};\n    `\n  } else {\n    return css`\n      border-radius: 12px;\n      border: solid 1px ${globalColor(`--${illaPrefix}-${color}-01`)};\n      color: ${globalColor(`--${illaPrefix}-${color}-01`)};\n    `\n  }\n}\n\nexport function tagFillPrepare(color: TagColorScheme): SerializedStyles {\n  return css`\n    background-color: ${globalColor(`--${illaPrefix}-${color}-01`)};\n    color: ${globalColor(`--${illaPrefix}-white-01`)};\n    border-radius: 12px;\n  `\n}\n\nexport function tagLightPrepare(color: TagColorScheme): SerializedStyles {\n  if (color == \"grayBlue\") {\n    return css`\n      border-radius: 12px;\n      background-color: ${globalColor(`--${illaPrefix}-${color}-09`)};\n      color: ${globalColor(`--${illaPrefix}-${color}-02`)};\n    `\n  } else {\n    return css`\n      border-radius: 12px;\n      background-color: ${globalColor(`--${illaPrefix}-${color}-07`)};\n      color: ${globalColor(`--${illaPrefix}-${color}-01`)};\n    `\n  }\n}\n\nexport function tagFillNormal(\n  color: Extract<TagColorScheme, string>,\n): SerializedStyles {\n  return css`\n    border-radius: 12px;\n    color: ${globalColor(`--${illaPrefix}-white-01`)};\n    background-color: ${color};\n  `\n}\n\nexport function tagOutlineNormal(\n  color: Extract<TagColorScheme, string>,\n): SerializedStyles {\n  return css`\n    border-radius: 12px;\n    color: ${color};\n    border: solid 1px ${color};\n  `\n}\n","import { forwardRef, useState } from \"react\"\nimport { TagProps } from \"./interface\"\nimport { css, SerializedStyles } from \"@emotion/react\"\nimport { CloseIcon } from \"@illa-design/icon\"\nimport { omit } from \"@illa-design/system\"\nimport {\n  applyCloseIcon,\n  applyTagContainerStyle,\n  colors,\n  leftIcon,\n  tagContentStyle,\n  tagFillNormal,\n  tagFillPrepare,\n  tagLightPrepare,\n  tagOutlineNormal,\n  tagOutlinePrepare,\n  tagSizeLargeStyle,\n  tagSizeMediumStyle,\n  tagSizeSmallStyle,\n} from \"./style\"\nimport { applyBoxStyle, deleteCssProps } from \"@illa-design/theme\"\nimport { Simulate } from \"react-dom/test-utils\"\n\nexport const Tag = forwardRef<HTMLDivElement, TagProps>((props, ref) => {\n  const {\n    visible,\n    colorScheme = \"gray\",\n    size = \"medium\",\n    variant = \"light\",\n    clickable,\n    closable,\n    ...rest\n  } = props\n\n  const otherProps = omit(rest, [\"onClose\", \"icon\"])\n\n  let variantCss: SerializedStyles\n\n  const [realVisible, setRealVisible] = useState(true)\n\n  // variant\n  if (colors.includes(colorScheme)) {\n    switch (variant) {\n      case \"light\": {\n        variantCss = tagLightPrepare(colorScheme)\n        break\n      }\n      case \"fill\": {\n        variantCss = tagFillPrepare(colorScheme)\n        break\n      }\n      case \"outline\": {\n        variantCss = tagOutlinePrepare(colorScheme)\n        break\n      }\n    }\n  } else {\n    switch (variant) {\n      case \"light\":\n      case \"fill\": {\n        variantCss = tagFillNormal(colorScheme)\n        break\n      }\n      case \"outline\": {\n        variantCss = tagOutlineNormal(colorScheme)\n        break\n      }\n    }\n  }\n\n  // size\n  let sizeCss: SerializedStyles\n  switch (size) {\n    case \"small\": {\n      sizeCss = tagSizeSmallStyle\n      break\n    }\n    case \"medium\": {\n      sizeCss = tagSizeMediumStyle\n      break\n    }\n    case \"large\": {\n      sizeCss = tagSizeLargeStyle\n      break\n    }\n  }\n\n  const finalStyle = css`\n    ${applyTagContainerStyle(clickable)};\n    ${variantCss};\n    ${sizeCss};\n  `\n\n  return (visible == undefined ? realVisible : visible) ? (\n    <div\n      css={[finalStyle, applyBoxStyle(props)]}\n      ref={ref}\n      {...deleteCssProps(otherProps)}\n    >\n      {props.icon && <span css={leftIcon}>{props.icon}</span>}\n      <span css={tagContentStyle}>{props.children}</span>\n      {props.closable && (\n        <span\n          css={applyCloseIcon(colorScheme, size, variant)}\n          onClick={(e) => {\n            if (props.onClose != undefined) {\n              props.onClose(e)\n            }\n            if (visible == undefined) {\n              setRealVisible(false)\n            }\n          }}\n        >\n          <CloseIcon size=\"8px\" />\n        </span>\n      )}\n    </div>\n  ) : null\n})\n\nTag.displayName = \"Tag\"\n"],"names":["applyTagContainerStyle","clickable","css","tagSizeLargeStyle","tagSizeMediumStyle","tagSizeSmallStyle","tagContentStyle","leftIcon","applyCloseIcon","color","size","variant","sizeCss","variantCss","globalColor","illaPrefix","colors","tagOutlinePrepare","tagFillPrepare","tagLightPrepare","tagFillNormal","tagOutlineNormal","Tag","forwardRef","props","ref","visible","colorScheme","closable","rest","otherProps","omit","realVisible","setRealVisible","useState","finalStyle","jsxs","applyBoxStyle","deleteCssProps","jsx","e","CloseIcon"],"mappings":"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"}