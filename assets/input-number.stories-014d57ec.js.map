{"version":3,"file":"input-number.stories-014d57ec.js","sources":["../../../../packages/input-number/src/style.ts","../../../../packages/input-number/src/input-number.tsx"],"sourcesContent":["import { css, SerializedStyles } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/theme\"\nimport { InputNumberSize } from \"./interface\"\n\nexport const controlContainerStyle = css`\n  transition: all 0.2s ease-in-out;\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  visibility: hidden;\n`\n\nexport function applyControlBlockStyle(\n  direction: \"up\" | \"bottom\",\n  size: InputNumberSize,\n): SerializedStyles {\n  return css`\n    display: inline-flex;\n    flex-direction: column;\n    align-items: center;\n    width: 18px;\n    height: ${size === \"small\" ? \"9px\" : \"11px\"};\n    border-radius: ${direction === \"up\" ? \"3px 3px 0 0\" : \"0 0 3px 3px\"};\n    background-color: ${getColor(\"grayBlue\", \"09\")};\n    font-size: 10px;\n    color: ${getColor(\"grayBlue\", \"04\")};\n\n    &:hover {\n      background-color: ${getColor(\"grayBlue\", \"07\")};\n    }\n  `\n}\n\nexport const hoverControlStyle = css`\n  &:hover {\n    .control {\n      visibility: visible;\n    }\n  }\n`\n\nexport function applyActionIconStyle(size: InputNumberSize): SerializedStyles {\n  return css`\n    font-size: 12px;\n    margin-left: ${size === \"large\" ? \"-2px\" : \"-6px\"};\n    margin-right: ${size === \"large\" ? \"-2px\" : \"-6px\"};\n    color: ${getColor(\"grayBlue\", \"05\")};\n    &:active {\n      color: ${getColor(\"grayBlue\", \"02\")};\n    }\n  `\n}\n","import { forwardRef, MutableRefObject, useCallback, useRef } from \"react\"\nimport { InputNumberProps } from \"./interface\"\nimport { Input } from \"@illa-design/input\"\nimport { DownIcon, MinusIcon, PlusIcon, UpIcon } from \"@illa-design/icon\"\nimport { Space } from \"@illa-design/space\"\nimport { isNumber, mergeRefs, useMergeValue } from \"@illa-design/system\"\nimport {\n  applyActionIconStyle,\n  applyControlBlockStyle,\n  controlContainerStyle,\n  hoverControlStyle,\n} from \"./style\"\n\nexport const InputNumber = forwardRef<HTMLInputElement, InputNumberProps>(\n  (props, ref) => {\n    const {\n      size = \"medium\",\n      colorScheme = \"blue\",\n      disabled,\n      precision,\n      error,\n      hideControl,\n      readOnly,\n      max = Number.MAX_SAFE_INTEGER,\n      min = Number.MIN_SAFE_INTEGER,\n      step = 1,\n      onBlur,\n      onFocus,\n      placeholder,\n      mode = \"embed\",\n      prefix,\n      suffix,\n      defaultValue,\n      value,\n      icons,\n      inputRef,\n      formatter,\n      parser,\n      onChange,\n      ...otherProps\n    } = props\n\n    const [finalValue, setFinalValue] = useMergeValue<string | number>(\"\", {\n      value,\n      defaultValue,\n    })\n\n    const currentInputRef =\n      useRef<HTMLInputElement>() as MutableRefObject<HTMLInputElement>\n\n    const plusStep = useCallback((): void => {\n      const currentNumber = Number(finalValue)\n\n      if (!isNumber(currentNumber)) {\n        if (0 <= max && 0 >= min) {\n          if (value === undefined) {\n            setFinalValue(0)\n          }\n          onChange?.(0)\n        } else {\n          if (value === undefined) {\n            setFinalValue(min)\n          }\n          onChange?.(min)\n        }\n        return\n      }\n\n      if (currentNumber + step <= max && currentNumber + step >= min) {\n        if (value === undefined) {\n          setFinalValue(currentNumber + step)\n        }\n        onChange?.(currentNumber + step)\n      }\n    }, [finalValue, max, min, onChange, setFinalValue, step, value])\n    const minusStep = useCallback((): void => {\n      const currentNumber = Number(finalValue)\n\n      if (!isNumber(currentNumber)) {\n        if (0 <= max && 0 >= min) {\n          if (value === undefined) {\n            setFinalValue(0)\n          }\n          onChange?.(0)\n        } else {\n          if (value === undefined) {\n            setFinalValue(min)\n          }\n          onChange?.(min)\n        }\n        return\n      }\n\n      if (currentNumber - step <= max && currentNumber - step >= min) {\n        if (value === undefined) {\n          setFinalValue(currentNumber - step)\n        }\n        onChange?.(currentNumber - step)\n      }\n    }, [finalValue, max, min, onChange, setFinalValue, step, value])\n\n    const control = (\n      <div className=\"control\" css={controlContainerStyle}>\n        <div\n          css={applyControlBlockStyle(\"up\", size)}\n          onClick={() => {\n            currentInputRef.current.focus()\n            plusStep()\n          }}\n        >\n          {icons?.up ?? <UpIcon />}\n        </div>\n        <div\n          css={applyControlBlockStyle(\"bottom\", size)}\n          onClick={() => {\n            currentInputRef.current.focus()\n            minusStep()\n          }}\n        >\n          {icons?.down ?? <DownIcon />}\n        </div>\n      </div>\n    )\n\n    const dealNumber = useCallback(\n      (num: string | number) => {\n        if (!isNumber(Number(num))) {\n          if (0 <= max && 0 >= min) {\n            return 0\n          } else {\n            return min\n          }\n        }\n        if (precision !== undefined) {\n          let formatNum = Number(Number(num).toFixed(precision))\n          formatNum = Math.max(formatNum, min)\n          formatNum = Math.min(formatNum, max)\n          return formatNum\n        } else {\n          let formatNum = Number(num)\n          formatNum = Math.max(formatNum, min)\n          formatNum = Math.min(formatNum, max)\n          return formatNum\n        }\n      },\n      [max, min, precision],\n    )\n\n    return (\n      <Input\n        ref={ref}\n        inputRef={mergeRefs(currentInputRef, inputRef)}\n        _css={hoverControlStyle}\n        size={size}\n        value={finalValue}\n        onChange={(e) => {\n          const rawValue = parser ? parser(e) : e\n          if (isNumber(Number(rawValue))) {\n            if (value === undefined) {\n              setFinalValue(formatter ? formatter(rawValue) : rawValue)\n            }\n          } else {\n            if (value === undefined) {\n              setFinalValue(e)\n            }\n          }\n          onChange?.(dealNumber(rawValue))\n        }}\n        onPressEnter={() => {\n          const rawValue = parser\n            ? parser(currentInputRef.current.value)\n            : currentInputRef.current.value\n\n          const dealNum = dealNumber(rawValue)\n\n          if (value === undefined) {\n            setFinalValue(formatter ? formatter(dealNum) : dealNum)\n          }\n          onChange?.(dealNum)\n        }}\n        onBlur={(e) => {\n          const rawValue = parser ? parser(e.target.value) : e.target.value\n          const dealNum = dealNumber(rawValue)\n          if (value === undefined) {\n            setFinalValue(formatter ? formatter(dealNum) : dealNum)\n          }\n          onChange?.(dealNum)\n          onBlur?.(e)\n        }}\n        onFocus={(e) => {\n          onFocus?.(e)\n        }}\n        readOnly={readOnly}\n        placeholder={placeholder}\n        prefix={prefix}\n        suffix={\n          <Space mr=\"-8px\">\n            {suffix}\n            {!hideControl &&\n              !readOnly &&\n              !disabled &&\n              mode === \"embed\" &&\n              control}\n          </Space>\n        }\n        addBefore={\n          mode === \"button\" ? (\n            <span\n              css={applyActionIconStyle(size)}\n              onClick={() => {\n                minusStep()\n              }}\n            >\n              {icons?.minus ?? <MinusIcon />}\n            </span>\n          ) : undefined\n        }\n        addAfter={\n          mode === \"button\" ? (\n            <span\n              css={applyActionIconStyle(size)}\n              onClick={() => {\n                plusStep()\n              }}\n            >\n              {icons?.plus ?? <PlusIcon />}\n            </span>\n          ) : undefined\n        }\n        colorScheme={colorScheme}\n        disabled={disabled}\n        error={error}\n        {...otherProps}\n      />\n    )\n  },\n)\n\nInputNumber.displayName = \"InputNumber\"\n"],"names":["controlContainerStyle","css","applyControlBlockStyle","direction","size","getColor","hoverControlStyle","applyActionIconStyle","InputNumber","forwardRef","props","ref","colorScheme","disabled","precision","error","hideControl","readOnly","max","min","step","onBlur","onFocus","placeholder","mode","prefix","suffix","defaultValue","value","icons","inputRef","formatter","parser","onChange","otherProps","finalValue","setFinalValue","useMergeValue","currentInputRef","useRef","plusStep","useCallback","currentNumber","isNumber","minusStep","control","jsxs","jsx","UpIcon","DownIcon","dealNumber","num","formatNum","Input","mergeRefs","e","rawValue","dealNum","Space","MinusIcon","PlusIcon"],"mappings":"k0BAIO,MAAMA,GAAwBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQrB,SAAAC,EACdC,EACAC,EACkB,CACX,OAAAH;AAAA;AAAA;AAAA;AAAA;AAAA,cAKKG,IAAS,QAAU,MAAQ,MAAM;AAAA,qBAC1BD,IAAc,KAAO,cAAgB,aAAa;AAAA,wBAC/CE,EAAS,WAAY,IAAI,CAAC;AAAA;AAAA,aAErCA,EAAS,WAAY,IAAI,CAAC;AAAA;AAAA;AAAA,0BAGbA,EAAS,WAAY,IAAI,CAAC;AAAA;AAAA,GAGpD,CAEO,MAAMC,GAAoBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQ1B,SAASM,EAAqBH,EAAyC,CACrE,OAAAH;AAAA;AAAA,mBAEUG,IAAS,QAAU,OAAS,MAAM;AAAA,oBACjCA,IAAS,QAAU,OAAS,MAAM;AAAA,aACzCC,EAAS,WAAY,IAAI,CAAC;AAAA;AAAA,eAExBA,EAAS,WAAY,IAAI,CAAC;AAAA;AAAA,GAGzC,CCtCO,MAAAG,EAAAC,EAAA,WAAoB,CAAAC,EAAAC,IAAA,CAEvB,KAAA,CAAM,KAAAP,EAAA,SACG,YAAAQ,EAAA,OACO,SAAAC,EACd,UAAAC,EACA,MAAAC,EACA,YAAAC,EACA,SAAAC,EACA,IAAAC,EAAA,OAAA,iBACa,IAAAC,EAAA,OAAA,iBACA,KAAAC,EAAA,EACN,OAAAC,EACP,QAAAC,EACA,YAAAC,EACA,KAAAC,EAAA,QACO,OAAAC,EACP,OAAAC,EACA,aAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,EACA,OAAAC,EACA,SAAAC,EACA,GAAAC,CACG,EAAAxB,EAGL,CAAAyB,EAAAC,CAAA,EAAAC,EAAA,GAAA,CAAuE,MAAAT,EACrE,aAAAD,CACA,CAAA,EAGFW,EAAAC,EAAAA,SAGAC,EAAAC,EAAAA,YAAA,IAAA,CACE,MAAAC,EAAA,OAAAP,CAAA,EAEA,GAAA,CAAAQ,EAAAD,CAAA,EAAA,CACE,GAAAxB,GAAA,GAAAC,GACES,IAAA,QACEQ,EAAA,CAAA,EAEFH,GAAA,MAAAA,EAAA,KAEAL,IAAA,QACEQ,EAAAjB,CAAA,EAEFc,GAAA,MAAAA,EAAAd,IAEF,MAAA,CAGFuB,EAAAtB,GAAAF,GAAAwB,EAAAtB,GAAAD,IACES,IAAA,QACEQ,EAAAM,EAAAtB,CAAA,EAEFa,GAAA,MAAAA,EAAAS,EAAAtB,GACF,EAAA,CAAAe,EAAAjB,EAAAC,EAAAc,EAAAG,EAAAhB,EAAAQ,CAAA,CAAA,EAEFgB,EAAAH,EAAAA,YAAA,IAAA,CACE,MAAAC,EAAA,OAAAP,CAAA,EAEA,GAAA,CAAAQ,EAAAD,CAAA,EAAA,CACE,GAAAxB,GAAA,GAAAC,GACES,IAAA,QACEQ,EAAA,CAAA,EAEFH,GAAA,MAAAA,EAAA,KAEAL,IAAA,QACEQ,EAAAjB,CAAA,EAEFc,GAAA,MAAAA,EAAAd,IAEF,MAAA,CAGFuB,EAAAtB,GAAAF,GAAAwB,EAAAtB,GAAAD,IACES,IAAA,QACEQ,EAAAM,EAAAtB,CAAA,EAEFa,GAAA,MAAAA,EAAAS,EAAAtB,GACF,EAAA,CAAAe,EAAAjB,EAAAC,EAAAc,EAAAG,EAAAhB,EAAAQ,CAAA,CAAA,EAGFiB,EAAAC,EAAA,MAAA,CAAA,UAAA,UAAA,IAAA9C,GAAA,SAAA,CAEI+C,EAAA,MAAC,CAAA,IAAA7C,EAAA,KAAAE,CAAA,EACuC,QAAA,IAAA,CAEpCkC,EAAA,QAAA,QACAE,GAAS,EACX,UAAAX,GAAA,YAAAA,EAAA,KAAAkB,EAAAC,EAAA,CAAA,CAAA,CAEsB,CAAA,EACxBD,EACA,MAAC,CAAA,IAAA7C,EAAA,SAAAE,CAAA,EAC2C,QAAA,IAAA,CAExCkC,EAAA,QAAA,QACAM,GAAU,EACZ,UAAAf,GAAA,YAAAA,EAAA,OAAAkB,EAAAE,GAAA,CAAA,CAAA,CAE0B,CAAA,CAC5B,CAAA,CAAA,EAIJC,EAAAT,EAAA,YAAmBU,GAAA,CAEf,GAAA,CAAAR,EAAA,OAAAQ,CAAA,CAAA,EACE,MAAA,IAAAjC,GAAA,GAAAC,EACE,EAEAA,EAGJ,GAAAL,IAAA,OAAA,CACE,IAAAsC,EAAA,OAAA,OAAAD,CAAA,EAAA,QAAArC,CAAA,CAAA,EACA,OAAAsC,EAAA,KAAA,IAAAA,EAAAjC,CAAA,EACAiC,EAAA,KAAA,IAAAA,EAAAlC,CAAA,EACAkC,CAAO,KAAA,CAEP,IAAAA,EAAA,OAAAD,CAAA,EACA,OAAAC,EAAA,KAAA,IAAAA,EAAAjC,CAAA,EACAiC,EAAA,KAAA,IAAAA,EAAAlC,CAAA,EACAkC,CAAO,CACT,EACF,CAAAlC,EAAAC,EAAAL,CAAA,CACoB,EAGtB,OAAAiC,EACEM,GAAC,CAAA,IAAA1C,EACC,SAAA2C,GAAAhB,EAAAR,CAAA,EAC6C,KAAAxB,GACvC,KAAAF,EACN,MAAA+B,EACO,SAAAoB,GAAA,CAEL,MAAAC,EAAAxB,EAAAA,EAAAuB,CAAA,EAAAA,EACAZ,EAAA,OAAAa,CAAA,CAAA,EACE5B,IAAA,QACEQ,EAAAL,EAAAA,EAAAyB,CAAA,EAAAA,CAAA,EAGF5B,IAAA,QACEQ,EAAAmB,CAAA,EAGJtB,GAAA,MAAAA,EAAAiB,EAAAM,CAAA,EAA+B,EACjC,aAAA,IAAA,CAEE,MAAAA,EAAAxB,EAAAA,EAAAM,EAAA,QAAA,KAAA,EAAAA,EAAA,QAAA,MAIAmB,EAAAP,EAAAM,CAAA,EAEA5B,IAAA,QACEQ,EAAAL,EAAAA,EAAA0B,CAAA,EAAAA,CAAA,EAEFxB,GAAA,MAAAA,EAAAwB,EAAkB,EACpB,OAAAF,GAAA,CAEE,MAAAC,EAAAxB,EAAAA,EAAAuB,EAAA,OAAA,KAAA,EAAAA,EAAA,OAAA,MACAE,EAAAP,EAAAM,CAAA,EACA5B,IAAA,QACEQ,EAAAL,EAAAA,EAAA0B,CAAA,EAAAA,CAAA,EAEFxB,GAAA,MAAAA,EAAAwB,GACApC,GAAA,MAAAA,EAAAkC,EAAU,EACZ,QAAAA,GAAA,CAEEjC,GAAA,MAAAA,EAAAiC,EAAW,EACb,SAAAtC,EACA,YAAAM,EACA,OAAAE,EACA,OAAAqB,EAAAY,EAAA,CAAA,GAAA,OAAA,SAAA,CAGKhC,EAAA,CAAAV,GAAA,CAAAC,GAAA,CAAAJ,GAAAW,IAAA,SAAAqB,CAKC,EAAA,EACJ,UAAArB,IAAA,SAAAuB,EAIE,OAAC,CAAA,IAAAxC,EAAAH,CAAA,EAC+B,QAAA,IAAA,CAE5BwC,GAAU,EACZ,UAAAf,GAAA,YAAAA,EAAA,QAAAkB,EAAAY,EAAA,CAAA,CAAA,CAE4B,CAAA,EAAA,OAE5B,SAAAnC,IAAA,SAAAuB,EAIF,OAAC,CAAA,IAAAxC,EAAAH,CAAA,EAC+B,QAAA,IAAA,CAE5BoC,GAAS,EACX,UAAAX,GAAA,YAAAA,EAAA,OAAAkB,EAAAa,EAAA,CAAA,CAAA,CAE0B,CAAA,EAAA,OAE1B,YAAAhD,EAEN,SAAAC,EACA,MAAAE,EACA,GAAAmB,CACI,CAAA,CACN,CAGN,EAEA1B,EAAA,YAAA;;;;;;;;;;;;"}