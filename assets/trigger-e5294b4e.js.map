{"version":3,"file":"trigger-e5294b4e.js","sources":["../../../../packages/trigger/src/transform.ts","../../../../packages/trigger/src/style.ts","../../../../packages/trigger/src/triangle.tsx","../../../../node_modules/.pnpm/@floating-ui+utils@0.1.2/node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","../../../../node_modules/.pnpm/@floating-ui+utils@0.1.2/node_modules/@floating-ui/utils/dom/dist/floating-ui.utils.dom.mjs","../../../../node_modules/.pnpm/@floating-ui+utils@0.1.2/node_modules/@floating-ui/utils/react/dist/floating-ui.utils.react.mjs","../../../../node_modules/.pnpm/@floating-ui+core@1.4.1/node_modules/@floating-ui/core/dist/floating-ui.core.mjs","../../../../node_modules/.pnpm/@floating-ui+dom@1.5.2/node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","../../../../node_modules/.pnpm/@floating-ui+react-dom@2.0.2_react-dom@18.2.0_react@18.2.0/node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs","../../../../node_modules/.pnpm/tabbable@6.2.0/node_modules/tabbable/dist/index.esm.js","../../../../node_modules/.pnpm/@floating-ui+react@0.25.4_react-dom@18.2.0_react@18.2.0/node_modules/@floating-ui/react/dist/floating-ui.react.mjs","../../../../packages/trigger/src/trigger.tsx"],"sourcesContent":["import { Variants } from \"framer-motion\"\n\nexport function getAnimation(\n  originX: string,\n  originY: string,\n  showArrow: boolean,\n  isHorizontal: boolean,\n): Variants {\n  let initialScaleX\n  let initialScaleY\n\n  if (showArrow) {\n    initialScaleX = 0\n    initialScaleY = 0\n  } else {\n    if (isHorizontal) {\n      initialScaleX = 0.9\n      initialScaleY = 1\n    } else {\n      initialScaleX = 1\n      initialScaleY = 0.9\n    }\n  }\n\n  return {\n    initial: {\n      scaleY: initialScaleY,\n      scaleX: initialScaleX,\n      opacity: 0,\n      originX,\n      originY,\n    },\n    animate: {\n      scaleX: 1,\n      scaleY: 1,\n      opacity: 1,\n      transition: {\n        opacity: { duration: 0.15, ease: \"easeInOut\" },\n        scaleX: { duration: 0.15, ease: \"easeInOut\" },\n        scaleY: { duration: 0.15, ease: \"easeInOut\" },\n      },\n    },\n    exit: {\n      scaleY: initialScaleY,\n      scaleX: initialScaleX,\n      opacity: 0,\n      transition: {\n        duration: 0.2,\n        opacity: { duration: 0.15, ease: \"easeInOut\" },\n        scaleX: { duration: 0.15, ease: \"easeInOut\" },\n        scaleY: { duration: 0.15, ease: \"easeInOut\" },\n      },\n    },\n  } as Variants\n}\n","import { css, SerializedStyles } from \"@emotion/react\"\nimport { TriggerColorScheme, TriggerPosition } from \"./interface\"\nimport {\n  getColor,\n  getColorShadow,\n  globalColor,\n  illaPrefix,\n} from \"@illa-design/theme\"\nimport { getAnimation } from \"./transform\"\nimport { Variants } from \"framer-motion\"\n\nexport function applyMotionDiv(autoAlignPopupWidth?: boolean) {\n  return css`\n    display: inline-flex;\n    pointer-events: auto;\n    width: ${autoAlignPopupWidth ? \"100%\" : \"auto\"};\n  `\n}\n\nexport function applyTipsText(\n  colorScheme: TriggerColorScheme,\n  maxWidth: string,\n  withoutPadding?: boolean,\n  withoutShadow?: boolean,\n  autoAlignPopupWidth?: boolean,\n): SerializedStyles {\n  const bgColor =\n    colorScheme == \"white\"\n      ? getColor(colorScheme, \"01\")\n      : getColor(colorScheme, \"02\")\n  const textColor =\n    colorScheme == \"white\"\n      ? globalColor(`--${illaPrefix}-grayBlue-02`)\n      : globalColor(`--${illaPrefix}-white-01`)\n\n  let paddingHor = \"12px\"\n\n  let padding = css`\n    padding: 8px ${paddingHor};\n  `\n  if (withoutPadding) {\n    padding = css``\n  }\n\n  let shadow = css`\n    box-shadow: ${getColorShadow(\"white\" ? \"blackAlpha\" : colorScheme, \"01\")};\n  `\n  if (withoutShadow) {\n    shadow = css``\n  }\n\n  let align = css``\n  if (autoAlignPopupWidth) {\n    align = css`\n      max-width: unset;\n    `\n  }\n\n  return css`\n    background-color: ${bgColor};\n    color: ${textColor};\n    box-sizing: border-box;\n    text-align: left;\n    max-width: ${maxWidth};\n    border-radius: 8px;\n    font-size: 14px;\n    ${padding};\n    ${shadow};\n    ${align}\n  `\n}\n\nexport function applyTriangleStyle(\n  colorScheme: TriggerColorScheme,\n  position: TriggerPosition,\n): SerializedStyles {\n  const bgColor = getColor(colorScheme, \"02\")\n  const mainStyle = css`\n    color: ${bgColor};\n  `\n  let positionStyle: SerializedStyles\n  switch (position) {\n    case \"top\":\n    case \"bottom\":\n    case \"left\":\n    case \"right\":\n      positionStyle = css`\n        align-self: center;\n      `\n      break\n    case \"top-start\":\n    case \"bottom-start\":\n      positionStyle = css`\n        align-self: start;\n        margin-left: 12px;\n      `\n      break\n    case \"top-end\":\n    case \"bottom-end\":\n      positionStyle = css`\n        align-self: end;\n        margin-right: 12px;\n      `\n      break\n    case \"left-start\":\n    case \"right-start\":\n      positionStyle = css`\n        align-self: start;\n        margin-top: 12px;\n      `\n      break\n    case \"left-end\":\n    case \"right-end\":\n      positionStyle = css`\n        align-self: end;\n        margin-bottom: 12px;\n      `\n      break\n  }\n  return css`\n    ${mainStyle};\n    ${positionStyle};\n  `\n}\n\nexport function applyAnimation(\n  position: TriggerPosition,\n  showArrow: boolean,\n): Variants {\n  const isHorizontal =\n    position == \"left\" ||\n    position == \"left-start\" ||\n    position == \"left-end\" ||\n    position == \"right\" ||\n    position == \"right-start\" ||\n    position == \"right-end\"\n  switch (position) {\n    case \"top\":\n      return getAnimation(`calc(50%)`, `calc(100%)`, showArrow, isHorizontal)\n    case \"top-start\":\n      return getAnimation(`calc(12px)`, `calc(100%)`, showArrow, isHorizontal)\n    case \"top-end\":\n      return getAnimation(\n        `calc(100% - 12px)`,\n        `calc(100%)`,\n        showArrow,\n        isHorizontal,\n      )\n    case \"bottom\":\n      return getAnimation(`calc(50%)`, `0px`, showArrow, isHorizontal)\n    case \"bottom-start\":\n      return getAnimation(`calc(12px)`, `0px`, showArrow, isHorizontal)\n    case \"bottom-end\":\n      return getAnimation(`calc(100% - 12px)`, `0px`, showArrow, isHorizontal)\n    case \"left\":\n      return getAnimation(`calc(100%)`, `calc(50%)`, showArrow, isHorizontal)\n    case \"left-start\":\n      return getAnimation(`calc(100%)`, `calc(12px)`, showArrow, isHorizontal)\n    case \"left-end\":\n      return getAnimation(\n        `calc(100%)`,\n        `calc(100% - 12px)`,\n        showArrow,\n        isHorizontal,\n      )\n    case \"right\":\n      return getAnimation(`0px`, `calc(50%)`, showArrow, isHorizontal)\n    case \"right-start\":\n      return getAnimation(`0px`, `calc(12px)`, showArrow, isHorizontal)\n    case \"right-end\":\n      return getAnimation(`0px`, `calc(100% - 12px)`, showArrow, isHorizontal)\n  }\n}\n\nexport const applyDefaultContentSize = css`\n  font-size: 14px;\n`\n\nexport function applyVerticalContainer(\n  autoAlignPopupWidth?: boolean,\n): SerializedStyles {\n  return css`\n    display: inline-flex;\n    flex-direction: column;\n    width: ${autoAlignPopupWidth ? \"100%\" : \"auto\"};\n  `\n}\n\nexport function applyHorizontalContainer(\n  autoAlignPopupWidth?: boolean,\n): SerializedStyles {\n  return css`\n    display: inline-flex;\n    flex-direction: row;\n    width: ${autoAlignPopupWidth ? \"100%\" : \"auto\"};\n  `\n}\n","import { createIcon } from \"@illa-design/icon\"\n\nexport const TriangleTop = createIcon({\n  title: \"TriangleIconTop\",\n  viewBox: \"0 0 8 4\",\n  d: \"M8 0H0L3.29289 3.29289C3.68342 3.68342 4.31658 3.68342 4.70711 3.29289L8 0Z\",\n})\n\nexport const TriangleBottom = createIcon({\n  title: \"TriangleIconBottom\",\n  viewBox: \"0 0 8 4\",\n  d: \"M8 4H0L3.29289 0.707107C3.68342 0.316583 4.31658 0.316583 4.70711 0.707107L8 4Z\",\n})\n\nexport const TriangleLeft = createIcon({\n  title: \"TriangleIconLeft\",\n  viewBox: \"0 0 4 8\",\n  d: \"M0 8V0L3.29289 3.29289C3.68342 3.68342 3.68342 4.31658 3.29289 4.70711L0 8Z\",\n})\n\nexport const TriangleRight = createIcon({\n  title: \"TriangleIconRight\",\n  viewBox: \"0 0 4 8\",\n  d: \"M4.00098 8V0L0.707366 3.29281C0.316726 3.68335 0.316726 4.31665 0.707366 4.70719L4.00098 8Z\",\n})\n","const sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null ? void 0 : (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isWebKit };\n","import { isShadowRoot, isHTMLElement } from '@floating-ui/utils/dom';\n\nfunction activeElement(doc) {\n  let activeElement = doc.activeElement;\n  while (((_activeElement = activeElement) == null ? void 0 : (_activeElement$shadow = _activeElement.shadowRoot) == null ? void 0 : _activeElement$shadow.activeElement) != null) {\n    var _activeElement, _activeElement$shadow;\n    activeElement = activeElement.shadowRoot.activeElement;\n  }\n  return activeElement;\n}\nfunction contains(parent, child) {\n  if (!parent || !child) {\n    return false;\n  }\n  const rootNode = child.getRootNode && child.getRootNode();\n\n  // First, attempt with faster native method\n  if (parent.contains(child)) {\n    return true;\n  }\n\n  // then fallback to custom implementation with Shadow DOM support\n  if (rootNode && isShadowRoot(rootNode)) {\n    let next = child;\n    while (next) {\n      if (parent === next) {\n        return true;\n      }\n      // @ts-ignore\n      next = next.parentNode || next.host;\n    }\n  }\n\n  // Give up, the result is false\n  return false;\n}\n// Avoid Chrome DevTools blue warning.\nfunction getPlatform() {\n  const uaData = navigator.userAgentData;\n  if (uaData != null && uaData.platform) {\n    return uaData.platform;\n  }\n  return navigator.platform;\n}\nfunction getUserAgent() {\n  const uaData = navigator.userAgentData;\n  if (uaData && Array.isArray(uaData.brands)) {\n    return uaData.brands.map(_ref => {\n      let {\n        brand,\n        version\n      } = _ref;\n      return brand + \"/\" + version;\n    }).join(' ');\n  }\n  return navigator.userAgent;\n}\n\n// License: https://github.com/adobe/react-spectrum/blob/b35d5c02fe900badccd0cf1a8f23bb593419f238/packages/@react-aria/utils/src/isVirtualEvent.ts\nfunction isVirtualClick(event) {\n  if (event.mozInputSource === 0 && event.isTrusted) {\n    return true;\n  }\n  const androidRe = /Android/i;\n  if ((androidRe.test(getPlatform()) || androidRe.test(getUserAgent())) && event.pointerType) {\n    return event.type === 'click' && event.buttons === 1;\n  }\n  return event.detail === 0 && !event.pointerType;\n}\nfunction isVirtualPointerEvent(event) {\n  return event.width === 0 && event.height === 0 || event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType !== 'mouse' ||\n  // iOS VoiceOver returns 0.333• for width/height.\n  event.width < 1 && event.height < 1 && event.pressure === 0 && event.detail === 0;\n}\nfunction isSafari() {\n  // Chrome DevTools does not complain about navigator.vendor\n  return /apple/i.test(navigator.vendor);\n}\nfunction isMac() {\n  return getPlatform().toLowerCase().startsWith('mac') && !navigator.maxTouchPoints;\n}\nfunction isMouseLikePointerType(pointerType, strict) {\n  // On some Linux machines with Chromium, mouse inputs return a `pointerType`\n  // of \"pen\": https://github.com/floating-ui/floating-ui/issues/2015\n  const values = ['mouse', 'pen'];\n  if (!strict) {\n    values.push('', undefined);\n  }\n  return values.includes(pointerType);\n}\nfunction isReactEvent(event) {\n  return 'nativeEvent' in event;\n}\nfunction isRootElement(element) {\n  return element.matches('html,body');\n}\nfunction getDocument(node) {\n  return (node == null ? void 0 : node.ownerDocument) || document;\n}\nfunction isEventTargetWithin(event, node) {\n  if (node == null) {\n    return false;\n  }\n  if ('composedPath' in event) {\n    return event.composedPath().includes(node);\n  }\n\n  // TS thinks `event` is of type never as it assumes all browsers support composedPath, but browsers without shadow dom don't\n  const e = event;\n  return e.target != null && node.contains(e.target);\n}\nfunction getTarget(event) {\n  if ('composedPath' in event) {\n    return event.composedPath()[0];\n  }\n\n  // TS thinks `event` is of type never as it assumes all browsers support\n  // `composedPath()`, but browsers without shadow DOM don't.\n  return event.target;\n}\nconst TYPEABLE_SELECTOR = \"input:not([type='hidden']):not([disabled]),\" + \"[contenteditable]:not([contenteditable='false']),textarea:not([disabled])\";\nfunction isTypeableElement(element) {\n  return isHTMLElement(element) && element.matches(TYPEABLE_SELECTOR);\n}\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nexport { TYPEABLE_SELECTOR, activeElement, contains, getDocument, getPlatform, getTarget, getUserAgent, isEventTargetWithin, isMac, isMouseLikePointerType, isReactEvent, isRootElement, isSafari, isTypeableElement, isVirtualClick, isVirtualPointerEvent, stopEvent };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. This stops `shift()` from taking action, but can\n    // be worked around by calling it again after the `arrow()` if desired.\n    const shouldAddOffset = getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? min$1 - center : max - center : 0;\n    return {\n      [axis]: coords[axis] - alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset + alignmentOffset\n      }\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (_ref) {\n  let {\n    reference,\n    floating,\n    strategy\n  } = _ref;\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    clearTimeout(timeoutId);\n    io && io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          resizeObserver && resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo && cleanupIo();\n    resizeObserver && resizeObserver.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, platform };\n","import { arrow as arrow$1, computePosition } from '@floating-ui/dom';\nexport { autoPlacement, autoUpdate, computePosition, detectOverflow, flip, getOverflowAncestors, hide, inline, limitShift, offset, platform, shift, size } from '@floating-ui/dom';\nimport * as React from 'react';\nimport { useLayoutEffect, useEffect } from 'react';\nimport * as ReactDOM from 'react-dom';\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => {\n  function isRef(value) {\n    return {}.hasOwnProperty.call(value, 'current');\n  }\n  return {\n    name: 'arrow',\n    options,\n    fn(state) {\n      const {\n        element,\n        padding\n      } = typeof options === 'function' ? options(state) : options;\n      if (element && isRef(element)) {\n        if (element.current != null) {\n          return arrow$1({\n            element: element.current,\n            padding\n          }).fn(state);\n        }\n        return {};\n      } else if (element) {\n        return arrow$1({\n          element,\n          padding\n        }).fn(state);\n      }\n      return {};\n    }\n  };\n};\n\nvar index = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\n// Fork of `fast-deep-equal` that only does the comparisons we need and compares\n// functions\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (typeof a === 'function' && a.toString() === b.toString()) {\n    return true;\n  }\n  let length, i, keys;\n  if (a && b && typeof a == 'object') {\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;) {\n        if (!deepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (i = length; i-- !== 0;) {\n      if (!{}.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        continue;\n      }\n      if (!deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\nfunction getDPR(element) {\n  if (typeof window === 'undefined') {\n    return 1;\n  }\n  const win = element.ownerDocument.defaultView || window;\n  return win.devicePixelRatio || 1;\n}\n\nfunction roundByDPR(element, value) {\n  const dpr = getDPR(element);\n  return Math.round(value * dpr) / dpr;\n}\n\nfunction useLatestRef(value) {\n  const ref = React.useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\n/**\n * Provides data to position a floating element.\n * @see https://floating-ui.com/docs/react\n */\nfunction useFloating(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform,\n    elements: {\n      reference: externalReference,\n      floating: externalFloating\n    } = {},\n    transform = true,\n    whileElementsMounted,\n    open\n  } = options;\n  const [data, setData] = React.useState({\n    x: 0,\n    y: 0,\n    strategy,\n    placement,\n    middlewareData: {},\n    isPositioned: false\n  });\n  const [latestMiddleware, setLatestMiddleware] = React.useState(middleware);\n  if (!deepEqual(latestMiddleware, middleware)) {\n    setLatestMiddleware(middleware);\n  }\n  const [_reference, _setReference] = React.useState(null);\n  const [_floating, _setFloating] = React.useState(null);\n  const setReference = React.useCallback(node => {\n    if (node != referenceRef.current) {\n      referenceRef.current = node;\n      _setReference(node);\n    }\n  }, [_setReference]);\n  const setFloating = React.useCallback(node => {\n    if (node !== floatingRef.current) {\n      floatingRef.current = node;\n      _setFloating(node);\n    }\n  }, [_setFloating]);\n  const referenceEl = externalReference || _reference;\n  const floatingEl = externalFloating || _floating;\n  const referenceRef = React.useRef(null);\n  const floatingRef = React.useRef(null);\n  const dataRef = React.useRef(data);\n  const whileElementsMountedRef = useLatestRef(whileElementsMounted);\n  const platformRef = useLatestRef(platform);\n  const update = React.useCallback(() => {\n    if (!referenceRef.current || !floatingRef.current) {\n      return;\n    }\n    const config = {\n      placement,\n      strategy,\n      middleware: latestMiddleware\n    };\n    if (platformRef.current) {\n      config.platform = platformRef.current;\n    }\n    computePosition(referenceRef.current, floatingRef.current, config).then(data => {\n      const fullData = {\n        ...data,\n        isPositioned: true\n      };\n      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {\n        dataRef.current = fullData;\n        ReactDOM.flushSync(() => {\n          setData(fullData);\n        });\n      }\n    });\n  }, [latestMiddleware, placement, strategy, platformRef]);\n  index(() => {\n    if (open === false && dataRef.current.isPositioned) {\n      dataRef.current.isPositioned = false;\n      setData(data => ({\n        ...data,\n        isPositioned: false\n      }));\n    }\n  }, [open]);\n  const isMountedRef = React.useRef(false);\n  index(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n  index(() => {\n    if (referenceEl) referenceRef.current = referenceEl;\n    if (floatingEl) floatingRef.current = floatingEl;\n    if (referenceEl && floatingEl) {\n      if (whileElementsMountedRef.current) {\n        return whileElementsMountedRef.current(referenceEl, floatingEl, update);\n      } else {\n        update();\n      }\n    }\n  }, [referenceEl, floatingEl, update, whileElementsMountedRef]);\n  const refs = React.useMemo(() => ({\n    reference: referenceRef,\n    floating: floatingRef,\n    setReference,\n    setFloating\n  }), [setReference, setFloating]);\n  const elements = React.useMemo(() => ({\n    reference: referenceEl,\n    floating: floatingEl\n  }), [referenceEl, floatingEl]);\n  const floatingStyles = React.useMemo(() => {\n    const initialStyles = {\n      position: strategy,\n      left: 0,\n      top: 0\n    };\n    if (!elements.floating) {\n      return initialStyles;\n    }\n    const x = roundByDPR(elements.floating, data.x);\n    const y = roundByDPR(elements.floating, data.y);\n    if (transform) {\n      return {\n        ...initialStyles,\n        transform: \"translate(\" + x + \"px, \" + y + \"px)\",\n        ...(getDPR(elements.floating) >= 1.5 && {\n          willChange: 'transform'\n        })\n      };\n    }\n    return {\n      position: strategy,\n      left: x,\n      top: y\n    };\n  }, [strategy, transform, elements.floating, data.x, data.y]);\n  return React.useMemo(() => ({\n    ...data,\n    update,\n    refs,\n    elements,\n    floatingStyles\n  }), [data, update, refs, elements, floatingStyles]);\n}\n\nexport { arrow, useFloating };\n","/*!\n* tabbable 6.2.0\n* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE\n*/\n// NOTE: separate `:not()` selectors has broader browser support than the newer\n//  `:not([inert], [inert] *)` (Feb 2023)\n// CAREFUL: JSDom does not support `:not([inert] *)` as a selector; using it causes\n//  the entire query to fail, resulting in no nodes found, which will break a lot\n//  of things... so we have to rely on JS to identify nodes inside an inert container\nvar candidateSelectors = ['input:not([inert])', 'select:not([inert])', 'textarea:not([inert])', 'a[href]:not([inert])', 'button:not([inert])', '[tabindex]:not(slot):not([inert])', 'audio[controls]:not([inert])', 'video[controls]:not([inert])', '[contenteditable]:not([contenteditable=\"false\"]):not([inert])', 'details>summary:first-of-type:not([inert])', 'details:not([inert])'];\nvar candidateSelector = /* #__PURE__ */candidateSelectors.join(',');\nvar NoElement = typeof Element === 'undefined';\nvar matches = NoElement ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\nvar getRootNode = !NoElement && Element.prototype.getRootNode ? function (element) {\n  var _element$getRootNode;\n  return element === null || element === void 0 ? void 0 : (_element$getRootNode = element.getRootNode) === null || _element$getRootNode === void 0 ? void 0 : _element$getRootNode.call(element);\n} : function (element) {\n  return element === null || element === void 0 ? void 0 : element.ownerDocument;\n};\n\n/**\n * Determines if a node is inert or in an inert ancestor.\n * @param {Element} [node]\n * @param {boolean} [lookUp] If true and `node` is not inert, looks up at ancestors to\n *  see if any of them are inert. If false, only `node` itself is considered.\n * @returns {boolean} True if inert itself or by way of being in an inert ancestor.\n *  False if `node` is falsy.\n */\nvar isInert = function isInert(node, lookUp) {\n  var _node$getAttribute;\n  if (lookUp === void 0) {\n    lookUp = true;\n  }\n  // CAREFUL: JSDom does not support inert at all, so we can't use the `HTMLElement.inert`\n  //  JS API property; we have to check the attribute, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's an active element\n  var inertAtt = node === null || node === void 0 ? void 0 : (_node$getAttribute = node.getAttribute) === null || _node$getAttribute === void 0 ? void 0 : _node$getAttribute.call(node, 'inert');\n  var inert = inertAtt === '' || inertAtt === 'true';\n\n  // NOTE: this could also be handled with `node.matches('[inert], :is([inert] *)')`\n  //  if it weren't for `matches()` not being a function on shadow roots; the following\n  //  code works for any kind of node\n  // CAREFUL: JSDom does not appear to support certain selectors like `:not([inert] *)`\n  //  so it likely would not support `:is([inert] *)` either...\n  var result = inert || lookUp && node && isInert(node.parentNode); // recursive\n\n  return result;\n};\n\n/**\n * Determines if a node's content is editable.\n * @param {Element} [node]\n * @returns True if it's content-editable; false if it's not or `node` is falsy.\n */\nvar isContentEditable = function isContentEditable(node) {\n  var _node$getAttribute2;\n  // CAREFUL: JSDom does not support the `HTMLElement.isContentEditable` API so we have\n  //  to use the attribute directly to check for this, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's a non-editable element\n  var attValue = node === null || node === void 0 ? void 0 : (_node$getAttribute2 = node.getAttribute) === null || _node$getAttribute2 === void 0 ? void 0 : _node$getAttribute2.call(node, 'contenteditable');\n  return attValue === '' || attValue === 'true';\n};\n\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\nvar getCandidates = function getCandidates(el, includeContainer, filter) {\n  // even if `includeContainer=false`, we still have to check it for inertness because\n  //  if it's inert, all its children are inert\n  if (isInert(el)) {\n    return [];\n  }\n  var candidates = Array.prototype.slice.apply(el.querySelectorAll(candidateSelector));\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidateScope\n * @property {Element} scopeParent contains inner candidates\n * @property {Element[]} candidates list of candidates found in the scope parent\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidateScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidateScope>}\n */\nvar getCandidatesIteratively = function getCandidatesIteratively(elements, includeContainer, options) {\n  var candidates = [];\n  var elementsToCheck = Array.from(elements);\n  while (elementsToCheck.length) {\n    var element = elementsToCheck.shift();\n    if (isInert(element, false)) {\n      // no need to look up since we're drilling down\n      // anything inside this container will also be inert\n      continue;\n    }\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      var assigned = element.assignedElements();\n      var content = assigned.length ? assigned : element.children;\n      var nestedCandidates = getCandidatesIteratively(content, true, options);\n      if (options.flatten) {\n        candidates.push.apply(candidates, nestedCandidates);\n      } else {\n        candidates.push({\n          scopeParent: element,\n          candidates: nestedCandidates\n        });\n      }\n    } else {\n      // check candidate element\n      var validCandidate = matches.call(element, candidateSelector);\n      if (validCandidate && options.filter(element) && (includeContainer || !elements.includes(element))) {\n        candidates.push(element);\n      }\n\n      // iterate over shadow content if possible\n      var shadowRoot = element.shadowRoot ||\n      // check for an undisclosed shadow\n      typeof options.getShadowRoot === 'function' && options.getShadowRoot(element);\n\n      // no inert look up because we're already drilling down and checking for inertness\n      //  on the way down, so all containers to this root node should have already been\n      //  vetted as non-inert\n      var validShadowRoot = !isInert(shadowRoot, false) && (!options.shadowRootFilter || options.shadowRootFilter(element));\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        var _nestedCandidates = getCandidatesIteratively(shadowRoot === true ? element.children : shadowRoot.children, true, options);\n        if (options.flatten) {\n          candidates.push.apply(candidates, _nestedCandidates);\n        } else {\n          candidates.push({\n            scopeParent: element,\n            candidates: _nestedCandidates\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift.apply(elementsToCheck, element.children);\n      }\n    }\n  }\n  return candidates;\n};\n\n/**\n * @private\n * Determines if the node has an explicitly specified `tabindex` attribute.\n * @param {HTMLElement} node\n * @returns {boolean} True if so; false if not.\n */\nvar hasTabIndex = function hasTabIndex(node) {\n  return !isNaN(parseInt(node.getAttribute('tabindex'), 10));\n};\n\n/**\n * Determine the tab index of a given node.\n * @param {HTMLElement} node\n * @returns {number} Tab order (negative, 0, or positive number).\n * @throws {Error} If `node` is falsy.\n */\nvar getTabIndex = function getTabIndex(node) {\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    if ((/^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) || isContentEditable(node)) && !hasTabIndex(node)) {\n      return 0;\n    }\n  }\n  return node.tabIndex;\n};\n\n/**\n * Determine the tab index of a given node __for sort order purposes__.\n * @param {HTMLElement} node\n * @param {boolean} [isScope] True for a custom element with shadow root or slot that, by default,\n *  has tabIndex -1, but needs to be sorted by document order in order for its content to be\n *  inserted into the correct sort position.\n * @returns {number} Tab order (negative, 0, or positive number).\n */\nvar getSortOrderTabIndex = function getSortOrderTabIndex(node, isScope) {\n  var tabIndex = getTabIndex(node);\n  if (tabIndex < 0 && isScope && !hasTabIndex(node)) {\n    return 0;\n  }\n  return tabIndex;\n};\nvar sortOrderedTabbables = function sortOrderedTabbables(a, b) {\n  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n};\nvar isInput = function isInput(node) {\n  return node.tagName === 'INPUT';\n};\nvar isHiddenInput = function isHiddenInput(node) {\n  return isInput(node) && node.type === 'hidden';\n};\nvar isDetailsWithSummary = function isDetailsWithSummary(node) {\n  var r = node.tagName === 'DETAILS' && Array.prototype.slice.apply(node.children).some(function (child) {\n    return child.tagName === 'SUMMARY';\n  });\n  return r;\n};\nvar getCheckedRadio = function getCheckedRadio(nodes, form) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\nvar isTabbableRadio = function isTabbableRadio(node) {\n  if (!node.name) {\n    return true;\n  }\n  var radioScope = node.form || getRootNode(node);\n  var queryRadios = function queryRadios(name) {\n    return radioScope.querySelectorAll('input[type=\"radio\"][name=\"' + name + '\"]');\n  };\n  var radioSet;\n  if (typeof window !== 'undefined' && typeof window.CSS !== 'undefined' && typeof window.CSS.escape === 'function') {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s', err.message);\n      return false;\n    }\n  }\n  var checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\nvar isRadio = function isRadio(node) {\n  return isInput(node) && node.type === 'radio';\n};\nvar isNonTabbableRadio = function isNonTabbableRadio(node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\n// determines if a node is ultimately attached to the window's document\nvar isNodeAttached = function isNodeAttached(node) {\n  var _nodeRoot;\n  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // To further complicate things, we have to look all the way up until we find a shadow HOST\n  //  that is attached (or find none) because the node might be in nested shadows...\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n  // NOTE: If `nodeRootHost` or `node` happens to be the `document` itself (which is possible\n  //  if a tabbable/focusable node was quickly added to the DOM, focused, and then removed\n  //  from the DOM as in https://github.com/focus-trap/focus-trap-react/issues/905), then\n  //  `ownerDocument` will be `null`, hence the optional chaining on it.\n  var nodeRoot = node && getRootNode(node);\n  var nodeRootHost = (_nodeRoot = nodeRoot) === null || _nodeRoot === void 0 ? void 0 : _nodeRoot.host;\n\n  // in some cases, a detached node will return itself as the root instead of a document or\n  //  shadow root object, in which case, we shouldn't try to look further up the host chain\n  var attached = false;\n  if (nodeRoot && nodeRoot !== node) {\n    var _nodeRootHost, _nodeRootHost$ownerDo, _node$ownerDocument;\n    attached = !!((_nodeRootHost = nodeRootHost) !== null && _nodeRootHost !== void 0 && (_nodeRootHost$ownerDo = _nodeRootHost.ownerDocument) !== null && _nodeRootHost$ownerDo !== void 0 && _nodeRootHost$ownerDo.contains(nodeRootHost) || node !== null && node !== void 0 && (_node$ownerDocument = node.ownerDocument) !== null && _node$ownerDocument !== void 0 && _node$ownerDocument.contains(node));\n    while (!attached && nodeRootHost) {\n      var _nodeRoot2, _nodeRootHost2, _nodeRootHost2$ownerD;\n      // since it's not attached and we have a root host, the node MUST be in a nested shadow DOM,\n      //  which means we need to get the host's host and check if that parent host is contained\n      //  in (i.e. attached to) the document\n      nodeRoot = getRootNode(nodeRootHost);\n      nodeRootHost = (_nodeRoot2 = nodeRoot) === null || _nodeRoot2 === void 0 ? void 0 : _nodeRoot2.host;\n      attached = !!((_nodeRootHost2 = nodeRootHost) !== null && _nodeRootHost2 !== void 0 && (_nodeRootHost2$ownerD = _nodeRootHost2.ownerDocument) !== null && _nodeRootHost2$ownerD !== void 0 && _nodeRootHost2$ownerD.contains(nodeRootHost));\n    }\n  }\n  return attached;\n};\nvar isZeroArea = function isZeroArea(node) {\n  var _node$getBoundingClie = node.getBoundingClientRect(),\n    width = _node$getBoundingClie.width,\n    height = _node$getBoundingClie.height;\n  return width === 0 && height === 0;\n};\nvar isHidden = function isHidden(node, _ref) {\n  var displayCheck = _ref.displayCheck,\n    getShadowRoot = _ref.getShadowRoot;\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n  var isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  var nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n  if (!displayCheck || displayCheck === 'full' || displayCheck === 'legacy-full') {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      var originalNode = node;\n      while (node) {\n        var parentElement = node.parentElement;\n        var rootNode = getRootNode(node);\n        if (parentElement && !parentElement.shadowRoot && getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n      node = originalNode;\n    }\n    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n    if (isNodeAttached(node)) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    }\n\n    // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n    //\n    // v6.0.0: As of this major release, the default 'full' option __no longer treats detached\n    //  nodes as visible with the 'none' fallback.__\n    if (displayCheck !== 'legacy-full') {\n      return true; // hidden\n    }\n    // else, fallback to 'none' mode and consider the node visible\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  }\n\n  // visible, as far as we can tell, or per current `displayCheck=none` mode, we assume\n  //  it's visible\n  return false;\n};\n\n// form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\nvar isDisabledFromFieldset = function isDisabledFromFieldset(node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    var parentNode = node.parentElement;\n    // check if `node` is contained in a disabled <fieldset>\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (var i = 0; i < parentNode.children.length; i++) {\n          var child = parentNode.children.item(i);\n          // when the first <legend> (in document order) is found\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *') ? true : !child.contains(node);\n          }\n        }\n        // the disabled <fieldset> containing `node` has no <legend>\n        return true;\n      }\n      parentNode = parentNode.parentElement;\n    }\n  }\n\n  // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n  return false;\n};\nvar isNodeMatchingSelectorFocusable = function isNodeMatchingSelectorFocusable(options, node) {\n  if (node.disabled ||\n  // we must do an inert look up to filter out any elements inside an inert ancestor\n  //  because we're limited in the type of selectors we can use in JSDom (see related\n  //  note related to `candidateSelectors`)\n  isInert(node) || isHiddenInput(node) || isHidden(node, options) ||\n  // For a details element with a summary, the summary element gets the focus\n  isDetailsWithSummary(node) || isDisabledFromFieldset(node)) {\n    return false;\n  }\n  return true;\n};\nvar isNodeMatchingSelectorTabbable = function isNodeMatchingSelectorTabbable(options, node) {\n  if (isNonTabbableRadio(node) || getTabIndex(node) < 0 || !isNodeMatchingSelectorFocusable(options, node)) {\n    return false;\n  }\n  return true;\n};\nvar isValidShadowRootTabbable = function isValidShadowRootTabbable(shadowHostNode) {\n  var tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  }\n  // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n  return false;\n};\n\n/**\n * @param {Array.<Element|CandidateScope>} candidates\n * @returns Element[]\n */\nvar sortByOrder = function sortByOrder(candidates) {\n  var regularTabbables = [];\n  var orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    var isScope = !!item.scopeParent;\n    var element = isScope ? item.scopeParent : item;\n    var candidateTabindex = getSortOrderTabIndex(element, isScope);\n    var elements = isScope ? sortByOrder(item.candidates) : element;\n    if (candidateTabindex === 0) {\n      isScope ? regularTabbables.push.apply(regularTabbables, elements) : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements\n      });\n    }\n  });\n  return orderedTabbables.sort(sortOrderedTabbables).reduce(function (acc, sortable) {\n    sortable.isScope ? acc.push.apply(acc, sortable.content) : acc.push(sortable.content);\n    return acc;\n  }, []).concat(regularTabbables);\n};\nvar tabbable = function tabbable(container, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([container], options.includeContainer, {\n      filter: isNodeMatchingSelectorTabbable.bind(null, options),\n      flatten: false,\n      getShadowRoot: options.getShadowRoot,\n      shadowRootFilter: isValidShadowRootTabbable\n    });\n  } else {\n    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorTabbable.bind(null, options));\n  }\n  return sortByOrder(candidates);\n};\nvar focusable = function focusable(container, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([container], options.includeContainer, {\n      filter: isNodeMatchingSelectorFocusable.bind(null, options),\n      flatten: true,\n      getShadowRoot: options.getShadowRoot\n    });\n  } else {\n    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorFocusable.bind(null, options));\n  }\n  return candidates;\n};\nvar isTabbable = function isTabbable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\nvar focusableCandidateSelector = /* #__PURE__ */candidateSelectors.concat('iframe').join(',');\nvar isFocusable = function isFocusable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nexport { focusable, getTabIndex, isFocusable, isTabbable, tabbable };\n//# sourceMappingURL=index.esm.js.map\n","import * as React from 'react';\nimport { useLayoutEffect, useEffect, useRef } from 'react';\nimport { floor } from '@floating-ui/utils';\nimport { stopEvent, getDocument, isMouseLikePointerType, contains, activeElement, isSafari, isTypeableElement, getTarget, getPlatform, isReactEvent, isRootElement, isEventTargetWithin, isVirtualClick, isVirtualPointerEvent, isMac, getUserAgent } from '@floating-ui/utils/react';\nimport { platform, getOverflowAncestors, useFloating as useFloating$1, offset, detectOverflow } from '@floating-ui/react-dom';\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, getOverflowAncestors, hide, inline, limitShift, offset, platform, shift, size } from '@floating-ui/react-dom';\nimport { isElement, isHTMLElement, getWindow, isLastTraversableNode, getParentNode, getComputedStyle } from '@floating-ui/utils/dom';\nimport { tabbable } from 'tabbable';\nimport { createPortal, flushSync } from 'react-dom';\n\n/**\n * Merges an array of refs into a single memoized callback ref or `null`.\n * @see https://floating-ui.com/docs/useMergeRefs\n */\nfunction useMergeRefs(refs) {\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return value => {\n      refs.forEach(ref => {\n        if (typeof ref === 'function') {\n          ref(value);\n        } else if (ref != null) {\n          ref.current = value;\n        }\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}\n\nconst ARROW_UP = 'ArrowUp';\nconst ARROW_DOWN = 'ArrowDown';\nconst ARROW_LEFT = 'ArrowLeft';\nconst ARROW_RIGHT = 'ArrowRight';\nfunction isDifferentRow(index, cols, prevRow) {\n  return Math.floor(index / cols) !== prevRow;\n}\nfunction isIndexOutOfBounds(listRef, index) {\n  return index < 0 || index >= listRef.current.length;\n}\nfunction getMinIndex(listRef, disabledIndices) {\n  return findNonDisabledIndex(listRef, {\n    disabledIndices\n  });\n}\nfunction getMaxIndex(listRef, disabledIndices) {\n  return findNonDisabledIndex(listRef, {\n    decrement: true,\n    startingIndex: listRef.current.length,\n    disabledIndices\n  });\n}\nfunction findNonDisabledIndex(listRef, _temp) {\n  let {\n    startingIndex = -1,\n    decrement = false,\n    disabledIndices,\n    amount = 1\n  } = _temp === void 0 ? {} : _temp;\n  const list = listRef.current;\n  let index = startingIndex;\n  do {\n    var _list$index, _list$index2;\n    index = index + (decrement ? -amount : amount);\n  } while (index >= 0 && index <= list.length - 1 && (disabledIndices ? disabledIndices.includes(index) : list[index] == null || ((_list$index = list[index]) == null ? void 0 : _list$index.hasAttribute('disabled')) || ((_list$index2 = list[index]) == null ? void 0 : _list$index2.getAttribute('aria-disabled')) === 'true'));\n  return index;\n}\nfunction getGridNavigatedIndex(elementsRef, _ref) {\n  let {\n    event,\n    orientation,\n    loop,\n    cols,\n    disabledIndices,\n    minIndex,\n    maxIndex,\n    prevIndex,\n    stopEvent: stop = false\n  } = _ref;\n  let nextIndex = prevIndex;\n  if (event.key === ARROW_UP) {\n    stop && stopEvent(event);\n    if (prevIndex === -1) {\n      nextIndex = maxIndex;\n    } else {\n      nextIndex = findNonDisabledIndex(elementsRef, {\n        startingIndex: nextIndex,\n        amount: cols,\n        decrement: true,\n        disabledIndices\n      });\n      if (loop && (prevIndex - cols < minIndex || nextIndex < 0)) {\n        const col = prevIndex % cols;\n        const maxCol = maxIndex % cols;\n        const offset = maxIndex - (maxCol - col);\n        if (maxCol === col) {\n          nextIndex = maxIndex;\n        } else {\n          nextIndex = maxCol > col ? offset : offset - cols;\n        }\n      }\n    }\n    if (isIndexOutOfBounds(elementsRef, nextIndex)) {\n      nextIndex = prevIndex;\n    }\n  }\n  if (event.key === ARROW_DOWN) {\n    stop && stopEvent(event);\n    if (prevIndex === -1) {\n      nextIndex = minIndex;\n    } else {\n      nextIndex = findNonDisabledIndex(elementsRef, {\n        startingIndex: prevIndex,\n        amount: cols,\n        disabledIndices\n      });\n      if (loop && prevIndex + cols > maxIndex) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex % cols - cols,\n          amount: cols,\n          disabledIndices\n        });\n      }\n    }\n    if (isIndexOutOfBounds(elementsRef, nextIndex)) {\n      nextIndex = prevIndex;\n    }\n  }\n\n  // Remains on the same row/column.\n  if (orientation === 'both') {\n    const prevRow = floor(prevIndex / cols);\n    if (event.key === ARROW_RIGHT) {\n      stop && stopEvent(event);\n      if (prevIndex % cols !== cols - 1) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex,\n          disabledIndices\n        });\n        if (loop && isDifferentRow(nextIndex, cols, prevRow)) {\n          nextIndex = findNonDisabledIndex(elementsRef, {\n            startingIndex: prevIndex - prevIndex % cols - 1,\n            disabledIndices\n          });\n        }\n      } else if (loop) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex - prevIndex % cols - 1,\n          disabledIndices\n        });\n      }\n      if (isDifferentRow(nextIndex, cols, prevRow)) {\n        nextIndex = prevIndex;\n      }\n    }\n    if (event.key === ARROW_LEFT) {\n      stop && stopEvent(event);\n      if (prevIndex % cols !== 0) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex,\n          disabledIndices,\n          decrement: true\n        });\n        if (loop && isDifferentRow(nextIndex, cols, prevRow)) {\n          nextIndex = findNonDisabledIndex(elementsRef, {\n            startingIndex: prevIndex + (cols - prevIndex % cols),\n            decrement: true,\n            disabledIndices\n          });\n        }\n      } else if (loop) {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex + (cols - prevIndex % cols),\n          decrement: true,\n          disabledIndices\n        });\n      }\n      if (isDifferentRow(nextIndex, cols, prevRow)) {\n        nextIndex = prevIndex;\n      }\n    }\n    const lastRow = floor(maxIndex / cols) === prevRow;\n    if (isIndexOutOfBounds(elementsRef, nextIndex)) {\n      if (loop && lastRow) {\n        nextIndex = event.key === ARROW_LEFT ? maxIndex : findNonDisabledIndex(elementsRef, {\n          startingIndex: prevIndex - prevIndex % cols - 1,\n          disabledIndices\n        });\n      } else {\n        nextIndex = prevIndex;\n      }\n    }\n  }\n  return nextIndex;\n}\n\nlet rafId = 0;\nfunction enqueueFocus(el, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    preventScroll = false,\n    cancelPrevious = true,\n    sync = false\n  } = options;\n  cancelPrevious && cancelAnimationFrame(rafId);\n  const exec = () => el == null ? void 0 : el.focus({\n    preventScroll\n  });\n  if (sync) {\n    exec();\n  } else {\n    rafId = requestAnimationFrame(exec);\n  }\n}\n\nvar index = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\nfunction sortByDocumentPosition(a, b) {\n  const position = a.compareDocumentPosition(b);\n  if (position & Node.DOCUMENT_POSITION_FOLLOWING || position & Node.DOCUMENT_POSITION_CONTAINED_BY) {\n    return -1;\n  }\n  if (position & Node.DOCUMENT_POSITION_PRECEDING || position & Node.DOCUMENT_POSITION_CONTAINS) {\n    return 1;\n  }\n  return 0;\n}\nfunction areMapsEqual(map1, map2) {\n  if (map1.size !== map2.size) {\n    return false;\n  }\n  for (const [key, value] of map1.entries()) {\n    if (value !== map2.get(key)) {\n      return false;\n    }\n  }\n  return true;\n}\nconst FloatingListContext = /*#__PURE__*/React.createContext({\n  register: () => {},\n  unregister: () => {},\n  map: /*#__PURE__*/new Map(),\n  elementsRef: {\n    current: []\n  }\n});\n/**\n * Provides context for a list of items within the floating element.\n * @see https://floating-ui.com/docs/FloatingList\n */\nfunction FloatingList(_ref) {\n  let {\n    children,\n    elementsRef,\n    labelsRef\n  } = _ref;\n  const [map, setMap] = React.useState(() => new Map());\n  const register = React.useCallback(node => {\n    setMap(prevMap => new Map(prevMap).set(node, null));\n  }, []);\n  const unregister = React.useCallback(node => {\n    setMap(prevMap => {\n      const map = new Map(prevMap);\n      map.delete(node);\n      return map;\n    });\n  }, []);\n  index(() => {\n    const newMap = new Map(map);\n    const nodes = Array.from(newMap.keys()).sort(sortByDocumentPosition);\n    nodes.forEach((node, index) => {\n      newMap.set(node, index);\n    });\n    if (!areMapsEqual(map, newMap)) {\n      setMap(newMap);\n    }\n  }, [map]);\n  return /*#__PURE__*/React.createElement(FloatingListContext.Provider, {\n    value: React.useMemo(() => ({\n      register,\n      unregister,\n      map,\n      elementsRef,\n      labelsRef\n    }), [register, unregister, map, elementsRef, labelsRef])\n  }, children);\n}\nfunction useListItem(_temp) {\n  let {\n    label\n  } = _temp === void 0 ? {} : _temp;\n  const [index$1, setIndex] = React.useState(null);\n  const componentRef = React.useRef(null);\n  const {\n    register,\n    unregister,\n    map,\n    elementsRef,\n    labelsRef\n  } = React.useContext(FloatingListContext);\n  const ref = React.useCallback(node => {\n    componentRef.current = node;\n    if (index$1 !== null) {\n      elementsRef.current[index$1] = node;\n      if (labelsRef) {\n        var _node$textContent;\n        const isLabelDefined = label !== undefined;\n        labelsRef.current[index$1] = isLabelDefined ? label : (_node$textContent = node == null ? void 0 : node.textContent) != null ? _node$textContent : null;\n      }\n    }\n  }, [index$1, elementsRef, labelsRef, label]);\n  index(() => {\n    const node = componentRef.current;\n    if (node) {\n      register(node);\n      return () => {\n        unregister(node);\n      };\n    }\n  }, [register, unregister]);\n  index(() => {\n    const index = componentRef.current ? map.get(componentRef.current) : null;\n    if (index != null) {\n      setIndex(index);\n    }\n  }, [map]);\n  return React.useMemo(() => ({\n    ref,\n    index: index$1 == null ? -1 : index$1\n  }), [index$1, ref]);\n}\n\nfunction renderJsx(render, computedProps) {\n  if (typeof render === 'function') {\n    return render(computedProps);\n  } else if (render) {\n    return /*#__PURE__*/React.cloneElement(render, computedProps);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", computedProps);\n}\nconst CompositeContext = /*#__PURE__*/React.createContext({\n  activeIndex: 0,\n  setActiveIndex: () => {}\n});\nconst horizontalKeys = [ARROW_LEFT, ARROW_RIGHT];\nconst verticalKeys = [ARROW_UP, ARROW_DOWN];\nconst allKeys = [...horizontalKeys, ...verticalKeys];\nconst Composite = /*#__PURE__*/React.forwardRef(function Composite(_ref, forwardedRef) {\n  let {\n    render,\n    orientation = 'both',\n    loop = true,\n    cols = 1,\n    disabledIndices,\n    ...props\n  } = _ref;\n  const [activeIndex, setActiveIndex] = React.useState(0);\n  const elementsRef = React.useRef([]);\n  const renderElementProps = render && typeof render !== 'function' ? render.props : {};\n  const contextValue = React.useMemo(() => ({\n    activeIndex,\n    setActiveIndex\n  }), [activeIndex]);\n  const isGrid = cols > 1;\n  function handleKeyDown(event) {\n    if (!allKeys.includes(event.key)) return;\n    const minIndex = getMinIndex(elementsRef, disabledIndices);\n    const maxIndex = getMaxIndex(elementsRef, disabledIndices);\n    const prevIndex = activeIndex;\n    let nextIndex = activeIndex;\n    if (isGrid) {\n      nextIndex = getGridNavigatedIndex(elementsRef, {\n        event,\n        orientation,\n        loop,\n        cols,\n        disabledIndices,\n        minIndex,\n        maxIndex,\n        prevIndex\n      });\n    }\n    const toEndKeys = {\n      horizontal: [ARROW_RIGHT],\n      vertical: [ARROW_DOWN],\n      both: [ARROW_RIGHT, ARROW_DOWN]\n    }[orientation];\n    const toStartKeys = {\n      horizontal: [ARROW_LEFT],\n      vertical: [ARROW_UP],\n      both: [ARROW_LEFT, ARROW_UP]\n    }[orientation];\n    const preventedKeys = isGrid ? allKeys : {\n      horizontal: horizontalKeys,\n      vertical: verticalKeys,\n      both: allKeys\n    }[orientation];\n    if (nextIndex === activeIndex && [...toEndKeys, ...toStartKeys].includes(event.key)) {\n      if (loop && nextIndex === maxIndex && toEndKeys.includes(event.key)) {\n        nextIndex = minIndex;\n      } else if (loop && nextIndex === minIndex && toStartKeys.includes(event.key)) {\n        nextIndex = maxIndex;\n      } else {\n        nextIndex = findNonDisabledIndex(elementsRef, {\n          startingIndex: nextIndex,\n          decrement: toStartKeys.includes(event.key),\n          disabledIndices\n        });\n      }\n    }\n    if (nextIndex !== activeIndex && !isIndexOutOfBounds(elementsRef, nextIndex)) {\n      event.stopPropagation();\n      if (preventedKeys.includes(event.key)) {\n        event.preventDefault();\n      }\n      setActiveIndex(nextIndex);\n\n      // Wait for FocusManager `returnFocus` to execute.\n      queueMicrotask(() => {\n        enqueueFocus(elementsRef.current[nextIndex]);\n      });\n    }\n  }\n  const computedProps = {\n    ...props,\n    ...renderElementProps,\n    ref: forwardedRef,\n    'aria-orientation': orientation === 'both' ? undefined : orientation,\n    onKeyDown(e) {\n      props.onKeyDown == null ? void 0 : props.onKeyDown(e);\n      renderElementProps.onKeyDown == null ? void 0 : renderElementProps.onKeyDown(e);\n      handleKeyDown(e);\n    }\n  };\n  return /*#__PURE__*/React.createElement(CompositeContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(FloatingList, {\n    elementsRef: elementsRef\n  }, renderJsx(render, computedProps)));\n});\nconst CompositeItem = /*#__PURE__*/React.forwardRef(function CompositeItem(_ref2, forwardedRef) {\n  let {\n    render,\n    ...props\n  } = _ref2;\n  const renderElementProps = render && typeof render !== 'function' ? render.props : {};\n  const {\n    activeIndex,\n    setActiveIndex\n  } = React.useContext(CompositeContext);\n  const {\n    ref,\n    index\n  } = useListItem();\n  const mergedRef = useMergeRefs([ref, forwardedRef, renderElementProps.ref]);\n  const isActive = activeIndex === index;\n  const computedProps = {\n    ...props,\n    ...renderElementProps,\n    ref: mergedRef,\n    tabIndex: isActive ? 0 : -1,\n    'data-active': isActive ? '' : undefined,\n    onFocus(e) {\n      props.onFocus == null ? void 0 : props.onFocus(e);\n      renderElementProps.onFocus == null ? void 0 : renderElementProps.onFocus(e);\n      setActiveIndex(index);\n    }\n  };\n  return renderJsx(render, computedProps);\n});\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nlet serverHandoffComplete = false;\nlet count = 0;\nconst genId = () => \"floating-ui-\" + count++;\nfunction useFloatingId() {\n  const [id, setId] = React.useState(() => serverHandoffComplete ? genId() : undefined);\n  index(() => {\n    if (id == null) {\n      setId(genId());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  React.useEffect(() => {\n    if (!serverHandoffComplete) {\n      serverHandoffComplete = true;\n    }\n  }, []);\n  return id;\n}\n\n// `toString()` prevents bundlers from trying to `import { useId } from 'react'`\nconst useReactId = React[/*#__PURE__*/'useId'.toString()];\n\n/**\n * Uses React 18's built-in `useId()` when available, or falls back to a\n * slightly less performant (requiring a double render) implementation for\n * earlier React versions.\n * @see https://floating-ui.com/docs/useId\n */\nconst useId = useReactId || useFloatingId;\n\n/**\n * Renders a pointing arrow triangle.\n * @see https://floating-ui.com/docs/FloatingArrow\n */\nconst FloatingArrow = /*#__PURE__*/React.forwardRef(function FloatingArrow(_ref, ref) {\n  let {\n    context: {\n      placement,\n      elements: {\n        floating\n      },\n      middlewareData: {\n        arrow\n      }\n    },\n    width = 14,\n    height = 7,\n    tipRadius = 0,\n    strokeWidth = 0,\n    staticOffset,\n    stroke,\n    d,\n    style: {\n      transform,\n      ...restStyle\n    } = {},\n    ...rest\n  } = _ref;\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!ref) {\n      console.warn('Floating UI: The `ref` prop is required for the `FloatingArrow`', 'component.');\n    }\n  }\n  const clipPathId = useId();\n  if (!floating) {\n    return null;\n  }\n\n  // Strokes must be double the border width, this ensures the stroke's width\n  // works as you'd expect.\n  strokeWidth *= 2;\n  const halfStrokeWidth = strokeWidth / 2;\n  const svgX = width / 2 * (tipRadius / -8 + 1);\n  const svgY = height / 2 * tipRadius / 4;\n  const [side, alignment] = placement.split('-');\n  const isRTL = platform.isRTL(floating);\n  const isCustomShape = !!d;\n  const isVerticalSide = side === 'top' || side === 'bottom';\n  const yOffsetProp = staticOffset && alignment === 'end' ? 'bottom' : 'top';\n  let xOffsetProp = staticOffset && alignment === 'end' ? 'right' : 'left';\n  if (staticOffset && isRTL) {\n    xOffsetProp = alignment === 'end' ? 'left' : 'right';\n  }\n  const arrowX = (arrow == null ? void 0 : arrow.x) != null ? staticOffset || arrow.x : '';\n  const arrowY = (arrow == null ? void 0 : arrow.y) != null ? staticOffset || arrow.y : '';\n  const dValue = d || 'M0,0' + (\" H\" + width) + (\" L\" + (width - svgX) + \",\" + (height - svgY)) + (\" Q\" + width / 2 + \",\" + height + \" \" + svgX + \",\" + (height - svgY)) + ' Z';\n  const rotation = {\n    top: isCustomShape ? 'rotate(180deg)' : '',\n    left: isCustomShape ? 'rotate(90deg)' : 'rotate(-90deg)',\n    bottom: isCustomShape ? '' : 'rotate(180deg)',\n    right: isCustomShape ? 'rotate(-90deg)' : 'rotate(90deg)'\n  }[side];\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({}, rest, {\n    \"aria-hidden\": true,\n    ref: ref,\n    width: isCustomShape ? width : width + strokeWidth,\n    height: width,\n    viewBox: \"0 0 \" + width + \" \" + (height > width ? height : width),\n    style: {\n      position: 'absolute',\n      pointerEvents: 'none',\n      [xOffsetProp]: arrowX,\n      [yOffsetProp]: arrowY,\n      [side]: isVerticalSide || isCustomShape ? '100%' : \"calc(100% - \" + strokeWidth / 2 + \"px)\",\n      transform: \"\" + rotation + (transform != null ? transform : ''),\n      ...restStyle\n    }\n  }), strokeWidth > 0 && /*#__PURE__*/React.createElement(\"path\", {\n    clipPath: \"url(#\" + clipPathId + \")\",\n    fill: \"none\",\n    stroke: stroke\n    // Account for the stroke on the fill path rendered below.\n    ,\n    strokeWidth: strokeWidth + (d ? 0 : 1),\n    d: dValue\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    stroke: strokeWidth && !d ? rest.fill : 'none',\n    d: dValue\n  }), /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: clipPathId\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: -halfStrokeWidth,\n    y: halfStrokeWidth * (isCustomShape ? -1 : 1),\n    width: width + strokeWidth,\n    height: width\n  })));\n});\n\nfunction createPubSub() {\n  const map = new Map();\n  return {\n    emit(event, data) {\n      var _map$get;\n      (_map$get = map.get(event)) == null ? void 0 : _map$get.forEach(handler => handler(data));\n    },\n    on(event, listener) {\n      map.set(event, [...(map.get(event) || []), listener]);\n    },\n    off(event, listener) {\n      var _map$get2;\n      map.set(event, ((_map$get2 = map.get(event)) == null ? void 0 : _map$get2.filter(l => l !== listener)) || []);\n    }\n  };\n}\n\nconst FloatingNodeContext = /*#__PURE__*/React.createContext(null);\nconst FloatingTreeContext = /*#__PURE__*/React.createContext(null);\nconst useFloatingParentNodeId = () => {\n  var _React$useContext;\n  return ((_React$useContext = React.useContext(FloatingNodeContext)) == null ? void 0 : _React$useContext.id) || null;\n};\nconst useFloatingTree = () => React.useContext(FloatingTreeContext);\n\n/**\n * Registers a node into the floating tree, returning its id.\n */\nfunction useFloatingNodeId(customParentId) {\n  const id = useId();\n  const tree = useFloatingTree();\n  const reactParentId = useFloatingParentNodeId();\n  const parentId = customParentId || reactParentId;\n  index(() => {\n    const node = {\n      id,\n      parentId\n    };\n    tree == null ? void 0 : tree.addNode(node);\n    return () => {\n      tree == null ? void 0 : tree.removeNode(node);\n    };\n  }, [tree, id, parentId]);\n  return id;\n}\n\n/**\n * Provides parent node context for nested floating elements.\n * @see https://floating-ui.com/docs/FloatingTree\n */\nfunction FloatingNode(_ref) {\n  let {\n    children,\n    id\n  } = _ref;\n  const parentId = useFloatingParentNodeId();\n  return /*#__PURE__*/React.createElement(FloatingNodeContext.Provider, {\n    value: React.useMemo(() => ({\n      id,\n      parentId\n    }), [id, parentId])\n  }, children);\n}\n\n/**\n * Provides context for nested floating elements when they are not children of\n * each other on the DOM (i.e. portalled to a common node, rather than their\n * respective parent).\n * @see https://floating-ui.com/docs/FloatingTree\n */\nfunction FloatingTree(_ref2) {\n  let {\n    children\n  } = _ref2;\n  const nodesRef = React.useRef([]);\n  const addNode = React.useCallback(node => {\n    nodesRef.current = [...nodesRef.current, node];\n  }, []);\n  const removeNode = React.useCallback(node => {\n    nodesRef.current = nodesRef.current.filter(n => n !== node);\n  }, []);\n  const events = React.useState(() => createPubSub())[0];\n  return /*#__PURE__*/React.createElement(FloatingTreeContext.Provider, {\n    value: React.useMemo(() => ({\n      nodesRef,\n      addNode,\n      removeNode,\n      events\n    }), [nodesRef, addNode, removeNode, events])\n  }, children);\n}\n\nfunction createAttribute(name) {\n  return \"data-floating-ui-\" + name;\n}\n\nfunction useLatestRef(value) {\n  const ref = useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\nconst safePolygonIdentifier = /*#__PURE__*/createAttribute('safe-polygon');\nfunction getDelay(value, prop, pointerType) {\n  if (pointerType && !isMouseLikePointerType(pointerType)) {\n    return 0;\n  }\n  if (typeof value === 'number') {\n    return value;\n  }\n  return value == null ? void 0 : value[prop];\n}\n/**\n * Opens the floating element while hovering over the reference element, like\n * CSS `:hover`.\n * @see https://floating-ui.com/docs/useHover\n */\nfunction useHover(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    dataRef,\n    events,\n    elements: {\n      domReference,\n      floating\n    },\n    refs\n  } = context;\n  const {\n    enabled = true,\n    delay = 0,\n    handleClose = null,\n    mouseOnly = false,\n    restMs = 0,\n    move = true\n  } = props;\n  const tree = useFloatingTree();\n  const parentId = useFloatingParentNodeId();\n  const handleCloseRef = useLatestRef(handleClose);\n  const delayRef = useLatestRef(delay);\n  const pointerTypeRef = React.useRef();\n  const timeoutRef = React.useRef();\n  const handlerRef = React.useRef();\n  const restTimeoutRef = React.useRef();\n  const blockMouseMoveRef = React.useRef(true);\n  const performedPointerEventsMutationRef = React.useRef(false);\n  const unbindMouseMoveRef = React.useRef(() => {});\n  const isHoverOpen = React.useCallback(() => {\n    var _dataRef$current$open;\n    const type = (_dataRef$current$open = dataRef.current.openEvent) == null ? void 0 : _dataRef$current$open.type;\n    return (type == null ? void 0 : type.includes('mouse')) && type !== 'mousedown';\n  }, [dataRef]);\n\n  // When dismissing before opening, clear the delay timeouts to cancel it\n  // from showing.\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    function onDismiss() {\n      clearTimeout(timeoutRef.current);\n      clearTimeout(restTimeoutRef.current);\n      blockMouseMoveRef.current = true;\n    }\n    events.on('dismiss', onDismiss);\n    return () => {\n      events.off('dismiss', onDismiss);\n    };\n  }, [enabled, events]);\n  React.useEffect(() => {\n    if (!enabled || !handleCloseRef.current || !open) {\n      return;\n    }\n    function onLeave(event) {\n      if (isHoverOpen()) {\n        onOpenChange(false, event);\n      }\n    }\n    const html = getDocument(floating).documentElement;\n    html.addEventListener('mouseleave', onLeave);\n    return () => {\n      html.removeEventListener('mouseleave', onLeave);\n    };\n  }, [floating, open, onOpenChange, enabled, handleCloseRef, dataRef, isHoverOpen]);\n  const closeWithDelay = React.useCallback(function (event, runElseBranch) {\n    if (runElseBranch === void 0) {\n      runElseBranch = true;\n    }\n    const closeDelay = getDelay(delayRef.current, 'close', pointerTypeRef.current);\n    if (closeDelay && !handlerRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = setTimeout(() => onOpenChange(false, event), closeDelay);\n    } else if (runElseBranch) {\n      clearTimeout(timeoutRef.current);\n      onOpenChange(false, event);\n    }\n  }, [delayRef, onOpenChange]);\n  const cleanupMouseMoveHandler = React.useCallback(() => {\n    unbindMouseMoveRef.current();\n    handlerRef.current = undefined;\n  }, []);\n  const clearPointerEvents = React.useCallback(() => {\n    if (performedPointerEventsMutationRef.current) {\n      const body = getDocument(refs.floating.current).body;\n      body.style.pointerEvents = '';\n      body.removeAttribute(safePolygonIdentifier);\n      performedPointerEventsMutationRef.current = false;\n    }\n  }, [refs]);\n\n  // Registering the mouse events on the reference directly to bypass React's\n  // delegation system. If the cursor was on a disabled element and then entered\n  // the reference (no gap), `mouseenter` doesn't fire in the delegation system.\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    function isClickLikeOpenEvent() {\n      return dataRef.current.openEvent ? ['click', 'mousedown'].includes(dataRef.current.openEvent.type) : false;\n    }\n    function onMouseEnter(event) {\n      clearTimeout(timeoutRef.current);\n      blockMouseMoveRef.current = false;\n      if (mouseOnly && !isMouseLikePointerType(pointerTypeRef.current) || restMs > 0 && getDelay(delayRef.current, 'open') === 0) {\n        return;\n      }\n      const openDelay = getDelay(delayRef.current, 'open', pointerTypeRef.current);\n      if (openDelay) {\n        timeoutRef.current = setTimeout(() => {\n          onOpenChange(true, event);\n        }, openDelay);\n      } else {\n        onOpenChange(true, event);\n      }\n    }\n    function onMouseLeave(event) {\n      if (isClickLikeOpenEvent()) {\n        return;\n      }\n      unbindMouseMoveRef.current();\n      const doc = getDocument(floating);\n      clearTimeout(restTimeoutRef.current);\n      if (handleCloseRef.current) {\n        // Prevent clearing `onScrollMouseLeave` timeout.\n        if (!open) {\n          clearTimeout(timeoutRef.current);\n        }\n        handlerRef.current = handleCloseRef.current({\n          ...context,\n          tree,\n          x: event.clientX,\n          y: event.clientY,\n          onClose() {\n            clearPointerEvents();\n            cleanupMouseMoveHandler();\n            // Should the event expose that it was closed by `safePolygon`?\n            closeWithDelay(event);\n          }\n        });\n        const handler = handlerRef.current;\n        doc.addEventListener('mousemove', handler);\n        unbindMouseMoveRef.current = () => {\n          doc.removeEventListener('mousemove', handler);\n        };\n        return;\n      }\n\n      // Allow interactivity without `safePolygon` on touch devices. With a\n      // pointer, a short close delay is an alternative, so it should work\n      // consistently.\n      const shouldClose = pointerTypeRef.current === 'touch' ? !contains(floating, event.relatedTarget) : true;\n      if (shouldClose) {\n        closeWithDelay(event);\n      }\n    }\n\n    // Ensure the floating element closes after scrolling even if the pointer\n    // did not move.\n    // https://github.com/floating-ui/floating-ui/discussions/1692\n    function onScrollMouseLeave(event) {\n      if (isClickLikeOpenEvent()) {\n        return;\n      }\n      handleCloseRef.current == null ? void 0 : handleCloseRef.current({\n        ...context,\n        tree,\n        x: event.clientX,\n        y: event.clientY,\n        onClose() {\n          clearPointerEvents();\n          cleanupMouseMoveHandler();\n          closeWithDelay(event);\n        }\n      })(event);\n    }\n    if (isElement(domReference)) {\n      const ref = domReference;\n      open && ref.addEventListener('mouseleave', onScrollMouseLeave);\n      floating == null ? void 0 : floating.addEventListener('mouseleave', onScrollMouseLeave);\n      move && ref.addEventListener('mousemove', onMouseEnter, {\n        once: true\n      });\n      ref.addEventListener('mouseenter', onMouseEnter);\n      ref.addEventListener('mouseleave', onMouseLeave);\n      return () => {\n        open && ref.removeEventListener('mouseleave', onScrollMouseLeave);\n        floating == null ? void 0 : floating.removeEventListener('mouseleave', onScrollMouseLeave);\n        move && ref.removeEventListener('mousemove', onMouseEnter);\n        ref.removeEventListener('mouseenter', onMouseEnter);\n        ref.removeEventListener('mouseleave', onMouseLeave);\n      };\n    }\n  }, [domReference, floating, enabled, context, mouseOnly, restMs, move, closeWithDelay, cleanupMouseMoveHandler, clearPointerEvents, onOpenChange, open, tree, delayRef, handleCloseRef, dataRef]);\n\n  // Block pointer-events of every element other than the reference and floating\n  // while the floating element is open and has a `handleClose` handler. Also\n  // handles nested floating elements.\n  // https://github.com/floating-ui/floating-ui/issues/1722\n  index(() => {\n    var _handleCloseRef$curre;\n    if (!enabled) {\n      return;\n    }\n    if (open && (_handleCloseRef$curre = handleCloseRef.current) != null && _handleCloseRef$curre.__options.blockPointerEvents && isHoverOpen()) {\n      const body = getDocument(floating).body;\n      body.setAttribute(safePolygonIdentifier, '');\n      body.style.pointerEvents = 'none';\n      performedPointerEventsMutationRef.current = true;\n      if (isElement(domReference) && floating) {\n        var _tree$nodesRef$curren, _tree$nodesRef$curren2;\n        const ref = domReference;\n        const parentFloating = tree == null ? void 0 : (_tree$nodesRef$curren = tree.nodesRef.current.find(node => node.id === parentId)) == null ? void 0 : (_tree$nodesRef$curren2 = _tree$nodesRef$curren.context) == null ? void 0 : _tree$nodesRef$curren2.elements.floating;\n        if (parentFloating) {\n          parentFloating.style.pointerEvents = '';\n        }\n        ref.style.pointerEvents = 'auto';\n        floating.style.pointerEvents = 'auto';\n        return () => {\n          ref.style.pointerEvents = '';\n          floating.style.pointerEvents = '';\n        };\n      }\n    }\n  }, [enabled, open, parentId, floating, domReference, tree, handleCloseRef, dataRef, isHoverOpen]);\n  index(() => {\n    if (!open) {\n      pointerTypeRef.current = undefined;\n      cleanupMouseMoveHandler();\n      clearPointerEvents();\n    }\n  }, [open, cleanupMouseMoveHandler, clearPointerEvents]);\n  React.useEffect(() => {\n    return () => {\n      cleanupMouseMoveHandler();\n      clearTimeout(timeoutRef.current);\n      clearTimeout(restTimeoutRef.current);\n      clearPointerEvents();\n    };\n  }, [enabled, domReference, cleanupMouseMoveHandler, clearPointerEvents]);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    function setPointerRef(event) {\n      pointerTypeRef.current = event.pointerType;\n    }\n    return {\n      reference: {\n        onPointerDown: setPointerRef,\n        onPointerEnter: setPointerRef,\n        onMouseMove(event) {\n          if (open || restMs === 0) {\n            return;\n          }\n          clearTimeout(restTimeoutRef.current);\n          restTimeoutRef.current = setTimeout(() => {\n            if (!blockMouseMoveRef.current) {\n              onOpenChange(true, event.nativeEvent);\n            }\n          }, restMs);\n        }\n      },\n      floating: {\n        onMouseEnter() {\n          clearTimeout(timeoutRef.current);\n        },\n        onMouseLeave(event) {\n          events.emit('dismiss', {\n            type: 'mouseLeave',\n            data: {\n              returnFocus: false\n            }\n          });\n          closeWithDelay(event.nativeEvent, false);\n        }\n      }\n    };\n  }, [events, enabled, restMs, open, onOpenChange, closeWithDelay]);\n}\n\nconst FloatingDelayGroupContext = /*#__PURE__*/React.createContext({\n  delay: 0,\n  initialDelay: 0,\n  timeoutMs: 0,\n  currentId: null,\n  setCurrentId: () => {},\n  setState: () => {},\n  isInstantPhase: false\n});\nconst useDelayGroupContext = () => React.useContext(FloatingDelayGroupContext);\n/**\n * Provides context for a group of floating elements that should share a\n * `delay`.\n * @see https://floating-ui.com/docs/FloatingDelayGroup\n */\nconst FloatingDelayGroup = _ref => {\n  let {\n    children,\n    delay,\n    timeoutMs = 0\n  } = _ref;\n  const [state, setState] = React.useReducer((prev, next) => ({\n    ...prev,\n    ...next\n  }), {\n    delay,\n    timeoutMs,\n    initialDelay: delay,\n    currentId: null,\n    isInstantPhase: false\n  });\n  const initialCurrentIdRef = React.useRef(null);\n  const setCurrentId = React.useCallback(currentId => {\n    setState({\n      currentId\n    });\n  }, []);\n  index(() => {\n    if (state.currentId) {\n      if (initialCurrentIdRef.current === null) {\n        initialCurrentIdRef.current = state.currentId;\n      } else {\n        setState({\n          isInstantPhase: true\n        });\n      }\n    } else {\n      setState({\n        isInstantPhase: false\n      });\n      initialCurrentIdRef.current = null;\n    }\n  }, [state.currentId]);\n  return /*#__PURE__*/React.createElement(FloatingDelayGroupContext.Provider, {\n    value: React.useMemo(() => ({\n      ...state,\n      setState,\n      setCurrentId\n    }), [state, setState, setCurrentId])\n  }, children);\n};\nconst useDelayGroup = (_ref2, _ref3) => {\n  let {\n    open,\n    onOpenChange\n  } = _ref2;\n  let {\n    id\n  } = _ref3;\n  const {\n    currentId,\n    setCurrentId,\n    initialDelay,\n    setState,\n    timeoutMs\n  } = useDelayGroupContext();\n  index(() => {\n    if (currentId) {\n      setState({\n        delay: {\n          open: 1,\n          close: getDelay(initialDelay, 'close')\n        }\n      });\n      if (currentId !== id) {\n        onOpenChange(false);\n      }\n    }\n  }, [id, onOpenChange, setState, currentId, initialDelay]);\n  index(() => {\n    function unset() {\n      onOpenChange(false);\n      setState({\n        delay: initialDelay,\n        currentId: null\n      });\n    }\n    if (!open && currentId === id) {\n      if (timeoutMs) {\n        const timeout = window.setTimeout(unset, timeoutMs);\n        return () => {\n          clearTimeout(timeout);\n        };\n      } else {\n        unset();\n      }\n    }\n  }, [open, setState, currentId, id, onOpenChange, initialDelay, timeoutMs]);\n  index(() => {\n    if (open) {\n      setCurrentId(id);\n    }\n  }, [open, setCurrentId, id]);\n};\n\nfunction getAncestors(nodes, id) {\n  var _nodes$find;\n  let allAncestors = [];\n  let currentParentId = (_nodes$find = nodes.find(node => node.id === id)) == null ? void 0 : _nodes$find.parentId;\n  while (currentParentId) {\n    const currentNode = nodes.find(node => node.id === currentParentId);\n    currentParentId = currentNode == null ? void 0 : currentNode.parentId;\n    if (currentNode) {\n      allAncestors = allAncestors.concat(currentNode);\n    }\n  }\n  return allAncestors;\n}\n\nfunction getChildren(nodes, id) {\n  let allChildren = nodes.filter(node => {\n    var _node$context;\n    return node.parentId === id && ((_node$context = node.context) == null ? void 0 : _node$context.open);\n  });\n  let currentChildren = allChildren;\n  while (currentChildren.length) {\n    currentChildren = nodes.filter(node => {\n      var _currentChildren;\n      return (_currentChildren = currentChildren) == null ? void 0 : _currentChildren.some(n => {\n        var _node$context2;\n        return node.parentId === n.id && ((_node$context2 = node.context) == null ? void 0 : _node$context2.open);\n      });\n    });\n    allChildren = allChildren.concat(currentChildren);\n  }\n  return allChildren;\n}\nfunction getDeepestNode(nodes, id) {\n  let deepestNodeId;\n  let maxDepth = -1;\n  function findDeepest(nodeId, depth) {\n    if (depth > maxDepth) {\n      deepestNodeId = nodeId;\n      maxDepth = depth;\n    }\n    const children = getChildren(nodes, nodeId);\n    children.forEach(child => {\n      findDeepest(child.id, depth + 1);\n    });\n  }\n  findDeepest(id, 0);\n  return nodes.find(node => node.id === deepestNodeId);\n}\n\n// Modified to add conditional `aria-hidden` support:\n// https://github.com/theKashey/aria-hidden/blob/9220c8f4a4fd35f63bee5510a9f41a37264382d4/src/index.ts\nlet counterMap = /*#__PURE__*/new WeakMap();\nlet uncontrolledElementsSet = /*#__PURE__*/new WeakSet();\nlet markerMap = {};\nlet lockCount = 0;\nconst supportsInert = () => typeof HTMLElement !== 'undefined' && 'inert' in HTMLElement.prototype;\nconst unwrapHost = node => node && (node.host || unwrapHost(node.parentNode));\nconst correctElements = (parent, targets) => targets.map(target => {\n  if (parent.contains(target)) {\n    return target;\n  }\n  const correctedTarget = unwrapHost(target);\n  if (parent.contains(correctedTarget)) {\n    return correctedTarget;\n  }\n  return null;\n}).filter(x => x != null);\nfunction applyAttributeToOthers(uncorrectedAvoidElements, body, ariaHidden, inert) {\n  const markerName = 'data-floating-ui-inert';\n  const controlAttribute = inert ? 'inert' : ariaHidden ? 'aria-hidden' : null;\n  const avoidElements = correctElements(body, uncorrectedAvoidElements);\n  const elementsToKeep = new Set();\n  const elementsToStop = new Set(avoidElements);\n  const hiddenElements = [];\n  if (!markerMap[markerName]) {\n    markerMap[markerName] = new WeakMap();\n  }\n  const markerCounter = markerMap[markerName];\n  avoidElements.forEach(keep);\n  deep(body);\n  elementsToKeep.clear();\n  function keep(el) {\n    if (!el || elementsToKeep.has(el)) {\n      return;\n    }\n    elementsToKeep.add(el);\n    el.parentNode && keep(el.parentNode);\n  }\n  function deep(parent) {\n    if (!parent || elementsToStop.has(parent)) {\n      return;\n    }\n    Array.prototype.forEach.call(parent.children, node => {\n      if (elementsToKeep.has(node)) {\n        deep(node);\n      } else {\n        const attr = controlAttribute ? node.getAttribute(controlAttribute) : null;\n        const alreadyHidden = attr !== null && attr !== 'false';\n        const counterValue = (counterMap.get(node) || 0) + 1;\n        const markerValue = (markerCounter.get(node) || 0) + 1;\n        counterMap.set(node, counterValue);\n        markerCounter.set(node, markerValue);\n        hiddenElements.push(node);\n        if (counterValue === 1 && alreadyHidden) {\n          uncontrolledElementsSet.add(node);\n        }\n        if (markerValue === 1) {\n          node.setAttribute(markerName, '');\n        }\n        if (!alreadyHidden && controlAttribute) {\n          node.setAttribute(controlAttribute, 'true');\n        }\n      }\n    });\n  }\n  lockCount++;\n  return () => {\n    hiddenElements.forEach(element => {\n      const counterValue = (counterMap.get(element) || 0) - 1;\n      const markerValue = (markerCounter.get(element) || 0) - 1;\n      counterMap.set(element, counterValue);\n      markerCounter.set(element, markerValue);\n      if (!counterValue) {\n        if (!uncontrolledElementsSet.has(element) && controlAttribute) {\n          element.removeAttribute(controlAttribute);\n        }\n        uncontrolledElementsSet.delete(element);\n      }\n      if (!markerValue) {\n        element.removeAttribute(markerName);\n      }\n    });\n    lockCount--;\n    if (!lockCount) {\n      counterMap = new WeakMap();\n      counterMap = new WeakMap();\n      uncontrolledElementsSet = new WeakSet();\n      markerMap = {};\n    }\n  };\n}\nfunction markOthers(avoidElements, ariaHidden, inert) {\n  if (ariaHidden === void 0) {\n    ariaHidden = false;\n  }\n  if (inert === void 0) {\n    inert = false;\n  }\n  const body = getDocument(avoidElements[0]).body;\n  return applyAttributeToOthers(avoidElements.concat(Array.from(body.querySelectorAll('[aria-live]'))), body, ariaHidden, inert);\n}\n\nconst getTabbableOptions = () => ({\n  getShadowRoot: true,\n  displayCheck:\n  // JSDOM does not support the `tabbable` library. To solve this we can\n  // check if `ResizeObserver` is a real function (not polyfilled), which\n  // determines if the current environment is JSDOM-like.\n  typeof ResizeObserver === 'function' && ResizeObserver.toString().includes('[native code]') ? 'full' : 'none'\n});\nfunction getTabbableIn(container, direction) {\n  const allTabbable = tabbable(container, getTabbableOptions());\n  if (direction === 'prev') {\n    allTabbable.reverse();\n  }\n  const activeIndex = allTabbable.indexOf(activeElement(getDocument(container)));\n  const nextTabbableElements = allTabbable.slice(activeIndex + 1);\n  return nextTabbableElements[0];\n}\nfunction getNextTabbable() {\n  return getTabbableIn(document.body, 'next');\n}\nfunction getPreviousTabbable() {\n  return getTabbableIn(document.body, 'prev');\n}\nfunction isOutsideEvent(event, container) {\n  const containerElement = container || event.currentTarget;\n  const relatedTarget = event.relatedTarget;\n  return !relatedTarget || !contains(containerElement, relatedTarget);\n}\nfunction disableFocusInside(container) {\n  const tabbableElements = tabbable(container, getTabbableOptions());\n  tabbableElements.forEach(element => {\n    element.dataset.tabindex = element.getAttribute('tabindex') || '';\n    element.setAttribute('tabindex', '-1');\n  });\n}\nfunction enableFocusInside(container) {\n  const elements = container.querySelectorAll('[data-tabindex]');\n  elements.forEach(element => {\n    const tabindex = element.dataset.tabindex;\n    delete element.dataset.tabindex;\n    if (tabindex) {\n      element.setAttribute('tabindex', tabindex);\n    } else {\n      element.removeAttribute('tabindex');\n    }\n  });\n}\n\n// See Diego Haz's Sandbox for making this logic work well on Safari/iOS:\n// https://codesandbox.io/s/tabbable-portal-f4tng?file=/src/FocusTrap.tsx\n\nconst HIDDEN_STYLES = {\n  border: 0,\n  clip: 'rect(0 0 0 0)',\n  height: '1px',\n  margin: '-1px',\n  overflow: 'hidden',\n  padding: 0,\n  position: 'fixed',\n  whiteSpace: 'nowrap',\n  width: '1px',\n  top: 0,\n  left: 0\n};\nlet timeoutId;\nfunction setActiveElementOnTab(event) {\n  if (event.key === 'Tab') {\n    event.target;\n    clearTimeout(timeoutId);\n  }\n}\nconst FocusGuard = /*#__PURE__*/React.forwardRef(function FocusGuard(props, ref) {\n  const [role, setRole] = React.useState();\n  index(() => {\n    if (isSafari()) {\n      // Unlike other screen readers such as NVDA and JAWS, the virtual cursor\n      // on VoiceOver does trigger the onFocus event, so we can use the focus\n      // trap element. On Safari, only buttons trigger the onFocus event.\n      // NB: \"group\" role in the Sandbox no longer appears to work, must be a\n      // button role.\n      setRole('button');\n    }\n    document.addEventListener('keydown', setActiveElementOnTab);\n    return () => {\n      document.removeEventListener('keydown', setActiveElementOnTab);\n    };\n  }, []);\n  const restProps = {\n    ref,\n    tabIndex: 0,\n    // Role is only for VoiceOver\n    role,\n    'aria-hidden': role ? undefined : true,\n    [createAttribute('focus-guard')]: '',\n    style: HIDDEN_STYLES\n  };\n  return /*#__PURE__*/React.createElement(\"span\", _extends({}, props, restProps));\n});\n\nconst PortalContext = /*#__PURE__*/React.createContext(null);\nfunction useFloatingPortalNode(_temp) {\n  let {\n    id,\n    root\n  } = _temp === void 0 ? {} : _temp;\n  const [portalNode, setPortalNode] = React.useState(null);\n  const uniqueId = useId();\n  const portalContext = usePortalContext();\n  const data = React.useMemo(() => ({\n    id,\n    root,\n    portalContext,\n    uniqueId\n  }), [id, root, portalContext, uniqueId]);\n  const dataRef = React.useRef();\n  index(() => {\n    return () => {\n      portalNode == null ? void 0 : portalNode.remove();\n    };\n  }, [portalNode, data]);\n  index(() => {\n    if (dataRef.current === data) return;\n    dataRef.current = data;\n    const {\n      id,\n      root,\n      portalContext,\n      uniqueId\n    } = data;\n    const existingIdRoot = id ? document.getElementById(id) : null;\n    const attr = createAttribute('portal');\n    if (existingIdRoot) {\n      const subRoot = document.createElement('div');\n      subRoot.id = uniqueId;\n      subRoot.setAttribute(attr, '');\n      existingIdRoot.appendChild(subRoot);\n      setPortalNode(subRoot);\n    } else {\n      let container = root || (portalContext == null ? void 0 : portalContext.portalNode);\n      if (container && !isElement(container)) container = container.current;\n      container = container || document.body;\n      let idWrapper = null;\n      if (id) {\n        idWrapper = document.createElement('div');\n        idWrapper.id = id;\n        container.appendChild(idWrapper);\n      }\n      const subRoot = document.createElement('div');\n      subRoot.id = uniqueId;\n      subRoot.setAttribute(attr, '');\n      container = idWrapper || container;\n      container.appendChild(subRoot);\n      setPortalNode(subRoot);\n    }\n  }, [data]);\n  return portalNode;\n}\n/**\n * Portals the floating element into a given container element — by default,\n * outside of the app root and into the body.\n * @see https://floating-ui.com/docs/FloatingPortal\n */\nfunction FloatingPortal(_ref) {\n  let {\n    children,\n    id,\n    root = null,\n    preserveTabOrder = true\n  } = _ref;\n  const portalNode = useFloatingPortalNode({\n    id,\n    root\n  });\n  const [focusManagerState, setFocusManagerState] = React.useState(null);\n  const beforeOutsideRef = React.useRef(null);\n  const afterOutsideRef = React.useRef(null);\n  const beforeInsideRef = React.useRef(null);\n  const afterInsideRef = React.useRef(null);\n  const shouldRenderGuards =\n  // The FocusManager and therefore floating element are currently open/\n  // rendered.\n  !!focusManagerState &&\n  // Guards are only for non-modal focus management.\n  !focusManagerState.modal &&\n  // Don't render if unmount is transitioning.\n  focusManagerState.open && preserveTabOrder && !!(root || portalNode);\n\n  // https://codesandbox.io/s/tabbable-portal-f4tng?file=/src/TabbablePortal.tsx\n  React.useEffect(() => {\n    if (!portalNode || !preserveTabOrder || focusManagerState != null && focusManagerState.modal) {\n      return;\n    }\n\n    // Make sure elements inside the portal element are tabbable only when the\n    // portal has already been focused, either by tabbing into a focus trap\n    // element outside or using the mouse.\n    function onFocus(event) {\n      if (portalNode && isOutsideEvent(event)) {\n        const focusing = event.type === 'focusin';\n        const manageFocus = focusing ? enableFocusInside : disableFocusInside;\n        manageFocus(portalNode);\n      }\n    }\n    // Listen to the event on the capture phase so they run before the focus\n    // trap elements onFocus prop is called.\n    portalNode.addEventListener('focusin', onFocus, true);\n    portalNode.addEventListener('focusout', onFocus, true);\n    return () => {\n      portalNode.removeEventListener('focusin', onFocus, true);\n      portalNode.removeEventListener('focusout', onFocus, true);\n    };\n  }, [portalNode, preserveTabOrder, focusManagerState == null ? void 0 : focusManagerState.modal]);\n  return /*#__PURE__*/React.createElement(PortalContext.Provider, {\n    value: React.useMemo(() => ({\n      preserveTabOrder,\n      beforeOutsideRef,\n      afterOutsideRef,\n      beforeInsideRef,\n      afterInsideRef,\n      portalNode,\n      setFocusManagerState\n    }), [preserveTabOrder, portalNode])\n  }, shouldRenderGuards && portalNode && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"outside\",\n    ref: beforeOutsideRef,\n    onFocus: event => {\n      if (isOutsideEvent(event, portalNode)) {\n        var _beforeInsideRef$curr;\n        (_beforeInsideRef$curr = beforeInsideRef.current) == null ? void 0 : _beforeInsideRef$curr.focus();\n      } else {\n        const prevTabbable = getPreviousTabbable() || (focusManagerState == null ? void 0 : focusManagerState.refs.domReference.current);\n        prevTabbable == null ? void 0 : prevTabbable.focus();\n      }\n    }\n  }), shouldRenderGuards && portalNode && /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-owns\": portalNode.id,\n    style: HIDDEN_STYLES\n  }), portalNode && /*#__PURE__*/createPortal(children, portalNode), shouldRenderGuards && portalNode && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"outside\",\n    ref: afterOutsideRef,\n    onFocus: event => {\n      if (isOutsideEvent(event, portalNode)) {\n        var _afterInsideRef$curre;\n        (_afterInsideRef$curre = afterInsideRef.current) == null ? void 0 : _afterInsideRef$curre.focus();\n      } else {\n        const nextTabbable = getNextTabbable() || (focusManagerState == null ? void 0 : focusManagerState.refs.domReference.current);\n        nextTabbable == null ? void 0 : nextTabbable.focus();\n        (focusManagerState == null ? void 0 : focusManagerState.closeOnFocusOut) && (focusManagerState == null ? void 0 : focusManagerState.onOpenChange(false, event.nativeEvent));\n      }\n    }\n  }));\n}\nconst usePortalContext = () => React.useContext(PortalContext);\n\nconst VisuallyHiddenDismiss = /*#__PURE__*/React.forwardRef(function VisuallyHiddenDismiss(props, ref) {\n  return /*#__PURE__*/React.createElement(\"button\", _extends({}, props, {\n    type: \"button\",\n    ref: ref,\n    tabIndex: -1,\n    style: HIDDEN_STYLES\n  }));\n});\n/**\n * Provides focus management for the floating element.\n * @see https://floating-ui.com/docs/FloatingFocusManager\n */\nfunction FloatingFocusManager(props) {\n  const {\n    context,\n    children,\n    disabled = false,\n    order = ['content'],\n    guards: _guards = true,\n    initialFocus = 0,\n    returnFocus = true,\n    modal = true,\n    visuallyHiddenDismiss = false,\n    closeOnFocusOut = true\n  } = props;\n  const {\n    open,\n    refs,\n    nodeId,\n    onOpenChange,\n    events,\n    dataRef,\n    elements: {\n      domReference,\n      floating\n    }\n  } = context;\n\n  // Force the guards to be rendered if the `inert` attribute is not supported.\n  const guards = supportsInert() ? _guards : true;\n  const orderRef = useLatestRef(order);\n  const initialFocusRef = useLatestRef(initialFocus);\n  const returnFocusRef = useLatestRef(returnFocus);\n  const tree = useFloatingTree();\n  const portalContext = usePortalContext();\n\n  // Controlled by `useListNavigation`.\n  const ignoreInitialFocus = typeof initialFocus === 'number' && initialFocus < 0;\n  const startDismissButtonRef = React.useRef(null);\n  const endDismissButtonRef = React.useRef(null);\n  const preventReturnFocusRef = React.useRef(false);\n  const previouslyFocusedElementRef = React.useRef(null);\n  const isPointerDownRef = React.useRef(false);\n  const isInsidePortal = portalContext != null;\n\n  // If the reference is a combobox and is typeable (e.g. input/textarea),\n  // there are different focus semantics. The guards should not be rendered, but\n  // aria-hidden should be applied to all nodes still. Further, the visually\n  // hidden dismiss button should only appear at the end of the list, not the\n  // start.\n  const isUntrappedTypeableCombobox = domReference && domReference.getAttribute('role') === 'combobox' && isTypeableElement(domReference) && ignoreInitialFocus;\n  const getTabbableContent = React.useCallback(function (container) {\n    if (container === void 0) {\n      container = floating;\n    }\n    return container ? tabbable(container, getTabbableOptions()) : [];\n  }, [floating]);\n  const getTabbableElements = React.useCallback(container => {\n    const content = getTabbableContent(container);\n    return orderRef.current.map(type => {\n      if (domReference && type === 'reference') {\n        return domReference;\n      }\n      if (floating && type === 'floating') {\n        return floating;\n      }\n      return content;\n    }).filter(Boolean).flat();\n  }, [domReference, floating, orderRef, getTabbableContent]);\n  React.useEffect(() => {\n    if (disabled || !modal) return;\n    function onKeyDown(event) {\n      if (event.key === 'Tab') {\n        // The focus guards have nothing to focus, so we need to stop the event.\n        if (contains(floating, activeElement(getDocument(floating))) && getTabbableContent().length === 0 && !isUntrappedTypeableCombobox) {\n          stopEvent(event);\n        }\n        const els = getTabbableElements();\n        const target = getTarget(event);\n        if (orderRef.current[0] === 'reference' && target === domReference) {\n          stopEvent(event);\n          if (event.shiftKey) {\n            enqueueFocus(els[els.length - 1]);\n          } else {\n            enqueueFocus(els[1]);\n          }\n        }\n        if (orderRef.current[1] === 'floating' && target === floating && event.shiftKey) {\n          stopEvent(event);\n          enqueueFocus(els[0]);\n        }\n      }\n    }\n    const doc = getDocument(floating);\n    doc.addEventListener('keydown', onKeyDown);\n    return () => {\n      doc.removeEventListener('keydown', onKeyDown);\n    };\n  }, [disabled, domReference, floating, modal, orderRef, refs, isUntrappedTypeableCombobox, getTabbableContent, getTabbableElements]);\n  React.useEffect(() => {\n    if (disabled || !closeOnFocusOut) return;\n\n    // In Safari, buttons lose focus when pressing them.\n    function handlePointerDown() {\n      isPointerDownRef.current = true;\n      setTimeout(() => {\n        isPointerDownRef.current = false;\n      });\n    }\n    function handleFocusOutside(event) {\n      const relatedTarget = event.relatedTarget;\n      queueMicrotask(() => {\n        const movedToUnrelatedNode = !(contains(domReference, relatedTarget) || contains(floating, relatedTarget) || contains(relatedTarget, floating) || contains(portalContext == null ? void 0 : portalContext.portalNode, relatedTarget) || relatedTarget != null && relatedTarget.hasAttribute(createAttribute('focus-guard')) || tree && (getChildren(tree.nodesRef.current, nodeId).find(node => {\n          var _node$context, _node$context2;\n          return contains((_node$context = node.context) == null ? void 0 : _node$context.elements.floating, relatedTarget) || contains((_node$context2 = node.context) == null ? void 0 : _node$context2.elements.domReference, relatedTarget);\n        }) || getAncestors(tree.nodesRef.current, nodeId).find(node => {\n          var _node$context3, _node$context4;\n          return ((_node$context3 = node.context) == null ? void 0 : _node$context3.elements.floating) === relatedTarget || ((_node$context4 = node.context) == null ? void 0 : _node$context4.elements.domReference) === relatedTarget;\n        })));\n\n        // Focus did not move inside the floating tree, and there are no tabbable\n        // portal guards to handle closing.\n        if (relatedTarget && movedToUnrelatedNode && !isPointerDownRef.current &&\n        // Fix React 18 Strict Mode returnFocus due to double rendering.\n        relatedTarget !== previouslyFocusedElementRef.current) {\n          preventReturnFocusRef.current = true;\n          onOpenChange(false, event);\n        }\n      });\n    }\n    if (floating && isHTMLElement(domReference)) {\n      domReference.addEventListener('focusout', handleFocusOutside);\n      domReference.addEventListener('pointerdown', handlePointerDown);\n      !modal && floating.addEventListener('focusout', handleFocusOutside);\n      return () => {\n        domReference.removeEventListener('focusout', handleFocusOutside);\n        domReference.removeEventListener('pointerdown', handlePointerDown);\n        !modal && floating.removeEventListener('focusout', handleFocusOutside);\n      };\n    }\n  }, [disabled, domReference, floating, modal, nodeId, tree, portalContext, onOpenChange, closeOnFocusOut]);\n  React.useEffect(() => {\n    var _portalContext$portal;\n    if (disabled) return;\n\n    // Don't hide portals nested within the parent portal.\n    const portalNodes = Array.from((portalContext == null ? void 0 : (_portalContext$portal = portalContext.portalNode) == null ? void 0 : _portalContext$portal.querySelectorAll(\"[\" + createAttribute('portal') + \"]\")) || []);\n    if (floating) {\n      const insideElements = [floating, ...portalNodes, startDismissButtonRef.current, endDismissButtonRef.current, orderRef.current.includes('reference') || isUntrappedTypeableCombobox ? domReference : null].filter(x => x != null);\n      const cleanup = modal ? markOthers(insideElements, guards, !guards) : markOthers(insideElements);\n      return () => {\n        cleanup();\n      };\n    }\n  }, [disabled, domReference, floating, modal, orderRef, portalContext, isUntrappedTypeableCombobox, guards]);\n  index(() => {\n    if (disabled || !floating) return;\n    const doc = getDocument(floating);\n    const previouslyFocusedElement = activeElement(doc);\n\n    // Wait for any layout effect state setters to execute to set `tabIndex`.\n    queueMicrotask(() => {\n      const focusableElements = getTabbableElements(floating);\n      const initialFocusValue = initialFocusRef.current;\n      const elToFocus = (typeof initialFocusValue === 'number' ? focusableElements[initialFocusValue] : initialFocusValue.current) || floating;\n      const focusAlreadyInsideFloatingEl = contains(floating, previouslyFocusedElement);\n      if (!ignoreInitialFocus && !focusAlreadyInsideFloatingEl && open) {\n        enqueueFocus(elToFocus, {\n          preventScroll: elToFocus === floating\n        });\n      }\n    });\n  }, [disabled, open, floating, ignoreInitialFocus, getTabbableElements, initialFocusRef]);\n  index(() => {\n    if (disabled || !floating) return;\n    let preventReturnFocusScroll = false;\n    const doc = getDocument(floating);\n    const previouslyFocusedElement = activeElement(doc);\n    const contextData = dataRef.current;\n    previouslyFocusedElementRef.current = previouslyFocusedElement;\n\n    // Dismissing via outside press should always ignore `returnFocus` to\n    // prevent unwanted scrolling.\n    function onDismiss(payload) {\n      if (payload.type === 'escapeKey' && refs.domReference.current) {\n        previouslyFocusedElementRef.current = refs.domReference.current;\n      }\n      if (['referencePress', 'escapeKey'].includes(payload.type)) {\n        return;\n      }\n      const returnFocus = payload.data.returnFocus;\n      if (typeof returnFocus === 'object') {\n        preventReturnFocusRef.current = false;\n        preventReturnFocusScroll = returnFocus.preventScroll;\n      } else {\n        preventReturnFocusRef.current = !returnFocus;\n      }\n    }\n    events.on('dismiss', onDismiss);\n    return () => {\n      events.off('dismiss', onDismiss);\n      const activeEl = activeElement(doc);\n      const shouldFocusReference = contains(floating, activeEl) || tree && getChildren(tree.nodesRef.current, nodeId).some(node => {\n        var _node$context5;\n        return contains((_node$context5 = node.context) == null ? void 0 : _node$context5.elements.floating, activeEl);\n      }) || contextData.openEvent && ['click', 'mousedown'].includes(contextData.openEvent.type);\n      if (shouldFocusReference && refs.domReference.current) {\n        previouslyFocusedElementRef.current = refs.domReference.current;\n      }\n      if (\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      returnFocusRef.current && isHTMLElement(previouslyFocusedElementRef.current) && !preventReturnFocusRef.current) {\n        enqueueFocus(previouslyFocusedElementRef.current, {\n          // When dismissing nested floating elements, by the time the rAF has\n          // executed, the menus will all have been unmounted. When they try\n          // to get focused, the calls get ignored — leaving the root\n          // reference focused as desired.\n          cancelPrevious: false,\n          preventScroll: preventReturnFocusScroll\n        });\n      }\n    };\n  }, [disabled, floating, returnFocusRef, dataRef, refs, events, tree, nodeId]);\n\n  // Synchronize the `context` & `modal` value to the FloatingPortal context.\n  // It will decide whether or not it needs to render its own guards.\n  index(() => {\n    if (disabled || !portalContext) return;\n    portalContext.setFocusManagerState({\n      modal,\n      closeOnFocusOut,\n      open,\n      onOpenChange,\n      refs\n    });\n    return () => {\n      portalContext.setFocusManagerState(null);\n    };\n  }, [disabled, portalContext, modal, open, onOpenChange, refs, closeOnFocusOut]);\n  index(() => {\n    if (disabled) return;\n    if (floating && typeof MutationObserver === 'function' && !ignoreInitialFocus) {\n      const handleMutation = () => {\n        const tabIndex = floating.getAttribute('tabindex');\n        if (orderRef.current.includes('floating') || activeElement(getDocument(floating)) !== refs.domReference.current && getTabbableContent().length === 0) {\n          if (tabIndex !== '0') {\n            floating.setAttribute('tabindex', '0');\n          }\n        } else if (tabIndex !== '-1') {\n          floating.setAttribute('tabindex', '-1');\n        }\n      };\n      handleMutation();\n      const observer = new MutationObserver(handleMutation);\n      observer.observe(floating, {\n        childList: true,\n        subtree: true,\n        attributes: true\n      });\n      return () => {\n        observer.disconnect();\n      };\n    }\n  }, [disabled, floating, refs, orderRef, getTabbableContent, ignoreInitialFocus]);\n  function renderDismissButton(location) {\n    if (disabled || !visuallyHiddenDismiss || !modal) {\n      return null;\n    }\n    return /*#__PURE__*/React.createElement(VisuallyHiddenDismiss, {\n      ref: location === 'start' ? startDismissButtonRef : endDismissButtonRef,\n      onClick: event => onOpenChange(false, event.nativeEvent)\n    }, typeof visuallyHiddenDismiss === 'string' ? visuallyHiddenDismiss : 'Dismiss');\n  }\n  const shouldRenderGuards = !disabled && guards && !isUntrappedTypeableCombobox && (isInsidePortal || modal);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, shouldRenderGuards && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"inside\",\n    ref: portalContext == null ? void 0 : portalContext.beforeInsideRef,\n    onFocus: event => {\n      if (modal) {\n        const els = getTabbableElements();\n        enqueueFocus(order[0] === 'reference' ? els[0] : els[els.length - 1]);\n      } else if (portalContext != null && portalContext.preserveTabOrder && portalContext.portalNode) {\n        preventReturnFocusRef.current = false;\n        if (isOutsideEvent(event, portalContext.portalNode)) {\n          const nextTabbable = getNextTabbable() || domReference;\n          nextTabbable == null ? void 0 : nextTabbable.focus();\n        } else {\n          var _portalContext$before;\n          (_portalContext$before = portalContext.beforeOutsideRef.current) == null ? void 0 : _portalContext$before.focus();\n        }\n      }\n    }\n  }), !isUntrappedTypeableCombobox && renderDismissButton('start'), children, renderDismissButton('end'), shouldRenderGuards && /*#__PURE__*/React.createElement(FocusGuard, {\n    \"data-type\": \"inside\",\n    ref: portalContext == null ? void 0 : portalContext.afterInsideRef,\n    onFocus: event => {\n      if (modal) {\n        enqueueFocus(getTabbableElements()[0]);\n      } else if (portalContext != null && portalContext.preserveTabOrder && portalContext.portalNode) {\n        if (closeOnFocusOut) {\n          preventReturnFocusRef.current = true;\n        }\n        if (isOutsideEvent(event, portalContext.portalNode)) {\n          const prevTabbable = getPreviousTabbable() || domReference;\n          prevTabbable == null ? void 0 : prevTabbable.focus();\n        } else {\n          var _portalContext$afterO;\n          (_portalContext$afterO = portalContext.afterOutsideRef.current) == null ? void 0 : _portalContext$afterO.focus();\n        }\n      }\n    }\n  }));\n}\n\nconst activeLocks = /*#__PURE__*/new Set();\n\n/**\n * Provides base styling for a fixed overlay element to dim content or block\n * pointer events behind a floating element.\n * It's a regular `<div>`, so it can be styled via any CSS solution you prefer.\n * @see https://floating-ui.com/docs/FloatingOverlay\n */\nconst FloatingOverlay = /*#__PURE__*/React.forwardRef(function FloatingOverlay(_ref, ref) {\n  let {\n    lockScroll = false,\n    ...rest\n  } = _ref;\n  const lockId = useId();\n  index(() => {\n    if (!lockScroll) return;\n    activeLocks.add(lockId);\n    const isIOS = /iP(hone|ad|od)|iOS/.test(getPlatform());\n    const bodyStyle = document.body.style;\n    // RTL <body> scrollbar\n    const scrollbarX = Math.round(document.documentElement.getBoundingClientRect().left) + document.documentElement.scrollLeft;\n    const paddingProp = scrollbarX ? 'paddingLeft' : 'paddingRight';\n    const scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;\n    const scrollX = bodyStyle.left ? parseFloat(bodyStyle.left) : window.pageXOffset;\n    const scrollY = bodyStyle.top ? parseFloat(bodyStyle.top) : window.pageYOffset;\n    bodyStyle.overflow = 'hidden';\n    if (scrollbarWidth) {\n      bodyStyle[paddingProp] = scrollbarWidth + \"px\";\n    }\n\n    // Only iOS doesn't respect `overflow: hidden` on document.body, and this\n    // technique has fewer side effects.\n    if (isIOS) {\n      var _window$visualViewpor, _window$visualViewpor2;\n      // iOS 12 does not support `visualViewport`.\n      const offsetLeft = ((_window$visualViewpor = window.visualViewport) == null ? void 0 : _window$visualViewpor.offsetLeft) || 0;\n      const offsetTop = ((_window$visualViewpor2 = window.visualViewport) == null ? void 0 : _window$visualViewpor2.offsetTop) || 0;\n      Object.assign(bodyStyle, {\n        position: 'fixed',\n        top: -(scrollY - Math.floor(offsetTop)) + \"px\",\n        left: -(scrollX - Math.floor(offsetLeft)) + \"px\",\n        right: '0'\n      });\n    }\n    return () => {\n      activeLocks.delete(lockId);\n      if (activeLocks.size === 0) {\n        Object.assign(bodyStyle, {\n          overflow: '',\n          [paddingProp]: ''\n        });\n        if (isIOS) {\n          Object.assign(bodyStyle, {\n            position: '',\n            top: '',\n            left: '',\n            right: ''\n          });\n          window.scrollTo(scrollX, scrollY);\n        }\n      }\n    };\n  }, [lockId, lockScroll]);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, rest, {\n    style: {\n      position: 'fixed',\n      overflow: 'auto',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      ...rest.style\n    }\n  }));\n});\n\nfunction isButtonTarget(event) {\n  return isHTMLElement(event.target) && event.target.tagName === 'BUTTON';\n}\nfunction isSpaceIgnored(element) {\n  return isTypeableElement(element);\n}\n/**\n * Opens or closes the floating element when clicking the reference element.\n * @see https://floating-ui.com/docs/useClick\n */\nfunction useClick(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    dataRef,\n    elements: {\n      domReference\n    }\n  } = context;\n  const {\n    enabled = true,\n    event: eventOption = 'click',\n    toggle = true,\n    ignoreMouse = false,\n    keyboardHandlers = true\n  } = props;\n  const pointerTypeRef = React.useRef();\n  const didKeyDownRef = React.useRef(false);\n  return React.useMemo(() => {\n    if (!enabled) return {};\n    return {\n      reference: {\n        onPointerDown(event) {\n          pointerTypeRef.current = event.pointerType;\n        },\n        onMouseDown(event) {\n          // Ignore all buttons except for the \"main\" button.\n          // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n          if (event.button !== 0) {\n            return;\n          }\n          if (isMouseLikePointerType(pointerTypeRef.current, true) && ignoreMouse) {\n            return;\n          }\n          if (eventOption === 'click') {\n            return;\n          }\n          if (open && toggle && (dataRef.current.openEvent ? dataRef.current.openEvent.type === 'mousedown' : true)) {\n            onOpenChange(false, event.nativeEvent);\n          } else {\n            // Prevent stealing focus from the floating element\n            event.preventDefault();\n            onOpenChange(true, event.nativeEvent);\n          }\n        },\n        onClick(event) {\n          if (eventOption === 'mousedown' && pointerTypeRef.current) {\n            pointerTypeRef.current = undefined;\n            return;\n          }\n          if (isMouseLikePointerType(pointerTypeRef.current, true) && ignoreMouse) {\n            return;\n          }\n          if (open && toggle && (dataRef.current.openEvent ? dataRef.current.openEvent.type === 'click' : true)) {\n            onOpenChange(false, event.nativeEvent);\n          } else {\n            onOpenChange(true, event.nativeEvent);\n          }\n        },\n        onKeyDown(event) {\n          pointerTypeRef.current = undefined;\n          if (event.defaultPrevented || !keyboardHandlers || isButtonTarget(event)) {\n            return;\n          }\n          if (event.key === ' ' && !isSpaceIgnored(domReference)) {\n            // Prevent scrolling\n            event.preventDefault();\n            didKeyDownRef.current = true;\n          }\n          if (event.key === 'Enter') {\n            if (open && toggle) {\n              onOpenChange(false, event.nativeEvent);\n            } else {\n              onOpenChange(true, event.nativeEvent);\n            }\n          }\n        },\n        onKeyUp(event) {\n          if (event.defaultPrevented || !keyboardHandlers || isButtonTarget(event) || isSpaceIgnored(domReference)) {\n            return;\n          }\n          if (event.key === ' ' && didKeyDownRef.current) {\n            didKeyDownRef.current = false;\n            if (open && toggle) {\n              onOpenChange(false, event.nativeEvent);\n            } else {\n              onOpenChange(true, event.nativeEvent);\n            }\n          }\n        }\n      }\n    };\n  }, [enabled, dataRef, eventOption, ignoreMouse, keyboardHandlers, domReference, toggle, open, onOpenChange]);\n}\n\n// `toString()` prevents bundlers from trying to `import { useInsertionEffect } from 'react'`\nconst useInsertionEffect = React[/*#__PURE__*/'useInsertionEffect'.toString()];\nconst useSafeInsertionEffect = useInsertionEffect || (fn => fn());\nfunction useEffectEvent(callback) {\n  const ref = React.useRef(() => {\n    if (process.env.NODE_ENV !== \"production\") {\n      throw new Error('Cannot call an event handler while rendering.');\n    }\n  });\n  useSafeInsertionEffect(() => {\n    ref.current = callback;\n  });\n  return React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return ref.current == null ? void 0 : ref.current(...args);\n  }, []);\n}\n\nfunction createVirtualElement(domRef, data) {\n  let offsetX = null;\n  let offsetY = null;\n  let isAutoUpdateEvent = false;\n  return {\n    contextElement: domRef.current || undefined,\n    getBoundingClientRect() {\n      var _domRef$current, _data$dataRef$current;\n      const domRect = ((_domRef$current = domRef.current) == null ? void 0 : _domRef$current.getBoundingClientRect()) || {\n        width: 0,\n        height: 0,\n        x: 0,\n        y: 0\n      };\n      const isXAxis = data.axis === 'x' || data.axis === 'both';\n      const isYAxis = data.axis === 'y' || data.axis === 'both';\n      const canTrackCursorOnAutoUpdate = ['mouseenter', 'mousemove'].includes(((_data$dataRef$current = data.dataRef.current.openEvent) == null ? void 0 : _data$dataRef$current.type) || '') && data.pointerType !== 'touch';\n      let width = domRect.width;\n      let height = domRect.height;\n      let x = domRect.x;\n      let y = domRect.y;\n      if (offsetX == null && data.x && isXAxis) {\n        offsetX = domRect.x - data.x;\n      }\n      if (offsetY == null && data.y && isYAxis) {\n        offsetY = domRect.y - data.y;\n      }\n      x -= offsetX || 0;\n      y -= offsetY || 0;\n      width = 0;\n      height = 0;\n      if (!isAutoUpdateEvent || canTrackCursorOnAutoUpdate) {\n        width = data.axis === 'y' ? domRect.width : 0;\n        height = data.axis === 'x' ? domRect.height : 0;\n        x = isXAxis && data.x != null ? data.x : x;\n        y = isYAxis && data.y != null ? data.y : y;\n      } else if (isAutoUpdateEvent && !canTrackCursorOnAutoUpdate) {\n        height = data.axis === 'x' ? domRect.height : height;\n        width = data.axis === 'y' ? domRect.width : width;\n      }\n      isAutoUpdateEvent = true;\n      return {\n        width,\n        height,\n        x,\n        y,\n        top: y,\n        right: x + width,\n        bottom: y + height,\n        left: x\n      };\n    }\n  };\n}\nfunction isMouseBasedEvent(event) {\n  return event != null && event.clientX != null;\n}\n/**\n * Positions the floating element relative to a client point (in the viewport),\n * such as the mouse position. By default, it follows the mouse cursor.\n * @see https://floating-ui.com/docs/useClientPoint\n */\nfunction useClientPoint(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    refs,\n    dataRef,\n    elements: {\n      floating\n    }\n  } = context;\n  const {\n    enabled = true,\n    axis = 'both',\n    x = null,\n    y = null\n  } = props;\n  const initialRef = React.useRef(false);\n  const cleanupListenerRef = React.useRef(null);\n  const [pointerType, setPointerType] = React.useState();\n  const [reactive, setReactive] = React.useState([]);\n  const setReference = useEffectEvent((x, y) => {\n    if (initialRef.current) return;\n\n    // Prevent setting if the open event was not a mouse-like one\n    // (e.g. focus to open, then hover over the reference element).\n    // Only apply if the event exists.\n    if (dataRef.current.openEvent && !isMouseBasedEvent(dataRef.current.openEvent)) {\n      return;\n    }\n    refs.setPositionReference(createVirtualElement(refs.domReference, {\n      x,\n      y,\n      axis,\n      dataRef,\n      pointerType\n    }));\n  });\n  const handleReferenceEnterOrMove = useEffectEvent(event => {\n    if (x != null || y != null) return;\n    if (!open) {\n      setReference(event.clientX, event.clientY);\n    } else if (!cleanupListenerRef.current) {\n      // If there's no cleanup, there's no listener, but we want to ensure\n      // we add the listener if the cursor landed on the floating element and\n      // then back on the reference (i.e. it's interactive).\n      setReactive([]);\n    }\n  });\n\n  // If the pointer is a mouse-like pointer, we want to continue following the\n  // mouse even if the floating element is transitioning out. On touch\n  // devices, this is undesirable because the floating element will move to\n  // the dismissal touch point.\n  const openCheck = isMouseLikePointerType(pointerType) ? floating : open;\n  const addListener = React.useCallback(() => {\n    // Explicitly specified `x`/`y` coordinates shouldn't add a listener.\n    if (!openCheck || !enabled || x != null || y != null) return;\n    const win = getWindow(refs.floating.current);\n    function handleMouseMove(event) {\n      const target = getTarget(event);\n      if (!contains(refs.floating.current, target)) {\n        setReference(event.clientX, event.clientY);\n      } else {\n        win.removeEventListener('mousemove', handleMouseMove);\n        cleanupListenerRef.current = null;\n      }\n    }\n    if (!dataRef.current.openEvent || isMouseBasedEvent(dataRef.current.openEvent)) {\n      win.addEventListener('mousemove', handleMouseMove);\n      const cleanup = () => {\n        win.removeEventListener('mousemove', handleMouseMove);\n        cleanupListenerRef.current = null;\n      };\n      cleanupListenerRef.current = cleanup;\n      return cleanup;\n    }\n    refs.setPositionReference(refs.domReference.current);\n  }, [dataRef, enabled, openCheck, refs, setReference, x, y]);\n  React.useEffect(() => {\n    return addListener();\n  }, [addListener, reactive]);\n  React.useEffect(() => {\n    if (enabled && !floating) {\n      initialRef.current = false;\n    }\n  }, [enabled, floating]);\n  React.useEffect(() => {\n    if (!enabled && open) {\n      initialRef.current = true;\n    }\n  }, [enabled, open]);\n  index(() => {\n    if (enabled && (x != null || y != null)) {\n      initialRef.current = false;\n      setReference(x, y);\n    }\n  }, [enabled, x, y, setReference]);\n  return React.useMemo(() => {\n    if (!enabled) return {};\n    function setPointerTypeRef(_ref) {\n      let {\n        pointerType\n      } = _ref;\n      setPointerType(pointerType);\n    }\n    return {\n      reference: {\n        onPointerDown: setPointerTypeRef,\n        onPointerEnter: setPointerTypeRef,\n        onMouseMove: handleReferenceEnterOrMove,\n        onMouseEnter: handleReferenceEnterOrMove\n      }\n    };\n  }, [enabled, handleReferenceEnterOrMove]);\n}\n\nconst bubbleHandlerKeys = {\n  pointerdown: 'onPointerDown',\n  mousedown: 'onMouseDown',\n  click: 'onClick'\n};\nconst captureHandlerKeys = {\n  pointerdown: 'onPointerDownCapture',\n  mousedown: 'onMouseDownCapture',\n  click: 'onClickCapture'\n};\nconst normalizeBubblesProp = bubbles => {\n  var _bubbles$escapeKey, _bubbles$outsidePress;\n  return {\n    escapeKeyBubbles: typeof bubbles === 'boolean' ? bubbles : (_bubbles$escapeKey = bubbles == null ? void 0 : bubbles.escapeKey) != null ? _bubbles$escapeKey : false,\n    outsidePressBubbles: typeof bubbles === 'boolean' ? bubbles : (_bubbles$outsidePress = bubbles == null ? void 0 : bubbles.outsidePress) != null ? _bubbles$outsidePress : true\n  };\n};\n/**\n * Closes the floating element when a dismissal is requested — by default, when\n * the user presses the `escape` key or outside of the floating element.\n * @see https://floating-ui.com/docs/useDismiss\n */\nfunction useDismiss(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    events,\n    nodeId,\n    elements: {\n      reference,\n      domReference,\n      floating\n    },\n    dataRef\n  } = context;\n  const {\n    enabled = true,\n    escapeKey = true,\n    outsidePress: unstable_outsidePress = true,\n    outsidePressEvent = 'pointerdown',\n    referencePress = false,\n    referencePressEvent = 'pointerdown',\n    ancestorScroll = false,\n    bubbles\n  } = props;\n  const tree = useFloatingTree();\n  const nested = useFloatingParentNodeId() != null;\n  const outsidePressFn = useEffectEvent(typeof unstable_outsidePress === 'function' ? unstable_outsidePress : () => false);\n  const outsidePress = typeof unstable_outsidePress === 'function' ? outsidePressFn : unstable_outsidePress;\n  const insideReactTreeRef = React.useRef(false);\n  const {\n    escapeKeyBubbles,\n    outsidePressBubbles\n  } = normalizeBubblesProp(bubbles);\n  const closeOnEscapeKeyDown = useEffectEvent(event => {\n    if (!open || !enabled || !escapeKey || event.key !== 'Escape') {\n      return;\n    }\n    const children = tree ? getChildren(tree.nodesRef.current, nodeId) : [];\n    if (!escapeKeyBubbles) {\n      event.stopPropagation();\n      if (children.length > 0) {\n        let shouldDismiss = true;\n        children.forEach(child => {\n          var _child$context;\n          if ((_child$context = child.context) != null && _child$context.open && !child.context.dataRef.current.__escapeKeyBubbles) {\n            shouldDismiss = false;\n            return;\n          }\n        });\n        if (!shouldDismiss) {\n          return;\n        }\n      }\n    }\n    events.emit('dismiss', {\n      type: 'escapeKey',\n      data: {\n        returnFocus: {\n          preventScroll: false\n        }\n      }\n    });\n    onOpenChange(false, isReactEvent(event) ? event.nativeEvent : event);\n  });\n  const closeOnPressOutside = useEffectEvent(event => {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = insideReactTreeRef.current;\n    insideReactTreeRef.current = false;\n    if (insideReactTree) {\n      return;\n    }\n    if (typeof outsidePress === 'function' && !outsidePress(event)) {\n      return;\n    }\n    const target = getTarget(event);\n    const inertSelector = \"[\" + createAttribute('inert') + \"]\";\n    const markers = getDocument(floating).querySelectorAll(inertSelector);\n    let targetRootAncestor = isElement(target) ? target : null;\n    while (targetRootAncestor && !isLastTraversableNode(targetRootAncestor)) {\n      const nextParent = getParentNode(targetRootAncestor);\n      if (nextParent === getDocument(floating).body || !isElement(nextParent)) {\n        break;\n      } else {\n        targetRootAncestor = nextParent;\n      }\n    }\n\n    // Check if the click occurred on a third-party element injected after the\n    // floating element rendered.\n    if (markers.length && isElement(target) && !isRootElement(target) &&\n    // Clicked on a direct ancestor (e.g. FloatingOverlay).\n    !contains(target, floating) &&\n    // If the target root element contains none of the markers, then the\n    // element was injected after the floating element rendered.\n    Array.from(markers).every(marker => !contains(targetRootAncestor, marker))) {\n      return;\n    }\n\n    // Check if the click occurred on the scrollbar\n    if (isHTMLElement(target) && floating) {\n      // In Firefox, `target.scrollWidth > target.clientWidth` for inline\n      // elements.\n      const canScrollX = target.clientWidth > 0 && target.scrollWidth > target.clientWidth;\n      const canScrollY = target.clientHeight > 0 && target.scrollHeight > target.clientHeight;\n      let xCond = canScrollY && event.offsetX > target.clientWidth;\n\n      // In some browsers it is possible to change the <body> (or window)\n      // scrollbar to the left side, but is very rare and is difficult to\n      // check for. Plus, for modal dialogs with backdrops, it is more\n      // important that the backdrop is checked but not so much the window.\n      if (canScrollY) {\n        const isRTL = getComputedStyle(target).direction === 'rtl';\n        if (isRTL) {\n          xCond = event.offsetX <= target.offsetWidth - target.clientWidth;\n        }\n      }\n      if (xCond || canScrollX && event.offsetY > target.clientHeight) {\n        return;\n      }\n    }\n    const targetIsInsideChildren = tree && getChildren(tree.nodesRef.current, nodeId).some(node => {\n      var _node$context;\n      return isEventTargetWithin(event, (_node$context = node.context) == null ? void 0 : _node$context.elements.floating);\n    });\n    if (isEventTargetWithin(event, floating) || isEventTargetWithin(event, domReference) || targetIsInsideChildren) {\n      return;\n    }\n    const children = tree ? getChildren(tree.nodesRef.current, nodeId) : [];\n    if (children.length > 0) {\n      let shouldDismiss = true;\n      children.forEach(child => {\n        var _child$context2;\n        if ((_child$context2 = child.context) != null && _child$context2.open && !child.context.dataRef.current.__outsidePressBubbles) {\n          shouldDismiss = false;\n          return;\n        }\n      });\n      if (!shouldDismiss) {\n        return;\n      }\n    }\n    events.emit('dismiss', {\n      type: 'outsidePress',\n      data: {\n        returnFocus: nested ? {\n          preventScroll: true\n        } : isVirtualClick(event) || isVirtualPointerEvent(event)\n      }\n    });\n    onOpenChange(false, event);\n  });\n  React.useEffect(() => {\n    if (!open || !enabled) {\n      return;\n    }\n    dataRef.current.__escapeKeyBubbles = escapeKeyBubbles;\n    dataRef.current.__outsidePressBubbles = outsidePressBubbles;\n    function onScroll(event) {\n      onOpenChange(false, event);\n    }\n    const doc = getDocument(floating);\n    escapeKey && doc.addEventListener('keydown', closeOnEscapeKeyDown);\n    outsidePress && doc.addEventListener(outsidePressEvent, closeOnPressOutside);\n    let ancestors = [];\n    if (ancestorScroll) {\n      if (isElement(domReference)) {\n        ancestors = getOverflowAncestors(domReference);\n      }\n      if (isElement(floating)) {\n        ancestors = ancestors.concat(getOverflowAncestors(floating));\n      }\n      if (!isElement(reference) && reference && reference.contextElement) {\n        ancestors = ancestors.concat(getOverflowAncestors(reference.contextElement));\n      }\n    }\n\n    // Ignore the visual viewport for scrolling dismissal (allow pinch-zoom)\n    ancestors = ancestors.filter(ancestor => {\n      var _doc$defaultView;\n      return ancestor !== ((_doc$defaultView = doc.defaultView) == null ? void 0 : _doc$defaultView.visualViewport);\n    });\n    ancestors.forEach(ancestor => {\n      ancestor.addEventListener('scroll', onScroll, {\n        passive: true\n      });\n    });\n    return () => {\n      escapeKey && doc.removeEventListener('keydown', closeOnEscapeKeyDown);\n      outsidePress && doc.removeEventListener(outsidePressEvent, closeOnPressOutside);\n      ancestors.forEach(ancestor => {\n        ancestor.removeEventListener('scroll', onScroll);\n      });\n    };\n  }, [dataRef, floating, domReference, reference, escapeKey, outsidePress, outsidePressEvent, open, onOpenChange, ancestorScroll, enabled, escapeKeyBubbles, outsidePressBubbles, closeOnEscapeKeyDown, closeOnPressOutside]);\n  React.useEffect(() => {\n    insideReactTreeRef.current = false;\n  }, [outsidePress, outsidePressEvent]);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    return {\n      reference: {\n        onKeyDown: closeOnEscapeKeyDown,\n        [bubbleHandlerKeys[referencePressEvent]]: event => {\n          if (referencePress) {\n            events.emit('dismiss', {\n              type: 'referencePress',\n              data: {\n                returnFocus: false\n              }\n            });\n            onOpenChange(false, event.nativeEvent);\n          }\n        }\n      },\n      floating: {\n        onKeyDown: closeOnEscapeKeyDown,\n        [captureHandlerKeys[outsidePressEvent]]: () => {\n          insideReactTreeRef.current = true;\n        }\n      }\n    };\n  }, [enabled, events, referencePress, outsidePressEvent, referencePressEvent, onOpenChange, closeOnEscapeKeyDown]);\n}\n\nlet devMessageSet;\nif (process.env.NODE_ENV !== \"production\") {\n  devMessageSet = /*#__PURE__*/new Set();\n}\n\n/**\n * Provides data to position a floating element and context to add interactions.\n * @see https://floating-ui.com/docs/react\n */\nfunction useFloating(options) {\n  var _options$elements2;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    open = false,\n    onOpenChange: unstable_onOpenChange,\n    nodeId\n  } = options;\n  if (process.env.NODE_ENV !== \"production\") {\n    var _options$elements;\n    const err = 'Floating UI: Cannot pass a virtual element to the ' + '`elements.reference` option, as it must be a real DOM element. ' + 'Use `refs.setPositionReference` instead.';\n    if ((_options$elements = options.elements) != null && _options$elements.reference && !isElement(options.elements.reference)) {\n      var _devMessageSet;\n      if (!((_devMessageSet = devMessageSet) != null && _devMessageSet.has(err))) {\n        var _devMessageSet2;\n        (_devMessageSet2 = devMessageSet) == null ? void 0 : _devMessageSet2.add(err);\n        console.error(err);\n      }\n    }\n  }\n  const [_domReference, setDomReference] = React.useState(null);\n  const domReference = ((_options$elements2 = options.elements) == null ? void 0 : _options$elements2.reference) || _domReference;\n  const position = useFloating$1(options);\n  const tree = useFloatingTree();\n  const onOpenChange = useEffectEvent((open, event) => {\n    if (open) {\n      dataRef.current.openEvent = event;\n    }\n    unstable_onOpenChange == null ? void 0 : unstable_onOpenChange(open, event);\n  });\n  const domReferenceRef = React.useRef(null);\n  const dataRef = React.useRef({});\n  const events = React.useState(() => createPubSub())[0];\n  const floatingId = useId();\n  const setPositionReference = React.useCallback(node => {\n    const positionReference = isElement(node) ? {\n      getBoundingClientRect: () => node.getBoundingClientRect(),\n      contextElement: node\n    } : node;\n    position.refs.setReference(positionReference);\n  }, [position.refs]);\n  const setReference = React.useCallback(node => {\n    if (isElement(node) || node === null) {\n      domReferenceRef.current = node;\n      setDomReference(node);\n    }\n\n    // Backwards-compatibility for passing a virtual element to `reference`\n    // after it has set the DOM reference.\n    if (isElement(position.refs.reference.current) || position.refs.reference.current === null ||\n    // Don't allow setting virtual elements using the old technique back to\n    // `null` to support `positionReference` + an unstable `reference`\n    // callback ref.\n    node !== null && !isElement(node)) {\n      position.refs.setReference(node);\n    }\n  }, [position.refs]);\n  const refs = React.useMemo(() => ({\n    ...position.refs,\n    setReference,\n    setPositionReference,\n    domReference: domReferenceRef\n  }), [position.refs, setReference, setPositionReference]);\n  const elements = React.useMemo(() => ({\n    ...position.elements,\n    domReference: domReference\n  }), [position.elements, domReference]);\n  const context = React.useMemo(() => ({\n    ...position,\n    refs,\n    elements,\n    dataRef,\n    nodeId,\n    floatingId,\n    events,\n    open,\n    onOpenChange\n  }), [position, nodeId, floatingId, events, open, onOpenChange, refs, elements]);\n  index(() => {\n    const node = tree == null ? void 0 : tree.nodesRef.current.find(node => node.id === nodeId);\n    if (node) {\n      node.context = context;\n    }\n  });\n  return React.useMemo(() => ({\n    ...position,\n    context,\n    refs,\n    elements\n  }), [position, refs, elements, context]);\n}\n\n/**\n * Opens the floating element while the reference element has focus, like CSS\n * `:focus`.\n * @see https://floating-ui.com/docs/useFocus\n */\nfunction useFocus(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    onOpenChange,\n    dataRef,\n    events,\n    refs,\n    elements: {\n      floating,\n      domReference\n    }\n  } = context;\n  const {\n    enabled = true,\n    keyboardOnly = true\n  } = props;\n  const pointerTypeRef = React.useRef('');\n  const blockFocusRef = React.useRef(false);\n  const timeoutRef = React.useRef();\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    const doc = getDocument(floating);\n    const win = doc.defaultView || window;\n\n    // If the reference was focused and the user left the tab/window, and the\n    // floating element was not open, the focus should be blocked when they\n    // return to the tab/window.\n    function onBlur() {\n      if (!open && isHTMLElement(domReference) && domReference === activeElement(getDocument(domReference))) {\n        blockFocusRef.current = true;\n      }\n    }\n    win.addEventListener('blur', onBlur);\n    return () => {\n      win.removeEventListener('blur', onBlur);\n    };\n  }, [floating, domReference, open, enabled]);\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    function onDismiss(payload) {\n      if (payload.type === 'referencePress' || payload.type === 'escapeKey') {\n        blockFocusRef.current = true;\n      }\n    }\n    events.on('dismiss', onDismiss);\n    return () => {\n      events.off('dismiss', onDismiss);\n    };\n  }, [events, enabled]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timeoutRef.current);\n    };\n  }, []);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    return {\n      reference: {\n        onPointerDown(_ref) {\n          let {\n            pointerType\n          } = _ref;\n          pointerTypeRef.current = pointerType;\n          blockFocusRef.current = !!(pointerType && keyboardOnly);\n        },\n        onMouseLeave() {\n          blockFocusRef.current = false;\n        },\n        onFocus(event) {\n          var _dataRef$current$open;\n          if (blockFocusRef.current) {\n            return;\n          }\n\n          // Dismiss with click should ignore the subsequent `focus` trigger,\n          // but only if the click originated inside the reference element.\n          if (event.type === 'focus' && ((_dataRef$current$open = dataRef.current.openEvent) == null ? void 0 : _dataRef$current$open.type) === 'mousedown' && isEventTargetWithin(dataRef.current.openEvent, domReference)) {\n            return;\n          }\n          onOpenChange(true, event.nativeEvent);\n        },\n        onBlur(event) {\n          blockFocusRef.current = false;\n          const relatedTarget = event.relatedTarget;\n\n          // Hit the non-modal focus management portal guard. Focus will be\n          // moved into the floating element immediately after.\n          const movedToFocusGuard = isElement(relatedTarget) && relatedTarget.hasAttribute(createAttribute('focus-guard')) && relatedTarget.getAttribute('data-type') === 'outside';\n\n          // Wait for the window blur listener to fire.\n          timeoutRef.current = setTimeout(() => {\n            // When focusing the reference element (e.g. regular click), then\n            // clicking into the floating element, prevent it from hiding.\n            // Note: it must be focusable, e.g. `tabindex=\"-1\"`.\n            if (contains(refs.floating.current, relatedTarget) || contains(domReference, relatedTarget) || movedToFocusGuard) {\n              return;\n            }\n            onOpenChange(false, event.nativeEvent);\n          });\n        }\n      }\n    };\n  }, [enabled, keyboardOnly, domReference, refs, dataRef, onOpenChange]);\n}\n\nfunction mergeProps(userProps, propsList, elementKey) {\n  const map = new Map();\n  return {\n    ...(elementKey === 'floating' && {\n      tabIndex: -1\n    }),\n    ...userProps,\n    ...propsList.map(value => value ? value[elementKey] : null).concat(userProps).reduce((acc, props) => {\n      if (!props) {\n        return acc;\n      }\n      Object.entries(props).forEach(_ref => {\n        let [key, value] = _ref;\n        if (key.indexOf('on') === 0) {\n          if (!map.has(key)) {\n            map.set(key, []);\n          }\n          if (typeof value === 'function') {\n            var _map$get;\n            (_map$get = map.get(key)) == null ? void 0 : _map$get.push(value);\n            acc[key] = function () {\n              var _map$get2;\n              for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n              }\n              return (_map$get2 = map.get(key)) == null ? void 0 : _map$get2.map(fn => fn(...args)).find(val => val !== undefined);\n            };\n          }\n        } else {\n          acc[key] = value;\n        }\n      });\n      return acc;\n    }, {})\n  };\n}\n\n/**\n * Merges an array of interaction hooks' props into prop getters, allowing\n * event handler functions to be composed together without overwriting one\n * another.\n * @see https://floating-ui.com/docs/react#interaction-hooks\n */\nfunction useInteractions(propsList) {\n  if (propsList === void 0) {\n    propsList = [];\n  }\n  // The dependencies are a dynamic array, so we can't use the linter's\n  // suggestion to add it to the deps array.\n  const deps = propsList;\n  const getReferenceProps = React.useCallback(userProps => mergeProps(userProps, propsList, 'reference'),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  deps);\n  const getFloatingProps = React.useCallback(userProps => mergeProps(userProps, propsList, 'floating'),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  deps);\n  const getItemProps = React.useCallback(userProps => mergeProps(userProps, propsList, 'item'),\n  // Granularly check for `item` changes, because the `getItemProps` getter\n  // should be as referentially stable as possible since it may be passed as\n  // a prop to many components. All `item` key values must therefore be\n  // memoized.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  propsList.map(key => key == null ? void 0 : key.item));\n  return React.useMemo(() => ({\n    getReferenceProps,\n    getFloatingProps,\n    getItemProps\n  }), [getReferenceProps, getFloatingProps, getItemProps]);\n}\n\nlet isPreventScrollSupported = false;\nfunction doSwitch(orientation, vertical, horizontal) {\n  switch (orientation) {\n    case 'vertical':\n      return vertical;\n    case 'horizontal':\n      return horizontal;\n    default:\n      return vertical || horizontal;\n  }\n}\nfunction isMainOrientationKey(key, orientation) {\n  const vertical = key === ARROW_UP || key === ARROW_DOWN;\n  const horizontal = key === ARROW_LEFT || key === ARROW_RIGHT;\n  return doSwitch(orientation, vertical, horizontal);\n}\nfunction isMainOrientationToEndKey(key, orientation, rtl) {\n  const vertical = key === ARROW_DOWN;\n  const horizontal = rtl ? key === ARROW_LEFT : key === ARROW_RIGHT;\n  return doSwitch(orientation, vertical, horizontal) || key === 'Enter' || key == ' ' || key === '';\n}\nfunction isCrossOrientationOpenKey(key, orientation, rtl) {\n  const vertical = rtl ? key === ARROW_LEFT : key === ARROW_RIGHT;\n  const horizontal = key === ARROW_DOWN;\n  return doSwitch(orientation, vertical, horizontal);\n}\nfunction isCrossOrientationCloseKey(key, orientation, rtl) {\n  const vertical = rtl ? key === ARROW_RIGHT : key === ARROW_LEFT;\n  const horizontal = key === ARROW_UP;\n  return doSwitch(orientation, vertical, horizontal);\n}\n/**\n * Adds arrow key-based navigation of a list of items, either using real DOM\n * focus or virtual focus.\n * @see https://floating-ui.com/docs/useListNavigation\n */\nfunction useListNavigation(context, props) {\n  const {\n    open,\n    onOpenChange,\n    refs,\n    elements: {\n      domReference,\n      floating\n    }\n  } = context;\n  const {\n    listRef,\n    activeIndex,\n    onNavigate: unstable_onNavigate = () => {},\n    enabled = true,\n    selectedIndex = null,\n    allowEscape = false,\n    loop = false,\n    nested = false,\n    rtl = false,\n    virtual = false,\n    focusItemOnOpen = 'auto',\n    focusItemOnHover = true,\n    openOnArrowKeyDown = true,\n    disabledIndices = undefined,\n    orientation = 'vertical',\n    cols = 1,\n    scrollItemIntoView = true,\n    virtualItemRef\n  } = props;\n  if (process.env.NODE_ENV !== \"production\") {\n    if (allowEscape) {\n      if (!loop) {\n        console.warn(['Floating UI: `useListNavigation` looping must be enabled to allow', 'escaping.'].join(' '));\n      }\n      if (!virtual) {\n        console.warn(['Floating UI: `useListNavigation` must be virtual to allow', 'escaping.'].join(' '));\n      }\n    }\n    if (orientation === 'vertical' && cols > 1) {\n      console.warn(['Floating UI: In grid list navigation mode (`cols` > 1), the', '`orientation` should be either \"horizontal\" or \"both\".'].join(' '));\n    }\n  }\n  const parentId = useFloatingParentNodeId();\n  const tree = useFloatingTree();\n  const onNavigate = useEffectEvent(unstable_onNavigate);\n  const focusItemOnOpenRef = React.useRef(focusItemOnOpen);\n  const indexRef = React.useRef(selectedIndex != null ? selectedIndex : -1);\n  const keyRef = React.useRef(null);\n  const isPointerModalityRef = React.useRef(true);\n  const previousOnNavigateRef = React.useRef(onNavigate);\n  const previousMountedRef = React.useRef(!!floating);\n  const forceSyncFocus = React.useRef(false);\n  const forceScrollIntoViewRef = React.useRef(false);\n  const disabledIndicesRef = useLatestRef(disabledIndices);\n  const latestOpenRef = useLatestRef(open);\n  const scrollItemIntoViewRef = useLatestRef(scrollItemIntoView);\n  const [activeId, setActiveId] = React.useState();\n  const [virtualId, setVirtualId] = React.useState();\n  const focusItem = useEffectEvent(function (listRef, indexRef, forceScrollIntoView) {\n    if (forceScrollIntoView === void 0) {\n      forceScrollIntoView = false;\n    }\n    const item = listRef.current[indexRef.current];\n    if (!item) return;\n    if (virtual) {\n      setActiveId(item.id);\n      tree == null ? void 0 : tree.events.emit('virtualfocus', item);\n      if (virtualItemRef) {\n        virtualItemRef.current = item;\n      }\n    } else {\n      enqueueFocus(item, {\n        preventScroll: true,\n        // Mac Safari does not move the virtual cursor unless the focus call\n        // is sync. However, for the very first focus call, we need to wait\n        // for the position to be ready in order to prevent unwanted\n        // scrolling. This means the virtual cursor will not move to the first\n        // item when first opening the floating element, but will on\n        // subsequent calls. `preventScroll` is supported in modern Safari,\n        // so we can use that instead.\n        // iOS Safari must be async or the first item will not be focused.\n        sync: isMac() && isSafari() ? isPreventScrollSupported || forceSyncFocus.current : false\n      });\n    }\n    requestAnimationFrame(() => {\n      const scrollIntoViewOptions = scrollItemIntoViewRef.current;\n      const shouldScrollIntoView = scrollIntoViewOptions && item && (forceScrollIntoView || !isPointerModalityRef.current);\n      if (shouldScrollIntoView) {\n        // JSDOM doesn't support `.scrollIntoView()` but it's widely supported\n        // by all browsers.\n        item.scrollIntoView == null ? void 0 : item.scrollIntoView(typeof scrollIntoViewOptions === 'boolean' ? {\n          block: 'nearest',\n          inline: 'nearest'\n        } : scrollIntoViewOptions);\n      }\n    });\n  });\n  index(() => {\n    document.createElement('div').focus({\n      get preventScroll() {\n        isPreventScrollSupported = true;\n        return false;\n      }\n    });\n  }, []);\n\n  // Sync `selectedIndex` to be the `activeIndex` upon opening the floating\n  // element. Also, reset `activeIndex` upon closing the floating element.\n  index(() => {\n    if (!enabled) {\n      return;\n    }\n    if (open && floating) {\n      if (focusItemOnOpenRef.current && selectedIndex != null) {\n        // Regardless of the pointer modality, we want to ensure the selected\n        // item comes into view when the floating element is opened.\n        forceScrollIntoViewRef.current = true;\n        onNavigate(selectedIndex);\n      }\n    } else if (previousMountedRef.current) {\n      // Since the user can specify `onNavigate` conditionally\n      // (onNavigate: open ? setActiveIndex : setSelectedIndex),\n      // we store and call the previous function.\n      indexRef.current = -1;\n      previousOnNavigateRef.current(null);\n    }\n  }, [enabled, open, floating, selectedIndex, onNavigate]);\n\n  // Sync `activeIndex` to be the focused item while the floating element is\n  // open.\n  index(() => {\n    if (!enabled) {\n      return;\n    }\n    if (open && floating) {\n      if (activeIndex == null) {\n        forceSyncFocus.current = false;\n        if (selectedIndex != null) {\n          return;\n        }\n\n        // Reset while the floating element was open (e.g. the list changed).\n        if (previousMountedRef.current) {\n          indexRef.current = -1;\n          focusItem(listRef, indexRef);\n        }\n\n        // Initial sync.\n        if (!previousMountedRef.current && focusItemOnOpenRef.current && (keyRef.current != null || focusItemOnOpenRef.current === true && keyRef.current == null)) {\n          let runs = 0;\n          const waitForListPopulated = () => {\n            if (listRef.current[0] == null) {\n              // Avoid letting the browser paint if possible on the first try,\n              // otherwise use rAF. Don't try more than twice, since something\n              // is wrong otherwise.\n              if (runs < 2) {\n                const scheduler = runs ? requestAnimationFrame : queueMicrotask;\n                scheduler(waitForListPopulated);\n              }\n              runs++;\n            } else {\n              indexRef.current = keyRef.current == null || isMainOrientationToEndKey(keyRef.current, orientation, rtl) || nested ? getMinIndex(listRef, disabledIndicesRef.current) : getMaxIndex(listRef, disabledIndicesRef.current);\n              keyRef.current = null;\n              onNavigate(indexRef.current);\n            }\n          };\n          waitForListPopulated();\n        }\n      } else if (!isIndexOutOfBounds(listRef, activeIndex)) {\n        indexRef.current = activeIndex;\n        focusItem(listRef, indexRef, forceScrollIntoViewRef.current);\n        forceScrollIntoViewRef.current = false;\n      }\n    }\n  }, [enabled, open, floating, activeIndex, selectedIndex, nested, listRef, orientation, rtl, onNavigate, focusItem, disabledIndicesRef]);\n\n  // Ensure the parent floating element has focus when a nested child closes\n  // to allow arrow key navigation to work after the pointer leaves the child.\n  index(() => {\n    var _nodes$find, _nodes$find$context;\n    if (!enabled || floating || !tree || virtual || !previousMountedRef.current) {\n      return;\n    }\n    const nodes = tree.nodesRef.current;\n    const parent = (_nodes$find = nodes.find(node => node.id === parentId)) == null ? void 0 : (_nodes$find$context = _nodes$find.context) == null ? void 0 : _nodes$find$context.elements.floating;\n    const activeEl = activeElement(getDocument(floating));\n    const treeContainsActiveEl = nodes.some(node => node.context && contains(node.context.elements.floating, activeEl));\n    if (parent && !treeContainsActiveEl && isPointerModalityRef.current) {\n      parent.focus({\n        preventScroll: true\n      });\n    }\n  }, [enabled, floating, tree, parentId, virtual]);\n  index(() => {\n    if (!enabled || !tree || !virtual || parentId) return;\n    function handleVirtualFocus(item) {\n      setVirtualId(item.id);\n      if (virtualItemRef) {\n        virtualItemRef.current = item;\n      }\n    }\n    tree.events.on('virtualfocus', handleVirtualFocus);\n    return () => {\n      tree.events.off('virtualfocus', handleVirtualFocus);\n    };\n  }, [enabled, tree, virtual, parentId, virtualItemRef]);\n  index(() => {\n    previousOnNavigateRef.current = onNavigate;\n    previousMountedRef.current = !!floating;\n  });\n  index(() => {\n    if (!open) {\n      keyRef.current = null;\n    }\n  }, [open]);\n  const hasActiveIndex = activeIndex != null;\n  const item = React.useMemo(() => {\n    function syncCurrentTarget(currentTarget) {\n      if (!open) return;\n      const index = listRef.current.indexOf(currentTarget);\n      if (index !== -1) {\n        onNavigate(index);\n      }\n    }\n    const props = {\n      onFocus(_ref) {\n        let {\n          currentTarget\n        } = _ref;\n        syncCurrentTarget(currentTarget);\n      },\n      onClick: _ref2 => {\n        let {\n          currentTarget\n        } = _ref2;\n        return currentTarget.focus({\n          preventScroll: true\n        });\n      },\n      // Safari\n      ...(focusItemOnHover && {\n        onMouseMove(_ref3) {\n          let {\n            currentTarget\n          } = _ref3;\n          syncCurrentTarget(currentTarget);\n        },\n        onPointerLeave(_ref4) {\n          let {\n            pointerType\n          } = _ref4;\n          if (!isPointerModalityRef.current || pointerType === 'touch') {\n            return;\n          }\n          indexRef.current = -1;\n          focusItem(listRef, indexRef);\n          onNavigate(null);\n          if (!virtual) {\n            enqueueFocus(refs.floating.current, {\n              preventScroll: true\n            });\n          }\n        }\n      })\n    };\n    return props;\n  }, [open, refs, focusItem, focusItemOnHover, listRef, onNavigate, virtual]);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    const disabledIndices = disabledIndicesRef.current;\n    function onKeyDown(event) {\n      isPointerModalityRef.current = false;\n      forceSyncFocus.current = true;\n\n      // If the floating element is animating out, ignore navigation. Otherwise,\n      // the `activeIndex` gets set to 0 despite not being open so the next time\n      // the user ArrowDowns, the first item won't be focused.\n      if (!latestOpenRef.current && event.currentTarget === refs.floating.current) {\n        return;\n      }\n      if (nested && isCrossOrientationCloseKey(event.key, orientation, rtl)) {\n        stopEvent(event);\n        onOpenChange(false, event.nativeEvent);\n        if (isHTMLElement(domReference) && !virtual) {\n          domReference.focus();\n        }\n        return;\n      }\n      const currentIndex = indexRef.current;\n      const minIndex = getMinIndex(listRef, disabledIndices);\n      const maxIndex = getMaxIndex(listRef, disabledIndices);\n      if (event.key === 'Home') {\n        stopEvent(event);\n        indexRef.current = minIndex;\n        onNavigate(indexRef.current);\n      }\n      if (event.key === 'End') {\n        stopEvent(event);\n        indexRef.current = maxIndex;\n        onNavigate(indexRef.current);\n      }\n\n      // Grid navigation.\n      if (cols > 1) {\n        indexRef.current = getGridNavigatedIndex(listRef, {\n          event,\n          orientation,\n          loop,\n          cols,\n          disabledIndices,\n          minIndex,\n          maxIndex,\n          prevIndex: indexRef.current,\n          stopEvent: true\n        });\n        onNavigate(indexRef.current);\n        if (orientation === 'both') {\n          return;\n        }\n      }\n      if (isMainOrientationKey(event.key, orientation)) {\n        stopEvent(event);\n\n        // Reset the index if no item is focused.\n        if (open && !virtual && activeElement(event.currentTarget.ownerDocument) === event.currentTarget) {\n          indexRef.current = isMainOrientationToEndKey(event.key, orientation, rtl) ? minIndex : maxIndex;\n          onNavigate(indexRef.current);\n          return;\n        }\n        if (isMainOrientationToEndKey(event.key, orientation, rtl)) {\n          if (loop) {\n            indexRef.current = currentIndex >= maxIndex ? allowEscape && currentIndex !== listRef.current.length ? -1 : minIndex : findNonDisabledIndex(listRef, {\n              startingIndex: currentIndex,\n              disabledIndices\n            });\n          } else {\n            indexRef.current = Math.min(maxIndex, findNonDisabledIndex(listRef, {\n              startingIndex: currentIndex,\n              disabledIndices\n            }));\n          }\n        } else {\n          if (loop) {\n            indexRef.current = currentIndex <= minIndex ? allowEscape && currentIndex !== -1 ? listRef.current.length : maxIndex : findNonDisabledIndex(listRef, {\n              startingIndex: currentIndex,\n              decrement: true,\n              disabledIndices\n            });\n          } else {\n            indexRef.current = Math.max(minIndex, findNonDisabledIndex(listRef, {\n              startingIndex: currentIndex,\n              decrement: true,\n              disabledIndices\n            }));\n          }\n        }\n        if (isIndexOutOfBounds(listRef, indexRef.current)) {\n          onNavigate(null);\n        } else {\n          onNavigate(indexRef.current);\n        }\n      }\n    }\n    function checkVirtualMouse(event) {\n      if (focusItemOnOpen === 'auto' && isVirtualClick(event.nativeEvent)) {\n        focusItemOnOpenRef.current = true;\n      }\n    }\n    function checkVirtualPointer(event) {\n      // `pointerdown` fires first, reset the state then perform the checks.\n      focusItemOnOpenRef.current = focusItemOnOpen;\n      if (focusItemOnOpen === 'auto' && isVirtualPointerEvent(event.nativeEvent)) {\n        focusItemOnOpenRef.current = true;\n      }\n    }\n    const ariaActiveDescendantProp = virtual && open && hasActiveIndex && {\n      'aria-activedescendant': virtualId || activeId\n    };\n    const activeItem = listRef.current.find(item => (item == null ? void 0 : item.id) === activeId);\n    return {\n      reference: {\n        ...ariaActiveDescendantProp,\n        onKeyDown(event) {\n          isPointerModalityRef.current = false;\n          const isArrowKey = event.key.indexOf('Arrow') === 0;\n          const isCrossOpenKey = isCrossOrientationOpenKey(event.key, orientation, rtl);\n          const isCrossCloseKey = isCrossOrientationCloseKey(event.key, orientation, rtl);\n          const isMainKey = isMainOrientationKey(event.key, orientation);\n          const isNavigationKey = (nested ? isCrossOpenKey : isMainKey) || event.key === 'Enter' || event.key.trim() === '';\n          if (virtual && open) {\n            const rootNode = tree == null ? void 0 : tree.nodesRef.current.find(node => node.parentId == null);\n            const deepestNode = tree && rootNode ? getDeepestNode(tree.nodesRef.current, rootNode.id) : null;\n            if (isArrowKey && deepestNode && virtualItemRef) {\n              const eventObject = new KeyboardEvent('keydown', {\n                key: event.key,\n                bubbles: true\n              });\n              if (isCrossOpenKey || isCrossCloseKey) {\n                var _deepestNode$context, _deepestNode$context2;\n                const isCurrentTarget = ((_deepestNode$context = deepestNode.context) == null ? void 0 : _deepestNode$context.elements.domReference) === event.currentTarget;\n                const dispatchItem = isCrossCloseKey && !isCurrentTarget ? (_deepestNode$context2 = deepestNode.context) == null ? void 0 : _deepestNode$context2.elements.domReference : isCrossOpenKey ? activeItem : null;\n                if (dispatchItem) {\n                  stopEvent(event);\n                  dispatchItem.dispatchEvent(eventObject);\n                  setVirtualId(undefined);\n                }\n              }\n              if (isMainKey && deepestNode.context) {\n                if (deepestNode.context.open && deepestNode.parentId && event.currentTarget !== deepestNode.context.elements.domReference) {\n                  var _deepestNode$context$;\n                  stopEvent(event);\n                  (_deepestNode$context$ = deepestNode.context.elements.domReference) == null ? void 0 : _deepestNode$context$.dispatchEvent(eventObject);\n                  return;\n                }\n              }\n            }\n            return onKeyDown(event);\n          }\n\n          // If a floating element should not open on arrow key down, avoid\n          // setting `activeIndex` while it's closed.\n          if (!open && !openOnArrowKeyDown && isArrowKey) {\n            return;\n          }\n          if (isNavigationKey) {\n            keyRef.current = nested && isMainKey ? null : event.key;\n          }\n          if (nested) {\n            if (isCrossOpenKey) {\n              stopEvent(event);\n              if (open) {\n                indexRef.current = getMinIndex(listRef, disabledIndices);\n                onNavigate(indexRef.current);\n              } else {\n                onOpenChange(true, event.nativeEvent);\n              }\n            }\n            return;\n          }\n          if (isMainKey) {\n            if (selectedIndex != null) {\n              indexRef.current = selectedIndex;\n            }\n            stopEvent(event);\n            if (!open && openOnArrowKeyDown) {\n              onOpenChange(true, event.nativeEvent);\n            } else {\n              onKeyDown(event);\n            }\n            if (open) {\n              onNavigate(indexRef.current);\n            }\n          }\n        },\n        onFocus() {\n          if (open) {\n            onNavigate(null);\n          }\n        },\n        onPointerDown: checkVirtualPointer,\n        onMouseDown: checkVirtualMouse,\n        onClick: checkVirtualMouse\n      },\n      floating: {\n        'aria-orientation': orientation === 'both' ? undefined : orientation,\n        ...ariaActiveDescendantProp,\n        onKeyDown,\n        onPointerMove() {\n          isPointerModalityRef.current = true;\n        }\n      },\n      item\n    };\n  }, [domReference, refs, activeId, virtualId, disabledIndicesRef, latestOpenRef, listRef, enabled, orientation, rtl, virtual, open, hasActiveIndex, nested, selectedIndex, openOnArrowKeyDown, allowEscape, cols, loop, focusItemOnOpen, onNavigate, onOpenChange, item, tree, virtualItemRef]);\n}\n\n/**\n * Adds base screen reader props to the reference and floating elements for a\n * given floating element `role`.\n * @see https://floating-ui.com/docs/useRole\n */\nfunction useRole(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    floatingId\n  } = context;\n  const {\n    enabled = true,\n    role = 'dialog'\n  } = props;\n  const referenceId = useId();\n  return React.useMemo(() => {\n    const floatingProps = {\n      id: floatingId,\n      role\n    };\n    if (!enabled) {\n      return {};\n    }\n    if (role === 'tooltip') {\n      return {\n        reference: {\n          'aria-describedby': open ? floatingId : undefined\n        },\n        floating: floatingProps\n      };\n    }\n    return {\n      reference: {\n        'aria-expanded': open ? 'true' : 'false',\n        'aria-haspopup': role === 'alertdialog' ? 'dialog' : role,\n        'aria-controls': open ? floatingId : undefined,\n        ...(role === 'listbox' && {\n          role: 'combobox'\n        }),\n        ...(role === 'menu' && {\n          id: referenceId\n        })\n      },\n      floating: {\n        ...floatingProps,\n        ...(role === 'menu' && {\n          'aria-labelledby': referenceId\n        })\n      }\n    };\n  }, [enabled, role, open, floatingId, referenceId]);\n}\n\n// Converts a JS style key like `backgroundColor` to a CSS transition-property\n// like `background-color`.\nconst camelCaseToKebabCase = str => str.replace(/[A-Z]+(?![a-z])|[A-Z]/g, ($, ofs) => (ofs ? '-' : '') + $.toLowerCase());\nfunction execWithArgsOrReturn(valueOrFn, args) {\n  return typeof valueOrFn === 'function' ? valueOrFn(args) : valueOrFn;\n}\nfunction useDelayUnmount(open, durationMs) {\n  const [isMounted, setIsMounted] = React.useState(open);\n  if (open && !isMounted) {\n    setIsMounted(true);\n  }\n  React.useEffect(() => {\n    if (!open) {\n      const timeout = setTimeout(() => setIsMounted(false), durationMs);\n      return () => clearTimeout(timeout);\n    }\n  }, [open, durationMs]);\n  return isMounted;\n}\n/**\n * Provides a status string to apply CSS transitions to a floating element,\n * correctly handling placement-aware transitions.\n * @see https://floating-ui.com/docs/useTransition#usetransitionstatus\n */\nfunction useTransitionStatus(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    open,\n    elements: {\n      floating\n    }\n  } = context;\n  const {\n    duration = 250\n  } = props;\n  const isNumberDuration = typeof duration === 'number';\n  const closeDuration = (isNumberDuration ? duration : duration.close) || 0;\n  const [initiated, setInitiated] = React.useState(false);\n  const [status, setStatus] = React.useState('unmounted');\n  const isMounted = useDelayUnmount(open, closeDuration);\n\n  // `initiated` check prevents this `setState` call from breaking\n  // <FloatingPortal />. This call is necessary to ensure subsequent opens\n  // after the initial one allows the correct side animation to play when the\n  // placement has changed.\n  index(() => {\n    if (initiated && !isMounted) {\n      setStatus('unmounted');\n    }\n  }, [initiated, isMounted]);\n  index(() => {\n    if (!floating) return;\n    if (open) {\n      setStatus('initial');\n      const frame = requestAnimationFrame(() => {\n        setStatus('open');\n      });\n      return () => {\n        cancelAnimationFrame(frame);\n      };\n    } else {\n      setInitiated(true);\n      setStatus('close');\n    }\n  }, [open, floating]);\n  return {\n    isMounted,\n    status\n  };\n}\n/**\n * Provides styles to apply CSS transitions to a floating element, correctly\n * handling placement-aware transitions. Wrapper around `useTransitionStatus`.\n * @see https://floating-ui.com/docs/useTransition#usetransitionstyles\n */\nfunction useTransitionStyles(context, props) {\n  if (props === void 0) {\n    props = {};\n  }\n  const {\n    initial: unstable_initial = {\n      opacity: 0\n    },\n    open: unstable_open,\n    close: unstable_close,\n    common: unstable_common,\n    duration = 250\n  } = props;\n  const placement = context.placement;\n  const side = placement.split('-')[0];\n  const fnArgs = React.useMemo(() => ({\n    side,\n    placement\n  }), [side, placement]);\n  const isNumberDuration = typeof duration === 'number';\n  const openDuration = (isNumberDuration ? duration : duration.open) || 0;\n  const closeDuration = (isNumberDuration ? duration : duration.close) || 0;\n  const [styles, setStyles] = React.useState(() => ({\n    ...execWithArgsOrReturn(unstable_common, fnArgs),\n    ...execWithArgsOrReturn(unstable_initial, fnArgs)\n  }));\n  const {\n    isMounted,\n    status\n  } = useTransitionStatus(context, {\n    duration\n  });\n  const initialRef = useLatestRef(unstable_initial);\n  const openRef = useLatestRef(unstable_open);\n  const closeRef = useLatestRef(unstable_close);\n  const commonRef = useLatestRef(unstable_common);\n  index(() => {\n    const initialStyles = execWithArgsOrReturn(initialRef.current, fnArgs);\n    const closeStyles = execWithArgsOrReturn(closeRef.current, fnArgs);\n    const commonStyles = execWithArgsOrReturn(commonRef.current, fnArgs);\n    const openStyles = execWithArgsOrReturn(openRef.current, fnArgs) || Object.keys(initialStyles).reduce((acc, key) => {\n      acc[key] = '';\n      return acc;\n    }, {});\n    if (status === 'initial') {\n      setStyles(styles => ({\n        transitionProperty: styles.transitionProperty,\n        ...commonStyles,\n        ...initialStyles\n      }));\n    }\n    if (status === 'open') {\n      setStyles({\n        transitionProperty: Object.keys(openStyles).map(camelCaseToKebabCase).join(','),\n        transitionDuration: openDuration + \"ms\",\n        ...commonStyles,\n        ...openStyles\n      });\n    }\n    if (status === 'close') {\n      const styles = closeStyles || initialStyles;\n      setStyles({\n        transitionProperty: Object.keys(styles).map(camelCaseToKebabCase).join(','),\n        transitionDuration: closeDuration + \"ms\",\n        ...commonStyles,\n        ...styles\n      });\n    }\n  }, [closeDuration, closeRef, initialRef, openRef, commonRef, openDuration, status, fnArgs]);\n  return {\n    isMounted,\n    styles\n  };\n}\n\n/**\n * Provides a matching callback that can be used to focus an item as the user\n * types, often used in tandem with `useListNavigation()`.\n * @see https://floating-ui.com/docs/useTypeahead\n */\nfunction useTypeahead(context, props) {\n  var _ref;\n  const {\n    open,\n    dataRef\n  } = context;\n  const {\n    listRef,\n    activeIndex,\n    onMatch: unstable_onMatch,\n    onTypingChange: unstable_onTypingChange,\n    enabled = true,\n    findMatch = null,\n    resetMs = 750,\n    ignoreKeys = [],\n    selectedIndex = null\n  } = props;\n  const timeoutIdRef = React.useRef();\n  const stringRef = React.useRef('');\n  const prevIndexRef = React.useRef((_ref = selectedIndex != null ? selectedIndex : activeIndex) != null ? _ref : -1);\n  const matchIndexRef = React.useRef(null);\n  const onMatch = useEffectEvent(unstable_onMatch);\n  const onTypingChange = useEffectEvent(unstable_onTypingChange);\n  const findMatchRef = useLatestRef(findMatch);\n  const ignoreKeysRef = useLatestRef(ignoreKeys);\n  index(() => {\n    if (open) {\n      clearTimeout(timeoutIdRef.current);\n      matchIndexRef.current = null;\n      stringRef.current = '';\n    }\n  }, [open]);\n  index(() => {\n    // Sync arrow key navigation but not typeahead navigation.\n    if (open && stringRef.current === '') {\n      var _ref2;\n      prevIndexRef.current = (_ref2 = selectedIndex != null ? selectedIndex : activeIndex) != null ? _ref2 : -1;\n    }\n  }, [open, selectedIndex, activeIndex]);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    function setTypingChange(value) {\n      if (value) {\n        if (!dataRef.current.typing) {\n          dataRef.current.typing = value;\n          onTypingChange(value);\n        }\n      } else {\n        if (dataRef.current.typing) {\n          dataRef.current.typing = value;\n          onTypingChange(value);\n        }\n      }\n    }\n    function getMatchingIndex(list, orderedList, string) {\n      const str = findMatchRef.current ? findMatchRef.current(orderedList, string) : orderedList.find(text => (text == null ? void 0 : text.toLocaleLowerCase().indexOf(string.toLocaleLowerCase())) === 0);\n      return str ? list.indexOf(str) : -1;\n    }\n    function onKeyDown(event) {\n      const listContent = listRef.current;\n      if (stringRef.current.length > 0 && stringRef.current[0] !== ' ') {\n        if (getMatchingIndex(listContent, listContent, stringRef.current) === -1) {\n          setTypingChange(false);\n        } else if (event.key === ' ') {\n          stopEvent(event);\n        }\n      }\n      if (listContent == null || ignoreKeysRef.current.includes(event.key) ||\n      // Character key.\n      event.key.length !== 1 ||\n      // Modifier key.\n      event.ctrlKey || event.metaKey || event.altKey) {\n        return;\n      }\n      if (open && event.key !== ' ') {\n        stopEvent(event);\n        setTypingChange(true);\n      }\n\n      // Bail out if the list contains a word like \"llama\" or \"aaron\". TODO:\n      // allow it in this case, too.\n      const allowRapidSuccessionOfFirstLetter = listContent.every(text => {\n        var _text$, _text$2;\n        return text ? ((_text$ = text[0]) == null ? void 0 : _text$.toLocaleLowerCase()) !== ((_text$2 = text[1]) == null ? void 0 : _text$2.toLocaleLowerCase()) : true;\n      });\n\n      // Allows the user to cycle through items that start with the same letter\n      // in rapid succession.\n      if (allowRapidSuccessionOfFirstLetter && stringRef.current === event.key) {\n        stringRef.current = '';\n        prevIndexRef.current = matchIndexRef.current;\n      }\n      stringRef.current += event.key;\n      clearTimeout(timeoutIdRef.current);\n      timeoutIdRef.current = setTimeout(() => {\n        stringRef.current = '';\n        prevIndexRef.current = matchIndexRef.current;\n        setTypingChange(false);\n      }, resetMs);\n      const prevIndex = prevIndexRef.current;\n      const index = getMatchingIndex(listContent, [...listContent.slice((prevIndex || 0) + 1), ...listContent.slice(0, (prevIndex || 0) + 1)], stringRef.current);\n      if (index !== -1) {\n        onMatch(index);\n        matchIndexRef.current = index;\n      } else if (event.key !== ' ') {\n        stringRef.current = '';\n        setTypingChange(false);\n      }\n    }\n    return {\n      reference: {\n        onKeyDown\n      },\n      floating: {\n        onKeyDown,\n        onKeyUp(event) {\n          if (event.key === ' ') {\n            setTypingChange(false);\n          }\n        }\n      }\n    };\n  }, [enabled, open, dataRef, listRef, resetMs, ignoreKeysRef, findMatchRef, onMatch, onTypingChange]);\n}\n\nfunction getArgsWithCustomFloatingHeight(state, height) {\n  return {\n    ...state,\n    rects: {\n      ...state.rects,\n      floating: {\n        ...state.rects.floating,\n        height\n      }\n    }\n  };\n}\n/**\n * Positions the floating element such that an inner element inside\n * of it is anchored to the reference element.\n * @see https://floating-ui.com/docs/inner\n */\nconst inner = props => ({\n  name: 'inner',\n  options: props,\n  async fn(state) {\n    const {\n      listRef,\n      overflowRef,\n      onFallbackChange,\n      offset: innerOffset = 0,\n      index = 0,\n      minItemsVisible = 4,\n      referenceOverflowThreshold = 0,\n      scrollRef,\n      ...detectOverflowOptions\n    } = props;\n    const {\n      rects,\n      elements: {\n        floating\n      }\n    } = state;\n    const item = listRef.current[index];\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!state.placement.startsWith('bottom')) {\n        console.warn(['Floating UI: `placement` side must be \"bottom\" when using the', '`inner` middleware.'].join(' '));\n      }\n    }\n    if (!item) {\n      return {};\n    }\n    const nextArgs = {\n      ...state,\n      ...(await offset(-item.offsetTop - floating.clientTop - rects.reference.height / 2 - item.offsetHeight / 2 - innerOffset).fn(state))\n    };\n    const el = (scrollRef == null ? void 0 : scrollRef.current) || floating;\n    const overflow = await detectOverflow(getArgsWithCustomFloatingHeight(nextArgs, el.scrollHeight), detectOverflowOptions);\n    const refOverflow = await detectOverflow(nextArgs, {\n      ...detectOverflowOptions,\n      elementContext: 'reference'\n    });\n    const diffY = Math.max(0, overflow.top);\n    const nextY = nextArgs.y + diffY;\n    const maxHeight = Math.max(0, el.scrollHeight - diffY - Math.max(0, overflow.bottom));\n    el.style.maxHeight = maxHeight + \"px\";\n    el.scrollTop = diffY;\n\n    // There is not enough space, fallback to standard anchored positioning\n    if (onFallbackChange) {\n      if (el.offsetHeight < item.offsetHeight * Math.min(minItemsVisible, listRef.current.length - 1) - 1 || refOverflow.top >= -referenceOverflowThreshold || refOverflow.bottom >= -referenceOverflowThreshold) {\n        flushSync(() => onFallbackChange(true));\n      } else {\n        flushSync(() => onFallbackChange(false));\n      }\n    }\n    if (overflowRef) {\n      overflowRef.current = await detectOverflow(getArgsWithCustomFloatingHeight({\n        ...nextArgs,\n        y: nextY\n      }, el.offsetHeight), detectOverflowOptions);\n    }\n    return {\n      y: nextY\n    };\n  }\n});\n/**\n * Changes the `inner` middleware's `offset` upon a `wheel` event to\n * expand the floating element's height, revealing more list items.\n * @see https://floating-ui.com/docs/inner\n */\nfunction useInnerOffset(context, props) {\n  const {\n    open,\n    elements\n  } = context;\n  const {\n    enabled = true,\n    overflowRef,\n    scrollRef,\n    onChange: unstable_onChange\n  } = props;\n  const onChange = useEffectEvent(unstable_onChange);\n  const controlledScrollingRef = React.useRef(false);\n  const prevScrollTopRef = React.useRef(null);\n  const initialOverflowRef = React.useRef(null);\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    function onWheel(e) {\n      if (e.ctrlKey || !el || overflowRef.current == null) {\n        return;\n      }\n      const dY = e.deltaY;\n      const isAtTop = overflowRef.current.top >= -0.5;\n      const isAtBottom = overflowRef.current.bottom >= -0.5;\n      const remainingScroll = el.scrollHeight - el.clientHeight;\n      const sign = dY < 0 ? -1 : 1;\n      const method = dY < 0 ? 'max' : 'min';\n      if (el.scrollHeight <= el.clientHeight) {\n        return;\n      }\n      if (!isAtTop && dY > 0 || !isAtBottom && dY < 0) {\n        e.preventDefault();\n        flushSync(() => {\n          onChange(d => d + Math[method](dY, remainingScroll * sign));\n        });\n      } else if (/firefox/i.test(getUserAgent())) {\n        // Needed to propagate scrolling during momentum scrolling phase once\n        // it gets limited by the boundary. UX improvement, not critical.\n        el.scrollTop += dY;\n      }\n    }\n    const el = (scrollRef == null ? void 0 : scrollRef.current) || elements.floating;\n    if (open && el) {\n      el.addEventListener('wheel', onWheel);\n\n      // Wait for the position to be ready.\n      requestAnimationFrame(() => {\n        prevScrollTopRef.current = el.scrollTop;\n        if (overflowRef.current != null) {\n          initialOverflowRef.current = {\n            ...overflowRef.current\n          };\n        }\n      });\n      return () => {\n        prevScrollTopRef.current = null;\n        initialOverflowRef.current = null;\n        el.removeEventListener('wheel', onWheel);\n      };\n    }\n  }, [enabled, open, elements.floating, overflowRef, scrollRef, onChange]);\n  return React.useMemo(() => {\n    if (!enabled) {\n      return {};\n    }\n    return {\n      floating: {\n        onKeyDown() {\n          controlledScrollingRef.current = true;\n        },\n        onWheel() {\n          controlledScrollingRef.current = false;\n        },\n        onPointerMove() {\n          controlledScrollingRef.current = false;\n        },\n        onScroll() {\n          const el = (scrollRef == null ? void 0 : scrollRef.current) || elements.floating;\n          if (!overflowRef.current || !el || !controlledScrollingRef.current) {\n            return;\n          }\n          if (prevScrollTopRef.current !== null) {\n            const scrollDiff = el.scrollTop - prevScrollTopRef.current;\n            if (overflowRef.current.bottom < -0.5 && scrollDiff < -1 || overflowRef.current.top < -0.5 && scrollDiff > 1) {\n              flushSync(() => onChange(d => d + scrollDiff));\n            }\n          }\n\n          // [Firefox] Wait for the height change to have been applied.\n          requestAnimationFrame(() => {\n            prevScrollTopRef.current = el.scrollTop;\n          });\n        }\n      }\n    };\n  }, [enabled, overflowRef, elements.floating, scrollRef, onChange]);\n}\n\nfunction isPointInPolygon(point, polygon) {\n  const [x, y] = point;\n  let isInside = false;\n  const length = polygon.length;\n  for (let i = 0, j = length - 1; i < length; j = i++) {\n    const [xi, yi] = polygon[i] || [0, 0];\n    const [xj, yj] = polygon[j] || [0, 0];\n    const intersect = yi >= y !== yj >= y && x <= (xj - xi) * (y - yi) / (yj - yi) + xi;\n    if (intersect) {\n      isInside = !isInside;\n    }\n  }\n  return isInside;\n}\nfunction isInside(point, rect) {\n  return point[0] >= rect.x && point[0] <= rect.x + rect.width && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n}\n/**\n * Generates a safe polygon area that the user can traverse without closing the\n * floating element once leaving the reference element.\n * @see https://floating-ui.com/docs/useHover#safePolygon\n */\nfunction safePolygon(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    buffer = 0.5,\n    blockPointerEvents = false,\n    requireIntent = true\n  } = options;\n  let timeoutId;\n  let hasLanded = false;\n  let lastX = null;\n  let lastY = null;\n  let lastCursorTime = performance.now();\n  function getCursorSpeed(x, y) {\n    const currentTime = performance.now();\n    const elapsedTime = currentTime - lastCursorTime;\n    if (lastX === null || lastY === null || elapsedTime === 0) {\n      lastX = x;\n      lastY = y;\n      lastCursorTime = currentTime;\n      return null;\n    }\n    const deltaX = x - lastX;\n    const deltaY = y - lastY;\n    const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const speed = distance / elapsedTime; // px / ms\n\n    lastX = x;\n    lastY = y;\n    lastCursorTime = currentTime;\n    return speed;\n  }\n  const fn = _ref => {\n    let {\n      x,\n      y,\n      placement,\n      elements,\n      onClose,\n      nodeId,\n      tree\n    } = _ref;\n    return function onMouseMove(event) {\n      function close() {\n        clearTimeout(timeoutId);\n        onClose();\n      }\n      clearTimeout(timeoutId);\n      if (!elements.domReference || !elements.floating || placement == null || x == null || y == null) {\n        return;\n      }\n      const {\n        clientX,\n        clientY\n      } = event;\n      const clientPoint = [clientX, clientY];\n      const target = getTarget(event);\n      const isLeave = event.type === 'mouseleave';\n      const isOverFloatingEl = contains(elements.floating, target);\n      const isOverReferenceEl = contains(elements.domReference, target);\n      const refRect = elements.domReference.getBoundingClientRect();\n      const rect = elements.floating.getBoundingClientRect();\n      const side = placement.split('-')[0];\n      const cursorLeaveFromRight = x > rect.right - rect.width / 2;\n      const cursorLeaveFromBottom = y > rect.bottom - rect.height / 2;\n      const isOverReferenceRect = isInside(clientPoint, refRect);\n      const isFloatingWider = rect.width > refRect.width;\n      const isFloatingTaller = rect.height > refRect.height;\n      const left = (isFloatingWider ? refRect : rect).left;\n      const right = (isFloatingWider ? refRect : rect).right;\n      const top = (isFloatingTaller ? refRect : rect).top;\n      const bottom = (isFloatingTaller ? refRect : rect).bottom;\n      if (isOverFloatingEl) {\n        hasLanded = true;\n        if (!isLeave) {\n          return;\n        }\n      }\n      if (isOverReferenceEl) {\n        hasLanded = false;\n      }\n      if (isOverReferenceEl && !isLeave) {\n        hasLanded = true;\n        return;\n      }\n\n      // Prevent overlapping floating element from being stuck in an open-close\n      // loop: https://github.com/floating-ui/floating-ui/issues/1910\n      if (isLeave && isElement(event.relatedTarget) && contains(elements.floating, event.relatedTarget)) {\n        return;\n      }\n\n      // If any nested child is open, abort.\n      if (tree && getChildren(tree.nodesRef.current, nodeId).some(_ref2 => {\n        let {\n          context\n        } = _ref2;\n        return context == null ? void 0 : context.open;\n      })) {\n        return;\n      }\n\n      // If the pointer is leaving from the opposite side, the \"buffer\" logic\n      // creates a point where the floating element remains open, but should be\n      // ignored.\n      // A constant of 1 handles floating point rounding errors.\n      if (side === 'top' && y >= refRect.bottom - 1 || side === 'bottom' && y <= refRect.top + 1 || side === 'left' && x >= refRect.right - 1 || side === 'right' && x <= refRect.left + 1) {\n        return close();\n      }\n\n      // Ignore when the cursor is within the rectangular trough between the\n      // two elements. Since the triangle is created from the cursor point,\n      // which can start beyond the ref element's edge, traversing back and\n      // forth from the ref to the floating element can cause it to close. This\n      // ensures it always remains open in that case.\n      let rectPoly = [];\n      switch (side) {\n        case 'top':\n          rectPoly = [[left, refRect.top + 1], [left, rect.bottom - 1], [right, rect.bottom - 1], [right, refRect.top + 1]];\n          break;\n        case 'bottom':\n          rectPoly = [[left, rect.top + 1], [left, refRect.bottom - 1], [right, refRect.bottom - 1], [right, rect.top + 1]];\n          break;\n        case 'left':\n          rectPoly = [[rect.right - 1, bottom], [rect.right - 1, top], [refRect.left + 1, top], [refRect.left + 1, bottom]];\n          break;\n        case 'right':\n          rectPoly = [[refRect.right - 1, bottom], [refRect.right - 1, top], [rect.left + 1, top], [rect.left + 1, bottom]];\n          break;\n      }\n      function getPolygon(_ref3) {\n        let [x, y] = _ref3;\n        switch (side) {\n          case 'top':\n            {\n              const cursorPointOne = [isFloatingWider ? x + buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y + buffer + 1];\n              const cursorPointTwo = [isFloatingWider ? x - buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y + buffer + 1];\n              const commonPoints = [[rect.left, cursorLeaveFromRight ? rect.bottom - buffer : isFloatingWider ? rect.bottom - buffer : rect.top], [rect.right, cursorLeaveFromRight ? isFloatingWider ? rect.bottom - buffer : rect.top : rect.bottom - buffer]];\n              return [cursorPointOne, cursorPointTwo, ...commonPoints];\n            }\n          case 'bottom':\n            {\n              const cursorPointOne = [isFloatingWider ? x + buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y - buffer];\n              const cursorPointTwo = [isFloatingWider ? x - buffer / 2 : cursorLeaveFromRight ? x + buffer * 4 : x - buffer * 4, y - buffer];\n              const commonPoints = [[rect.left, cursorLeaveFromRight ? rect.top + buffer : isFloatingWider ? rect.top + buffer : rect.bottom], [rect.right, cursorLeaveFromRight ? isFloatingWider ? rect.top + buffer : rect.bottom : rect.top + buffer]];\n              return [cursorPointOne, cursorPointTwo, ...commonPoints];\n            }\n          case 'left':\n            {\n              const cursorPointOne = [x + buffer + 1, isFloatingTaller ? y + buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];\n              const cursorPointTwo = [x + buffer + 1, isFloatingTaller ? y - buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];\n              const commonPoints = [[cursorLeaveFromBottom ? rect.right - buffer : isFloatingTaller ? rect.right - buffer : rect.left, rect.top], [cursorLeaveFromBottom ? isFloatingTaller ? rect.right - buffer : rect.left : rect.right - buffer, rect.bottom]];\n              return [...commonPoints, cursorPointOne, cursorPointTwo];\n            }\n          case 'right':\n            {\n              const cursorPointOne = [x - buffer, isFloatingTaller ? y + buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];\n              const cursorPointTwo = [x - buffer, isFloatingTaller ? y - buffer / 2 : cursorLeaveFromBottom ? y + buffer * 4 : y - buffer * 4];\n              const commonPoints = [[cursorLeaveFromBottom ? rect.left + buffer : isFloatingTaller ? rect.left + buffer : rect.right, rect.top], [cursorLeaveFromBottom ? isFloatingTaller ? rect.left + buffer : rect.right : rect.left + buffer, rect.bottom]];\n              return [cursorPointOne, cursorPointTwo, ...commonPoints];\n            }\n        }\n      }\n      if (isPointInPolygon([clientX, clientY], rectPoly)) {\n        return;\n      } else if (hasLanded && !isOverReferenceRect) {\n        return close();\n      }\n      if (!isLeave && requireIntent) {\n        const cursorSpeed = getCursorSpeed(event.clientX, event.clientY);\n        const cursorSpeedThreshold = 0.1;\n        if (cursorSpeed !== null && cursorSpeed < cursorSpeedThreshold) {\n          return close();\n        }\n      }\n      if (!isPointInPolygon([clientX, clientY], getPolygon([x, y]))) {\n        close();\n      } else if (!hasLanded && requireIntent) {\n        timeoutId = window.setTimeout(close, 40);\n      }\n    };\n  };\n  fn.__options = {\n    blockPointerEvents\n  };\n  return fn;\n}\n\nexport { Composite, CompositeItem, FloatingArrow, FloatingDelayGroup, FloatingFocusManager, FloatingList, FloatingNode, FloatingOverlay, FloatingPortal, FloatingTree, inner, safePolygon, useClick, useClientPoint, useDelayGroup, useDelayGroupContext, useDismiss, useFloating, useFloatingNodeId, useFloatingParentNodeId, useFloatingPortalNode, useFloatingTree, useFocus, useHover, useId, useInnerOffset, useInteractions, useListItem, useListNavigation, useMergeRefs, useRole, useTransitionStatus, useTransitionStyles, useTypeahead };\n","import { TriggerProps } from \"./interface\"\nimport {\n  applyAnimation,\n  applyDefaultContentSize,\n  applyHorizontalContainer,\n  applyMotionDiv,\n  applyTipsText,\n  applyTriangleStyle,\n  applyVerticalContainer,\n} from \"./style\"\nimport {\n  TriangleBottom,\n  TriangleLeft,\n  TriangleRight,\n  TriangleTop,\n} from \"./triangle\"\nimport { TriggerProviderContext } from \"./trigger-context\"\nimport { css } from \"@emotion/react\"\nimport {\n  autoUpdate,\n  computePosition,\n  flip,\n  FloatingPortal,\n  hide,\n  Middleware,\n  offset,\n  safePolygon,\n  size,\n  useClick,\n  useDismiss,\n  useFloating,\n  useFocus,\n  useHover,\n  useInteractions,\n  useMergeRefs,\n  useRole,\n} from \"@floating-ui/react\"\nimport { applyBoxStyle } from \"@illa-design/theme\"\nimport { AnimatePresence, motion } from \"framer-motion\"\nimport {\n  cloneElement,\n  FC,\n  ReactElement,\n  useContext,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\"\n\nexport const Trigger: FC<TriggerProps> = (props) => {\n  const {\n    onBlur,\n    onFocus,\n    triggerRef,\n    children,\n    closeWhenScroll = true,\n    autoFitPosition = true,\n    colorScheme = \"gray\",\n    clickOutsideToClose = true,\n    content,\n    closeOnInnerClick,\n    position = \"top\",\n    showArrow = true,\n    closeDelay = 150,\n    openDelay = 150,\n    autoAlignPopupWidth,\n    closeOnClick = true,\n    defaultPopupVisible,\n    withoutPadding,\n    withoutShadow,\n    withoutOffset,\n    disabled,\n    popupVisible,\n    maxW = \"566px\",\n    onVisibleChange,\n    trigger = \"hover\",\n    alignPoint,\n    renderInBody,\n    zIndex,\n    popupContainer,\n  } = props\n\n  const tipsContainerRef = useRef<HTMLDivElement>(null)\n  const [visible, setVisible] = useState<boolean>(false)\n  const finalVisible = popupVisible === undefined ? visible : popupVisible\n  const triggerContext = useContext(TriggerProviderContext)\n  const _renderInBody = renderInBody ?? triggerContext.renderInBody ?? true\n  const _zIndex = zIndex ?? triggerContext.zIndex ?? 5\n\n  let _popupContainer =\n    (popupContainer instanceof HTMLElement\n      ? popupContainer\n      : popupContainer?.current) ?? (_renderInBody ? document.body : null)\n\n  useEffect(() => {\n    if (defaultPopupVisible) {\n      if (popupVisible === undefined) {\n        setVisible(true)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const middleware = useMemo(() => {\n    let middleware: Middleware[] = []\n    if (autoFitPosition) {\n      middleware.push(flip())\n    }\n    if (!withoutOffset) {\n      middleware.push(offset(4))\n    }\n    if (autoAlignPopupWidth) {\n      middleware.push(\n        size({\n          apply({ availableWidth, availableHeight, elements }) {\n            // Do things with the data, e.g.\n            Object.assign(elements.floating.style, {\n              width: `${childrenRef.current?.clientWidth}px`,\n            })\n          },\n        }),\n      )\n    }\n    middleware.push(hide())\n    return middleware\n  }, [autoFitPosition, withoutOffset, autoAlignPopupWidth])\n\n  const { refs, x, y, strategy, placement, context, elements } = useFloating({\n    placement: position,\n    open: finalVisible,\n    onOpenChange: (v) => {\n      if (!disabled && finalVisible !== v) {\n        if (popupVisible === undefined) {\n          setVisible(v)\n        }\n        onVisibleChange?.(v)\n      }\n    },\n    middleware: middleware,\n    whileElementsMounted: autoUpdate,\n  })\n\n  const { getReferenceProps, getFloatingProps } = useInteractions([\n    useHover(context, {\n      enabled: trigger === \"hover\",\n      move: true,\n      restMs: 200,\n      delay: {\n        open: openDelay,\n        close: closeDelay,\n      },\n      handleClose: safePolygon({\n        buffer: 1,\n      }),\n    }),\n    useClick(context, {\n      enabled: trigger === \"click\",\n      toggle: closeOnClick,\n    }),\n    useFocus(context, {\n      enabled: trigger === \"focus\",\n      keyboardOnly: false,\n    }),\n    useRole(context, { role: \"tooltip\" }),\n    useDismiss(context, {\n      outsidePress: clickOutsideToClose,\n      ancestorScroll: closeWhenScroll,\n    }),\n  ])\n\n  const closeContent = <div css={applyDefaultContentSize}>{content}</div>\n\n  const childrenRef = useRef<HTMLElement>(null)\n\n  let centerNode: ReactElement = <></>\n\n  switch (placement) {\n    case \"top\":\n    case \"top-start\":\n    case \"top-end\":\n      centerNode = (\n        <div css={applyVerticalContainer(autoAlignPopupWidth)}>\n          <div\n            ref={tipsContainerRef}\n            css={applyTipsText(\n              colorScheme,\n              maxW,\n              withoutPadding,\n              withoutShadow,\n              autoAlignPopupWidth,\n            )}\n          >\n            {closeContent}\n          </div>\n          {showArrow && (\n            <TriangleTop\n              w=\"8px\"\n              h=\"4px\"\n              containerStyle={applyTriangleStyle(colorScheme, placement)}\n            />\n          )}\n        </div>\n      )\n      break\n    case \"bottom\":\n    case \"bottom-start\":\n    case \"bottom-end\":\n      centerNode = (\n        <div css={applyVerticalContainer(autoAlignPopupWidth)}>\n          {showArrow && (\n            <TriangleBottom\n              w=\"8px\"\n              h=\"4px\"\n              containerStyle={applyTriangleStyle(colorScheme, placement)}\n            />\n          )}\n          <div\n            ref={tipsContainerRef}\n            css={applyTipsText(\n              colorScheme,\n              maxW,\n              withoutPadding,\n              withoutShadow,\n              autoAlignPopupWidth,\n            )}\n          >\n            {closeContent}\n          </div>\n        </div>\n      )\n      break\n    case \"right\":\n    case \"right-start\":\n    case \"right-end\":\n      centerNode = (\n        <div css={applyHorizontalContainer(autoAlignPopupWidth)}>\n          {showArrow && (\n            <TriangleRight\n              w=\"4px\"\n              h=\"8px\"\n              containerStyle={applyTriangleStyle(colorScheme, placement)}\n            />\n          )}\n          <div\n            ref={tipsContainerRef}\n            css={applyTipsText(\n              colorScheme,\n              maxW,\n              withoutPadding,\n              withoutShadow,\n              autoAlignPopupWidth,\n            )}\n          >\n            {closeContent}\n          </div>\n        </div>\n      )\n      break\n    case \"left\":\n    case \"left-start\":\n    case \"left-end\":\n      centerNode = (\n        <div css={applyHorizontalContainer(autoAlignPopupWidth)}>\n          <div\n            ref={tipsContainerRef}\n            css={applyTipsText(\n              colorScheme,\n              maxW,\n              withoutPadding,\n              withoutShadow,\n              autoAlignPopupWidth,\n            )}\n          >\n            {closeContent}\n          </div>\n          {showArrow && (\n            <TriangleLeft\n              w=\"4px\"\n              h=\"8px\"\n              containerStyle={applyTriangleStyle(colorScheme, placement)}\n            />\n          )}\n        </div>\n      )\n      break\n  }\n\n  const tipsNode = (\n    <motion.div\n      css={applyMotionDiv(autoAlignPopupWidth)}\n      variants={applyAnimation(placement, showArrow)}\n      initial=\"initial\"\n      animate=\"animate\"\n      exit=\"exit\"\n    >\n      {centerNode}\n    </motion.div>\n  )\n\n  const mergedRef = useMergeRefs([\n    refs.setReference,\n    (props.children as any).ref,\n    childrenRef,\n  ])\n\n  useImperativeHandle(\n    triggerRef,\n    () => {\n      return {\n        rerenderPosition: () => {\n          if (elements.reference && elements.floating) {\n            computePosition(elements.reference, elements.floating, {\n              placement: placement,\n              middleware: middleware,\n            }).then(({ x, y }) => {\n              if (elements.floating) {\n                Object.assign(elements.floating.style, {\n                  left: `${x}px`,\n                  top: `${y}px`,\n                })\n              }\n            })\n          }\n        },\n      }\n    },\n    [elements.floating, elements.reference, middleware, placement],\n  )\n\n  return (\n    <>\n      {cloneElement(\n        children as ReactElement,\n        getReferenceProps({\n          key: \"illa-trigger\",\n          ...(children as any).props,\n          ref: mergedRef,\n          onContextMenu: (e) => {\n            if (disabled) {\n              return\n            }\n            if ((children as any).props.onContextMenu != undefined) {\n              ;(children as any).props.onContextMenu(e)\n            }\n            if (trigger === \"contextmenu\") {\n              e.preventDefault()\n              if (alignPoint) {\n                if (childrenRef.current != null) {\n                  Object.assign(childrenRef.current, {\n                    getBoundingClientRect: () => ({\n                      x: e.clientX,\n                      y: e.clientY,\n                      width: 0,\n                      height: 0,\n                      top: e.clientY,\n                      right: e.clientX,\n                      bottom: e.clientY,\n                      left: e.clientX,\n                    }),\n                  })\n                }\n              }\n              if (popupVisible === undefined) {\n                if (finalVisible) {\n                  setVisible(false)\n                } else {\n                  setVisible(true)\n                }\n              } else {\n                onVisibleChange?.(!finalVisible)\n              }\n            }\n          },\n          onClick: (e) => {\n            if ((children as any).props.onClick != undefined) {\n              ;(children as any).props.onClick(e)\n            }\n            if (alignPoint && trigger === \"click\") {\n              if (childrenRef.current != null) {\n                Object.assign(childrenRef.current, {\n                  getBoundingClientRect: () => ({\n                    x: e.clientX,\n                    y: e.clientY,\n                    width: 0,\n                    height: 0,\n                    top: e.clientY,\n                    right: e.clientX,\n                    bottom: e.clientY,\n                    left: e.clientX,\n                  }),\n                })\n              }\n            }\n          },\n        }),\n      )}\n      <FloatingPortal\n        root={_popupContainer ?? childrenRef?.current ?? document.body}\n      >\n        {!disabled && (\n          <AnimatePresence>\n            {finalVisible && (\n              <div\n                onFocus={onFocus}\n                onBlur={onBlur}\n                css={[\n                  css`\n                    display: inline-flex;\n                    z-index: ${_zIndex};\n                  `,\n                  applyBoxStyle(props),\n                ]}\n                {...getFloatingProps({\n                  onClick: (e) => {\n                    if (closeOnInnerClick) {\n                      if (popupVisible === undefined) {\n                        setVisible(false)\n                      } else {\n                        onVisibleChange?.(false)\n                      }\n                    }\n                  },\n                  ref: refs.setFloating,\n                  style: {\n                    position: strategy,\n                    top: y ?? 0,\n                    left: x ?? 0,\n                  },\n                })}\n              >\n                {tipsNode}\n              </div>\n            )}\n          </AnimatePresence>\n        )}\n      </FloatingPortal>\n    </>\n  )\n}\n\nTrigger.displayName = \"Trigger\"\n"],"names":["getAnimation","originX","originY","showArrow","isHorizontal","initialScaleX","initialScaleY","applyMotionDiv","autoAlignPopupWidth","css","applyTipsText","colorScheme","maxWidth","withoutPadding","withoutShadow","bgColor","getColor","textColor","globalColor","illaPrefix","padding","shadow","getColorShadow","align","applyTriangleStyle","position","mainStyle","positionStyle","applyAnimation","applyDefaultContentSize","applyVerticalContainer","applyHorizontalContainer","TriangleTop","createIcon","TriangleBottom","TriangleLeft","TriangleRight","sides","min","max","round","floor","createCoords","v","oppositeSideMap","oppositeAlignmentMap","evaluate","value","param","getSide","placement","getAlignment","getOppositeAxis","axis","getAxisLength","getSideAxis","getAlignmentAxis","getAlignmentSides","rects","rtl","alignment","alignmentAxis","length","mainAlignmentSide","getOppositePlacement","getExpandedPlacements","oppositePlacement","getOppositeAlignmentPlacement","getSideList","side","isStart","lr","rl","tb","bt","getOppositeAxisPlacements","flipAlignment","direction","list","expandPaddingObject","getPaddingObject","rectToClientRect","rect","getNodeName","node","isNode","getWindow","_node$ownerDocument","getDocumentElement","_ref","isElement","isHTMLElement","isShadowRoot","isOverflowElement","element","overflow","overflowX","overflowY","display","getComputedStyle","isTableElement","isContainingBlock","webkit","isWebKit","getContainingBlock","currentNode","getParentNode","isLastTraversableNode","getNodeScroll","result","getNearestOverflowAncestor","parentNode","getOverflowAncestors","_node$ownerDocument2","scrollableAncestor","isBody","win","activeElement","doc","_activeElement","_activeElement$shadow","contains","parent","child","rootNode","next","getPlatform","uaData","getUserAgent","brand","version","isVirtualClick","event","androidRe","isVirtualPointerEvent","isSafari","isMouseLikePointerType","pointerType","strict","values","isReactEvent","isRootElement","getDocument","isEventTargetWithin","e","getTarget","TYPEABLE_SELECTOR","isTypeableElement","computeCoordsFromPlacement","reference","floating","sideAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","computePosition","config","strategy","middleware","platform","validMiddleware","x","y","statefulPlacement","middlewareData","resetCount","i","name","fn","nextX","nextY","data","reset","detectOverflow","state","options","_await$platform$isEle","elements","boundary","rootBoundary","elementContext","altBoundary","paddingObject","clippingClientRect","offsetParent","offsetScale","elementClientRect","flip","_middlewareData$flip","initialPlacement","checkMainAxis","checkCrossAxis","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","detectOverflowOptions","isBasePlacement","fallbackPlacements","placements","overflows","overflowsData","_middlewareData$flip2","_overflowsData$filter","nextIndex","nextPlacement","resetPlacement","d","a","b","_overflowsData$map$so","acc","getSideOffsets","isAnySideFullyClipped","hide","offsets","convertValueToCoords","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","offset","diffCoords","size","apply","isYAxis","width","height","heightSide","widthSide","overflowAvailableHeight","overflowAvailableWidth","noShift","availableHeight","availableWidth","maximumClippingWidth","maximumClippingHeight","xMin","xMax","yMin","yMax","nextDimensions","getCssDimensions","hasOffset","offsetWidth","offsetHeight","shouldFallback","unwrapElement","getScale","domElement","$","noOffsets","getVisualOffsets","shouldAddVisualOffsets","isFixed","floatingOffsetParent","getBoundingClientRect","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","offsetWin","currentIFrame","iframeScale","iframeRect","left","top","convertOffsetParentRelativeRectToViewportRelativeRect","isOffsetParentAnElement","documentElement","scroll","offsetRect","getClientRects","getWindowScrollBarX","getDocumentRect","html","body","getViewportRect","visualViewport","visualViewportBased","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","hasFixedPositionAncestor","stopNode","getClippingElementAncestors","cache","cachedResult","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","getClippingRect","clippingAncestors","firstClippingAncestor","clippingRect","accRect","getDimensions","getRectRelativeToOffsetParent","getTrueOffsetParent","polyfill","getOffsetParent","window","getElementRects","getOffsetParentFn","getDimensionsFn","isRTL","observeMove","onMove","io","timeoutId","root","cleanup","refresh","skip","threshold","insetTop","insetRight","insetBottom","insetLeft","isFirstUpdate","handleObserve","entries","ratio","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","layoutShift","animationFrame","referenceEl","ancestors","cleanupIo","reobserveFrame","resizeObserver","firstEntry","frameId","prevRefRect","frameLoop","nextRefRect","mergedOptions","platformWithCache","computePosition$1","index","useLayoutEffect","useEffect","deepEqual","keys","key","getDPR","roundByDPR","dpr","useLatestRef","ref","React.useRef","useFloating","externalReference","externalFloating","transform","whileElementsMounted","open","setData","React.useState","latestMiddleware","setLatestMiddleware","_reference","_setReference","_floating","_setFloating","setReference","React.useCallback","referenceRef","setFloating","floatingRef","floatingEl","dataRef","whileElementsMountedRef","platformRef","fullData","isMountedRef","ReactDOM.flushSync","refs","React.useMemo","floatingStyles","initialStyles","candidateSelectors","candidateSelector","NoElement","matches","getRootNode","_element$getRootNode","isInert","lookUp","_node$getAttribute","inertAtt","inert","isContentEditable","_node$getAttribute2","attValue","getCandidates","includeContainer","filter","candidates","getCandidatesIteratively","elementsToCheck","assigned","content","nestedCandidates","validCandidate","shadowRoot","validShadowRoot","_nestedCandidates","hasTabIndex","getTabIndex","getSortOrderTabIndex","isScope","tabIndex","sortOrderedTabbables","isInput","isHiddenInput","isDetailsWithSummary","r","getCheckedRadio","nodes","form","isTabbableRadio","radioScope","queryRadios","radioSet","err","checked","isRadio","isNonTabbableRadio","isNodeAttached","_nodeRoot","nodeRoot","nodeRootHost","attached","_nodeRootHost","_nodeRootHost$ownerDo","_nodeRoot2","_nodeRootHost2","_nodeRootHost2$ownerD","isZeroArea","_node$getBoundingClie","isHidden","displayCheck","getShadowRoot","isDirectSummary","nodeUnderDetails","originalNode","parentElement","isDisabledFromFieldset","isNodeMatchingSelectorFocusable","isNodeMatchingSelectorTabbable","isValidShadowRootTabbable","shadowHostNode","sortByOrder","regularTabbables","orderedTabbables","item","candidateTabindex","sortable","tabbable","container","useMergeRefs","_extends","target","source","serverHandoffComplete","count","genId","useFloatingId","id","setId","React.useEffect","useReactId","React","useId","createPubSub","map","_map$get","handler","listener","_map$get2","l","FloatingNodeContext","React.createContext","FloatingTreeContext","useFloatingParentNodeId","_React$useContext","React.useContext","useFloatingTree","createAttribute","useRef","safePolygonIdentifier","getDelay","prop","useHover","context","props","onOpenChange","events","domReference","enabled","delay","handleClose","mouseOnly","restMs","move","tree","parentId","handleCloseRef","delayRef","pointerTypeRef","timeoutRef","handlerRef","restTimeoutRef","blockMouseMoveRef","performedPointerEventsMutationRef","unbindMouseMoveRef","isHoverOpen","_dataRef$current$open","type","onDismiss","onLeave","closeWithDelay","runElseBranch","closeDelay","cleanupMouseMoveHandler","clearPointerEvents","isClickLikeOpenEvent","onMouseEnter","openDelay","onMouseLeave","onScrollMouseLeave","_handleCloseRef$curre","_tree$nodesRef$curren","_tree$nodesRef$curren2","parentFloating","setPointerRef","getChildren","allChildren","_node$context","currentChildren","_currentChildren","n","_node$context2","getTabbableOptions","getTabbableIn","allTabbable","activeIndex","getNextTabbable","getPreviousTabbable","isOutsideEvent","containerElement","relatedTarget","disableFocusInside","enableFocusInside","tabindex","HIDDEN_STYLES","setActiveElementOnTab","FocusGuard","React.forwardRef","role","setRole","restProps","React.createElement","PortalContext","useFloatingPortalNode","_temp","portalNode","setPortalNode","uniqueId","portalContext","usePortalContext","existingIdRoot","attr","subRoot","idWrapper","FloatingPortal","children","preserveTabOrder","focusManagerState","setFocusManagerState","beforeOutsideRef","afterOutsideRef","beforeInsideRef","afterInsideRef","shouldRenderGuards","onFocus","_beforeInsideRef$curr","prevTabbable","createPortal","_afterInsideRef$curre","nextTabbable","isButtonTarget","isSpaceIgnored","useClick","eventOption","toggle","ignoreMouse","keyboardHandlers","didKeyDownRef","useInsertionEffect","useSafeInsertionEffect","useEffectEvent","callback","_len","args","_key","bubbleHandlerKeys","captureHandlerKeys","normalizeBubblesProp","bubbles","_bubbles$escapeKey","_bubbles$outsidePress","useDismiss","nodeId","escapeKey","unstable_outsidePress","outsidePressEvent","referencePress","referencePressEvent","nested","outsidePressFn","outsidePress","insideReactTreeRef","escapeKeyBubbles","outsidePressBubbles","closeOnEscapeKeyDown","shouldDismiss","_child$context","closeOnPressOutside","insideReactTree","inertSelector","markers","targetRootAncestor","nextParent","marker","canScrollX","canScrollY","xCond","targetIsInsideChildren","_child$context2","onScroll","_doc$defaultView","_options$elements2","unstable_onOpenChange","_domReference","setDomReference","useFloating$1","domReferenceRef","floatingId","setPositionReference","positionReference","useFocus","keyboardOnly","blockFocusRef","onBlur","payload","movedToFocusGuard","mergeProps","userProps","propsList","elementKey","val","useInteractions","deps","getReferenceProps","getFloatingProps","getItemProps","useRole","referenceId","floatingProps","isPointInPolygon","point","polygon","isInside","j","xi","yi","xj","yj","safePolygon","buffer","blockPointerEvents","requireIntent","hasLanded","lastX","lastY","lastCursorTime","getCursorSpeed","currentTime","elapsedTime","deltaX","deltaY","speed","onClose","close","clientX","clientY","clientPoint","isLeave","isOverFloatingEl","isOverReferenceEl","refRect","cursorLeaveFromRight","cursorLeaveFromBottom","isOverReferenceRect","isFloatingWider","isFloatingTaller","right","bottom","_ref2","rectPoly","getPolygon","_ref3","cursorPointOne","cursorPointTwo","commonPoints","cursorSpeed","Trigger","triggerRef","closeWhenScroll","autoFitPosition","clickOutsideToClose","closeOnInnerClick","closeOnClick","defaultPopupVisible","withoutOffset","disabled","popupVisible","maxW","onVisibleChange","trigger","alignPoint","renderInBody","zIndex","popupContainer","tipsContainerRef","visible","setVisible","useState","finalVisible","triggerContext","useContext","TriggerProviderContext","_renderInBody","_zIndex","_popupContainer","useMemo","middleware2","elements2","_a","childrenRef","closeContent","jsx","centerNode","Fragment","jsxs","tipsNode","motion","mergedRef","useImperativeHandle","x2","y2","cloneElement","AnimatePresence","applyBoxStyle"],"mappings":"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","x_google_ignoreList":[3,4,5,6,7,8,9,10]}