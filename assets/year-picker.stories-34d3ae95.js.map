{"version":3,"file":"year-picker.stories-34d3ae95.js","sources":["../../../../packages/date-picker/src/signle-year-picker.tsx"],"sourcesContent":["import {\n  ChangeEvent,\n  FC,\n  useRef,\n  useState,\n  MouseEvent,\n  useEffect,\n  forwardRef,\n} from \"react\"\nimport { SingleYearPickerProps } from \"./interface\"\nimport { PickerContext } from \"./context\"\nimport { Trigger } from \"@illa-design/trigger\"\nimport { DateInput } from \"./input/singleInput\"\nimport { getFormat } from \"./utils/uiHelpers\"\nimport { Dayjs } from \"dayjs\"\nimport { getDefaultValue, getLocaleDayjsValue } from \"./utils/dateHelper\"\nimport { YearPickerPanel } from \"./panels/year\"\nimport {\n  dayjsPro,\n  getDayjsValue,\n  getNow,\n  isDayjsChange,\n  toLocal,\n  toTimezone,\n  usePrevious,\n} from \"@illa-design/system\"\nimport { CalendarIcon } from \"@illa-design/icon\"\nimport { BasicFooterSection } from \"./panels/basic-footer-section\"\nimport { applyBoxStyle } from \"@illa-design/theme\"\n\nexport const SingleYearPicker = forwardRef<\n  HTMLDivElement,\n  SingleYearPickerProps\n>((props, ref) => {\n  const {\n    allowClear = true,\n    placeholder,\n    disabled,\n    position = \"bottom-start\",\n    error,\n    editable = true,\n    triggerProps,\n    onSelect,\n    onVisibleChange,\n    value: propsValue,\n    onChange,\n    disabledDate,\n    extra,\n    defaultPickerValue,\n    pickerValue,\n    onPickerValueChange,\n    utcOffset,\n    timezone,\n    defaultValue,\n    size = \"medium\",\n    colorScheme = \"blue\",\n    inputSuffix,\n  } = props\n\n  const refInput = useRef<HTMLInputElement>(null)\n\n  const weekStart = 0\n\n  const realFormat = getFormat(\"year\", props.format) as string\n  let format = realFormat\n\n  const [value, setValue] = useState<Dayjs | undefined>(\n    getDefaultValue(\n      format,\n      propsValue,\n      defaultValue,\n      utcOffset,\n      timezone,\n    ) as Dayjs,\n  )\n  const [popupVisible, setPopupVisible] = useState<boolean | undefined>(\n    !!props.popupVisible,\n  )\n  const [hoverPlaceholderValue, setHoverPlaceholderValue] = useState<string>()\n  const mergedPopupVisible =\n    \"popupVisible\" in props ? props.popupVisible : popupVisible\n  const mergedValue =\n    \"value\" in props\n      ? (getDayjsValue(\n          propsValue as Dayjs,\n          format,\n          utcOffset,\n          timezone,\n        ) as Dayjs)\n      : value\n\n  const defaultPageShowDate =\n    mergedValue ||\n    (getDayjsValue(defaultPickerValue as Dayjs, format) as Dayjs) ||\n    getNow()\n\n  const [inputValue, setInputValue] = useState<string | undefined>()\n  const [valueShow, setValueShow] = useState<Dayjs>()\n  const [pageShowDate, setPageShowDate] = useState<Dayjs>(defaultPageShowDate)\n  const mergedPageShowDate =\n    (getDayjsValue(pickerValue as Dayjs, format) as Dayjs) || pageShowDate\n\n  const panelValue = valueShow || mergedValue\n\n  function focusInput() {\n    refInput.current?.focus?.()\n  }\n\n  function blurInput() {\n    refInput.current?.blur?.()\n  }\n\n  const previousUtcOffset = usePrevious(utcOffset)\n  const previousTimezone = usePrevious(timezone)\n\n  const isDidMount = useRef<boolean>(false)\n\n  useEffect(() => {\n    if (isDidMount.current) {\n      if (\n        value &&\n        (previousUtcOffset !== utcOffset || timezone !== previousTimezone)\n      ) {\n        const localValue = toLocal(value, previousUtcOffset, previousTimezone)\n        setValue(toTimezone(localValue, utcOffset, timezone))\n      }\n    } else {\n      isDidMount.current = true\n    }\n  }, [previousTimezone, previousUtcOffset, timezone, utcOffset, value])\n\n  useEffect(() => {\n    setInputValue(undefined)\n    setHoverPlaceholderValue(undefined)\n\n    if (mergedPopupVisible) {\n      setPageShowDate(defaultPageShowDate)\n    } else {\n      setValueShow(undefined)\n      setTimeout(() => {\n        blurInput()\n      }, 100)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mergedPopupVisible])\n\n  function setOpen(visible?: boolean, callback?: () => void) {\n    setPopupVisible(visible)\n    onVisibleChange && onVisibleChange(visible)\n    callback && callback()\n  }\n\n  function isValid(time: string | Dayjs): boolean {\n    return (\n      typeof time === \"string\" &&\n      dayjsPro(time, format).format(format) === time &&\n      (typeof disabledDate === \"function\"\n        ? !disabledDate(dayjsPro(time, format))\n        : true)\n    )\n  }\n\n  function onChangeInput(e: ChangeEvent<HTMLInputElement>) {\n    const niv = e.target.value\n    setInputValue(niv)\n    if (!mergedPopupVisible) {\n      setOpen(true)\n    }\n    if (isValid(niv)) {\n      const newValue = getDayjsValue(niv, format, utcOffset, timezone) as Dayjs\n      setValueShow(newValue)\n      setPageShowDate(newValue)\n      setInputValue(undefined)\n    }\n  }\n\n  function onHandleChange(newValue: Dayjs | undefined) {\n    if (isDayjsChange(newValue, mergedValue)) {\n      onChange &&\n        onChange((newValue as Dayjs).format(format), newValue as Dayjs)\n    }\n  }\n\n  function onConfirmValue() {\n    setValue(panelValue)\n    onHandleChange(panelValue)\n    setOpen(false)\n  }\n\n  function onPressEnter() {\n    if (panelValue) {\n      onConfirmValue()\n      blurInput()\n    } else if (mergedPopupVisible) {\n      setOpen(false)\n    }\n  }\n  function visibleChange(visible: boolean) {\n    if (visible) {\n      setOpen(visible, () => {\n        focusInput()\n      })\n    } else {\n      setOpen(false)\n    }\n  }\n\n  function onClear(e: MouseEvent<HTMLSpanElement>) {\n    e.stopPropagation()\n    setValue(undefined)\n    setValueShow(undefined)\n    onHandleChange(undefined)\n    props.onClear && props.onClear()\n  }\n\n  function handlePickerValueChange(v: Dayjs) {\n    onPickerValueChange && onPickerValueChange(v.format(format), v)\n  }\n\n  function changePageShowDate(type: \"prev\" | \"next\", num = 1) {\n    let newPageShowDate\n    if (type === \"prev\") {\n      newPageShowDate = mergedPageShowDate.subtract(num, \"year\")\n    }\n    if (type === \"next\") {\n      newPageShowDate = mergedPageShowDate.add(num, \"year\")\n    }\n\n    if (newPageShowDate) {\n      handlePickerValueChange(newPageShowDate)\n      setPageShowDate(newPageShowDate)\n    }\n  }\n\n  function getHeaderOperations() {\n    return {\n      onSuperPrev: () => changePageShowDate(\"prev\", 10),\n      onSuperNext: () => changePageShowDate(\"next\", 10),\n    }\n  }\n\n  function onMouseEnterCell(value: Dayjs, disabled: boolean) {\n    if (!disabled) {\n      setHoverPlaceholderValue(value.format(format))\n    }\n  }\n\n  function onMouseLeaveCell() {\n    setHoverPlaceholderValue(undefined)\n  }\n\n  function onHandleSelect(_: string | undefined, date?: Dayjs) {\n    setInputValue(undefined)\n    setHoverPlaceholderValue(undefined)\n    const localTime = getLocaleDayjsValue(\n      toLocal(date as Dayjs, utcOffset, timezone).locale(\"en-us\"),\n      \"en-us\",\n    )\n    onSelect &&\n      onSelect(\n        localTime ? localTime.format(format) : undefined,\n        localTime as Dayjs,\n      )\n    setValue(date)\n    onHandleChange(date)\n    setOpen(false)\n  }\n\n  const suffixIcon =\n    inputSuffix === null ? null : inputSuffix || <CalendarIcon />\n\n  return (\n    <PickerContext.Provider value={{ utcOffset, timezone, weekStart }}>\n      <Trigger\n        content={\n          <>\n            <YearPickerPanel\n              {...props}\n              {...getHeaderOperations()}\n              onMouseEnterCell={onMouseEnterCell}\n              onMouseLeaveCell={onMouseLeaveCell}\n              pageShowDate={mergedPageShowDate}\n              format={format}\n              onSelect={onHandleSelect}\n              value={panelValue}\n            />\n            {extra && (\n              <BasicFooterSection\n                disabled={!panelValue}\n                extra={extra}\n                mode=\"year\"\n              />\n            )}\n          </>\n        }\n        trigger=\"click\"\n        position={position}\n        disabled={disabled}\n        onVisibleChange={visibleChange}\n        popupVisible={mergedPopupVisible}\n        colorScheme=\"white\"\n        showArrow={false}\n        withoutPadding\n        {...triggerProps}\n      >\n        <div css={applyBoxStyle(props)} ref={ref}>\n          <DateInput\n            ref={refInput}\n            placeholder={placeholder as string | undefined}\n            popupVisible={mergedPopupVisible}\n            value={valueShow || mergedValue}\n            inputValue={hoverPlaceholderValue || inputValue}\n            onChange={onChangeInput}\n            isPlaceholder={!!hoverPlaceholderValue}\n            format={realFormat}\n            disabled={disabled}\n            error={error}\n            size={size}\n            colorScheme={colorScheme}\n            onPressEnter={onPressEnter}\n            onClear={onClear}\n            allowClear={allowClear}\n            editable={editable}\n            suffixIcon={suffixIcon}\n          />\n        </div>\n      </Trigger>\n    </PickerContext.Provider>\n  )\n})\n\nSingleYearPicker.displayName = \"SingleYearPicker\"\n"],"names":["SingleYearPicker","forwardRef","props","ref","allowClear","placeholder","disabled","position","error","editable","triggerProps","onSelect","onVisibleChange","propsValue","onChange","disabledDate","extra","defaultPickerValue","pickerValue","onPickerValueChange","utcOffset","timezone","defaultValue","size","colorScheme","inputSuffix","refInput","useRef","weekStart","realFormat","getFormat","format","value","setValue","useState","getDefaultValue","popupVisible","setPopupVisible","hoverPlaceholderValue","setHoverPlaceholderValue","mergedPopupVisible","mergedValue","getDayjsValue","defaultPageShowDate","getNow","inputValue","setInputValue","valueShow","setValueShow","pageShowDate","setPageShowDate","mergedPageShowDate","panelValue","focusInput","_b","_a","blurInput","previousUtcOffset","usePrevious","previousTimezone","isDidMount","useEffect","localValue","toLocal","toTimezone","setOpen","visible","callback","isValid","time","dayjsPro","onChangeInput","niv","newValue","onHandleChange","isDayjsChange","onConfirmValue","onPressEnter","visibleChange","onClear","handlePickerValueChange","v","changePageShowDate","type","num","newPageShowDate","getHeaderOperations","onMouseEnterCell","value2","disabled2","onMouseLeaveCell","onHandleSelect","_","date","localTime","getLocaleDayjsValue","suffixIcon","jsx","CalendarIcon","PickerContext","Trigger","jsxs","Fragment","YearPickerPanel","BasicFooterSection","applyBoxStyle","DateInput"],"mappings":"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"}