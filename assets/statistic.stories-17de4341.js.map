{"version":3,"file":"statistic.stories-17de4341.js","sources":["../../../../node_modules/.pnpm/framer-motion@10.16.4_react-dom@18.2.0_react@18.2.0/node_modules/framer-motion/dist/es/render/dom/utils/resolve-element.mjs","../../../../node_modules/.pnpm/framer-motion@10.16.4_react-dom@18.2.0_react@18.2.0/node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","../../../../node_modules/.pnpm/framer-motion@10.16.4_react-dom@18.2.0_react@18.2.0/node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../../../../node_modules/.pnpm/framer-motion@10.16.4_react-dom@18.2.0_react@18.2.0/node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../../../../node_modules/.pnpm/framer-motion@10.16.4_react-dom@18.2.0_react@18.2.0/node_modules/framer-motion/dist/es/animation/utils/is-dom-keyframes.mjs","../../../../node_modules/.pnpm/framer-motion@10.16.4_react-dom@18.2.0_react@18.2.0/node_modules/framer-motion/dist/es/animation/utils/create-visual-element.mjs","../../../../node_modules/.pnpm/framer-motion@10.16.4_react-dom@18.2.0_react@18.2.0/node_modules/framer-motion/dist/es/easing/utils/create-generator-easing.mjs","../../../../node_modules/.pnpm/framer-motion@10.16.4_react-dom@18.2.0_react@18.2.0/node_modules/framer-motion/dist/es/animation/sequence/utils/calc-time.mjs","../../../../node_modules/.pnpm/framer-motion@10.16.4_react-dom@18.2.0_react@18.2.0/node_modules/framer-motion/dist/es/utils/wrap.mjs","../../../../node_modules/.pnpm/framer-motion@10.16.4_react-dom@18.2.0_react@18.2.0/node_modules/framer-motion/dist/es/easing/utils/get-easing-for-segment.mjs","../../../../node_modules/.pnpm/framer-motion@10.16.4_react-dom@18.2.0_react@18.2.0/node_modules/framer-motion/dist/es/animation/sequence/utils/edit.mjs","../../../../node_modules/.pnpm/framer-motion@10.16.4_react-dom@18.2.0_react@18.2.0/node_modules/framer-motion/dist/es/animation/sequence/utils/sort.mjs","../../../../node_modules/.pnpm/framer-motion@10.16.4_react-dom@18.2.0_react@18.2.0/node_modules/framer-motion/dist/es/animation/sequence/create.mjs","../../../../node_modules/.pnpm/framer-motion@10.16.4_react-dom@18.2.0_react@18.2.0/node_modules/framer-motion/dist/es/animation/animate.mjs","../../../../packages/statistic/src/statistic.tsx"],"sourcesContent":["import { invariant } from '../../../utils/errors.mjs';\n\nfunction resolveElements(elements, scope, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        let root = document;\n        if (scope) {\n            invariant(Boolean(scope.current), \"Scope provided, but no element detected.\");\n            root = scope.current;\n        }\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = root.querySelectorAll(elements));\n            elements = selectorCache[elements];\n        }\n        else {\n            elements = root.querySelectorAll(elements);\n        }\n    }\n    else if (elements instanceof Element) {\n        elements = [elements];\n    }\n    /**\n     * Return an empty array\n     */\n    return Array.from(elements || []);\n}\n\nexport { resolveElements };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    stop() {\n        this.runAll(\"stop\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","function isDOMKeyframes(keyframes) {\n    return typeof keyframes === \"object\" && !Array.isArray(keyframes);\n}\n\nexport { isDOMKeyframes };\n","import { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { SVGVisualElement } from '../../render/svg/SVGVisualElement.mjs';\nimport { HTMLVisualElement } from '../../render/html/HTMLVisualElement.mjs';\nimport { visualElementStore } from '../../render/store.mjs';\n\nfunction createVisualElement(element) {\n    const options = {\n        presenceContext: null,\n        props: {},\n        visualState: {\n            renderState: {\n                transform: {},\n                transformOrigin: {},\n                style: {},\n                vars: {},\n                attrs: {},\n            },\n            latestValues: {},\n        },\n    };\n    const node = isSVGElement(element)\n        ? new SVGVisualElement(options, {\n            enableHardwareAcceleration: false,\n        })\n        : new HTMLVisualElement(options, {\n            enableHardwareAcceleration: true,\n        });\n    node.mount(element);\n    visualElementStore.set(element, node);\n}\n\nexport { createVisualElement };\n","import { spring } from '../../animation/generators/spring/index.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../../animation/generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds } from '../../utils/time-conversion.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100) {\n    const generator = spring({ keyframes: [0, scale], ...options });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => generator.next(duration * progress).value / scale,\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","/**\n * Given a absolute or relative time definition and current/prev time state of the sequence,\n * calculate an absolute time for the next keyframes.\n */\nfunction calcNextTime(current, next, prev, labels) {\n    var _a;\n    if (typeof next === \"number\") {\n        return next;\n    }\n    else if (next.startsWith(\"-\") || next.startsWith(\"+\")) {\n        return Math.max(0, current + parseFloat(next));\n    }\n    else if (next === \"<\") {\n        return prev;\n    }\n    else {\n        return (_a = labels.get(next)) !== null && _a !== void 0 ? _a : current;\n    }\n}\n\nexport { calcNextTime };\n","const wrap = (min, max, v) => {\n    const rangeSize = max - min;\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\nexport { wrap };\n","import { wrap } from '../../utils/wrap.mjs';\nimport { isEasingArray } from './is-easing-array.mjs';\n\nfunction getEasingForSegment(easing, i) {\n    return isEasingArray(easing) ? easing[wrap(0, easing.length, i)] : easing;\n}\n\nexport { getEasingForSegment };\n","import { getEasingForSegment } from '../../../easing/utils/get-easing-for-segment.mjs';\nimport { removeItem } from '../../../utils/array.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\nfunction eraseKeyframes(sequence, startTime, endTime) {\n    for (let i = 0; i < sequence.length; i++) {\n        const keyframe = sequence[i];\n        if (keyframe.at > startTime && keyframe.at < endTime) {\n            removeItem(sequence, keyframe);\n            // If we remove this item we have to push the pointer back one\n            i--;\n        }\n    }\n}\nfunction addKeyframes(sequence, keyframes, easing, offset, startTime, endTime) {\n    /**\n     * Erase every existing value between currentTime and targetTime,\n     * this will essentially splice this timeline into any currently\n     * defined ones.\n     */\n    eraseKeyframes(sequence, startTime, endTime);\n    for (let i = 0; i < keyframes.length; i++) {\n        sequence.push({\n            value: keyframes[i],\n            at: mix(startTime, endTime, offset[i]),\n            easing: getEasingForSegment(easing, i),\n        });\n    }\n}\n\nexport { addKeyframes, eraseKeyframes };\n","function compareByTime(a, b) {\n    if (a.at === b.at) {\n        if (a.value === null)\n            return 1;\n        if (b.value === null)\n            return -1;\n        return 0;\n    }\n    else {\n        return a.at - b.at;\n    }\n}\n\nexport { compareByTime };\n","import { createGeneratorEasing } from '../../easing/utils/create-generator-easing.mjs';\nimport { resolveElements } from '../../render/dom/utils/resolve-element.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { fillOffset } from '../../utils/offsets/fill.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { calcNextTime } from './utils/calc-time.mjs';\nimport { addKeyframes } from './utils/edit.mjs';\nimport { compareByTime } from './utils/sort.mjs';\n\nconst defaultSegmentEasing = \"easeInOut\";\nfunction createAnimationsFromSequence(sequence, { defaultTransition = {}, ...sequenceTransition } = {}, scope) {\n    const defaultDuration = defaultTransition.duration || 0.3;\n    const animationDefinitions = new Map();\n    const sequences = new Map();\n    const elementCache = {};\n    const timeLabels = new Map();\n    let prevTime = 0;\n    let currentTime = 0;\n    let totalDuration = 0;\n    /**\n     * Build the timeline by mapping over the sequence array and converting\n     * the definitions into keyframes and offsets with absolute time values.\n     * These will later get converted into relative offsets in a second pass.\n     */\n    for (let i = 0; i < sequence.length; i++) {\n        const segment = sequence[i];\n        /**\n         * If this is a timeline label, mark it and skip the rest of this iteration.\n         */\n        if (typeof segment === \"string\") {\n            timeLabels.set(segment, currentTime);\n            continue;\n        }\n        else if (!Array.isArray(segment)) {\n            timeLabels.set(segment.name, calcNextTime(currentTime, segment.at, prevTime, timeLabels));\n            continue;\n        }\n        let [subject, keyframes, transition = {}] = segment;\n        /**\n         * If a relative or absolute time value has been specified we need to resolve\n         * it in relation to the currentTime.\n         */\n        if (transition.at !== undefined) {\n            currentTime = calcNextTime(currentTime, transition.at, prevTime, timeLabels);\n        }\n        /**\n         * Keep track of the maximum duration in this definition. This will be\n         * applied to currentTime once the definition has been parsed.\n         */\n        let maxDuration = 0;\n        const resolveValueSequence = (valueKeyframes, valueTransition, valueSequence, elementIndex = 0, numElements = 0) => {\n            const valueKeyframesAsList = keyframesAsList(valueKeyframes);\n            const { delay = 0, times = defaultOffset(valueKeyframesAsList), type = \"keyframes\", ...remainingTransition } = valueTransition;\n            let { ease = defaultTransition.ease || \"easeOut\", duration } = valueTransition;\n            /**\n             * Resolve stagger() if defined.\n             */\n            const calculatedDelay = typeof delay === \"function\"\n                ? delay(elementIndex, numElements)\n                : delay;\n            /**\n             * If this animation should and can use a spring, generate a spring easing function.\n             */\n            const numKeyframes = valueKeyframesAsList.length;\n            if (numKeyframes <= 2 && type === \"spring\") {\n                /**\n                 * As we're creating an easing function from a spring,\n                 * ideally we want to generate it using the real distance\n                 * between the two keyframes. However this isn't always\n                 * possible - in these situations we use 0-100.\n                 */\n                let absoluteDelta = 100;\n                if (numKeyframes === 2 &&\n                    isNumberKeyframesArray(valueKeyframesAsList)) {\n                    const delta = valueKeyframesAsList[1] - valueKeyframesAsList[0];\n                    absoluteDelta = Math.abs(delta);\n                }\n                const springTransition = { ...remainingTransition };\n                if (duration !== undefined) {\n                    springTransition.duration = secondsToMilliseconds(duration);\n                }\n                const springEasing = createGeneratorEasing(springTransition, absoluteDelta);\n                ease = springEasing.ease;\n                duration = springEasing.duration;\n            }\n            duration !== null && duration !== void 0 ? duration : (duration = defaultDuration);\n            const startTime = currentTime + calculatedDelay;\n            const targetTime = startTime + duration;\n            /**\n             * If there's only one time offset of 0, fill in a second with length 1\n             */\n            if (times.length === 1 && times[0] === 0) {\n                times[1] = 1;\n            }\n            /**\n             * Fill out if offset if fewer offsets than keyframes\n             */\n            const remainder = times.length - valueKeyframesAsList.length;\n            remainder > 0 && fillOffset(times, remainder);\n            /**\n             * If only one value has been set, ie [1], push a null to the start of\n             * the keyframe array. This will let us mark a keyframe at this point\n             * that will later be hydrated with the previous value.\n             */\n            valueKeyframesAsList.length === 1 &&\n                valueKeyframesAsList.unshift(null);\n            /**\n             * Add keyframes, mapping offsets to absolute time.\n             */\n            addKeyframes(valueSequence, valueKeyframesAsList, ease, times, startTime, targetTime);\n            maxDuration = Math.max(calculatedDelay + duration, maxDuration);\n            totalDuration = Math.max(targetTime, totalDuration);\n        };\n        if (isMotionValue(subject)) {\n            const subjectSequence = getSubjectSequence(subject, sequences);\n            resolveValueSequence(keyframes, transition, getValueSequence(\"default\", subjectSequence));\n        }\n        else {\n            /**\n             * Find all the elements specified in the definition and parse value\n             * keyframes from their timeline definitions.\n             */\n            const elements = resolveElements(subject, scope, elementCache);\n            const numElements = elements.length;\n            /**\n             * For every element in this segment, process the defined values.\n             */\n            for (let elementIndex = 0; elementIndex < numElements; elementIndex++) {\n                /**\n                 * Cast necessary, but we know these are of this type\n                 */\n                keyframes = keyframes;\n                transition = transition;\n                const element = elements[elementIndex];\n                const subjectSequence = getSubjectSequence(element, sequences);\n                for (const key in keyframes) {\n                    resolveValueSequence(keyframes[key], getValueTransition(transition, key), getValueSequence(key, subjectSequence), elementIndex, numElements);\n                }\n            }\n            prevTime = currentTime;\n            currentTime += maxDuration;\n        }\n    }\n    /**\n     * For every element and value combination create a new animation.\n     */\n    sequences.forEach((valueSequences, element) => {\n        for (const key in valueSequences) {\n            const valueSequence = valueSequences[key];\n            /**\n             * Arrange all the keyframes in ascending time order.\n             */\n            valueSequence.sort(compareByTime);\n            const keyframes = [];\n            const valueOffset = [];\n            const valueEasing = [];\n            /**\n             * For each keyframe, translate absolute times into\n             * relative offsets based on the total duration of the timeline.\n             */\n            for (let i = 0; i < valueSequence.length; i++) {\n                const { at, value, easing } = valueSequence[i];\n                keyframes.push(value);\n                valueOffset.push(progress(0, totalDuration, at));\n                valueEasing.push(easing || \"easeOut\");\n            }\n            /**\n             * If the first keyframe doesn't land on offset: 0\n             * provide one by duplicating the initial keyframe. This ensures\n             * it snaps to the first keyframe when the animation starts.\n             */\n            if (valueOffset[0] !== 0) {\n                valueOffset.unshift(0);\n                keyframes.unshift(keyframes[0]);\n                valueEasing.unshift(defaultSegmentEasing);\n            }\n            /**\n             * If the last keyframe doesn't land on offset: 1\n             * provide one with a null wildcard value. This will ensure it\n             * stays static until the end of the animation.\n             */\n            if (valueOffset[valueOffset.length - 1] !== 1) {\n                valueOffset.push(1);\n                keyframes.push(null);\n            }\n            if (!animationDefinitions.has(element)) {\n                animationDefinitions.set(element, {\n                    keyframes: {},\n                    transition: {},\n                });\n            }\n            const definition = animationDefinitions.get(element);\n            definition.keyframes[key] = keyframes;\n            definition.transition[key] = {\n                ...defaultTransition,\n                duration: totalDuration,\n                ease: valueEasing,\n                times: valueOffset,\n                ...sequenceTransition,\n            };\n        }\n    });\n    return animationDefinitions;\n}\nfunction getSubjectSequence(subject, sequences) {\n    !sequences.has(subject) && sequences.set(subject, {});\n    return sequences.get(subject);\n}\nfunction getValueSequence(name, sequences) {\n    if (!sequences[name])\n        sequences[name] = [];\n    return sequences[name];\n}\nfunction keyframesAsList(keyframes) {\n    return Array.isArray(keyframes) ? keyframes : [keyframes];\n}\nfunction getValueTransition(transition, key) {\n    return transition[key]\n        ? { ...transition, ...transition[key] }\n        : { ...transition };\n}\nconst isNumber = (keyframe) => typeof keyframe === \"number\";\nconst isNumberKeyframesArray = (keyframes) => keyframes.every(isNumber);\n\nexport { createAnimationsFromSequence, getValueTransition };\n","import { resolveElements } from '../render/dom/utils/resolve-element.mjs';\nimport { visualElementStore } from '../render/store.mjs';\nimport { invariant } from '../utils/errors.mjs';\nimport { GroupPlaybackControls } from './GroupPlaybackControls.mjs';\nimport { isDOMKeyframes } from './utils/is-dom-keyframes.mjs';\nimport { animateTarget } from './interfaces/visual-element-target.mjs';\nimport { createVisualElement } from './utils/create-visual-element.mjs';\nimport { animateSingleValue } from './interfaces/single-value.mjs';\nimport { createAnimationsFromSequence } from './sequence/create.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\nfunction animateElements(elementOrSelector, keyframes, options, scope) {\n    const elements = resolveElements(elementOrSelector, scope);\n    const numElements = elements.length;\n    invariant(Boolean(numElements), \"No valid element provided.\");\n    const animations = [];\n    for (let i = 0; i < numElements; i++) {\n        const element = elements[i];\n        /**\n         * Check each element for an associated VisualElement. If none exists,\n         * we need to create one.\n         */\n        if (!visualElementStore.has(element)) {\n            /**\n             * TODO: We only need render-specific parts of the VisualElement.\n             * With some additional work the size of the animate() function\n             * could be reduced significantly.\n             */\n            createVisualElement(element);\n        }\n        const visualElement = visualElementStore.get(element);\n        const transition = { ...options };\n        /**\n         * Resolve stagger function if provided.\n         */\n        if (typeof transition.delay === \"function\") {\n            transition.delay = transition.delay(i, numElements);\n        }\n        animations.push(...animateTarget(visualElement, { ...keyframes, transition }, {}));\n    }\n    return new GroupPlaybackControls(animations);\n}\nconst isSequence = (value) => Array.isArray(value) && Array.isArray(value[0]);\nfunction animateSequence(sequence, options, scope) {\n    const animations = [];\n    const animationDefinitions = createAnimationsFromSequence(sequence, options, scope);\n    animationDefinitions.forEach(({ keyframes, transition }, subject) => {\n        let animation;\n        if (isMotionValue(subject)) {\n            animation = animateSingleValue(subject, keyframes.default, transition.default);\n        }\n        else {\n            animation = animateElements(subject, keyframes, transition);\n        }\n        animations.push(animation);\n    });\n    return new GroupPlaybackControls(animations);\n}\nconst createScopedAnimate = (scope) => {\n    /**\n     * Implementation\n     */\n    function scopedAnimate(valueOrElementOrSequence, keyframes, options) {\n        let animation;\n        if (isSequence(valueOrElementOrSequence)) {\n            animation = animateSequence(valueOrElementOrSequence, keyframes, scope);\n        }\n        else if (isDOMKeyframes(keyframes)) {\n            animation = animateElements(valueOrElementOrSequence, keyframes, options, scope);\n        }\n        else {\n            animation = animateSingleValue(valueOrElementOrSequence, keyframes, options);\n        }\n        if (scope) {\n            scope.animations.push(animation);\n        }\n        return animation;\n    }\n    return scopedAnimate;\n};\nconst animate = createScopedAnimate();\n\nexport { animate, createScopedAnimate };\n","import {\n  forwardRef,\n  useMemo,\n  useEffect,\n  useRef,\n  useState,\n  useImperativeHandle,\n} from \"react\"\nimport { StatisticProps } from \"./interface\"\nimport { animate, AnimationPlaybackControls } from \"framer-motion\"\nimport { Skeleton } from \"@illa-design/skeleton\"\nimport dayjs, { Dayjs } from \"dayjs\"\nimport {\n  statisticStyle,\n  statisticContentStyle,\n  applyStatisticDecoratorStyle,\n  statisticTitleStyle,\n  statisticValueStyle,\n  statisticExtraStyle,\n} from \"./style\"\nimport { isObject } from \"@illa-design/system\"\nimport { applyBoxStyle, deleteCssProps } from \"@illa-design/theme\"\n\ntype StatisticHandle = {\n  onCountUp: () => void\n}\n\nexport const Statistic = forwardRef<any, StatisticProps>((props, ref) => {\n  const {\n    title,\n    value = 0,\n    decimalSeparator = \".\",\n    format,\n    groupSeparator = \",\",\n    loading,\n    precision,\n    suffix,\n    prefix,\n    extra,\n    countUp,\n    countFrom = 0,\n    countDuration = 2000,\n    ...restProps\n  } = props\n\n  const [currentValue, setValue] = useState<string | number | Dayjs>(value)\n\n  const controlRef = useRef<AnimationPlaybackControls | null>()\n\n  function onCountUp(from = countFrom, to = value) {\n    if (from !== to) {\n      controlRef.current = animate(from, Number(to), {\n        duration: Math.floor(countDuration / 1000),\n        ease: \"easeOut\",\n        onUpdate: (latest) => {\n          setValue(latest)\n        },\n        onComplete: () => {\n          setValue(to)\n        },\n      })\n    }\n  }\n\n  useEffect(() => {\n    if (props.countUp) {\n      if (controlRef.current) {\n        controlRef.current.stop()\n      }\n      if (currentValue !== value) {\n        onCountUp(Number(currentValue), value)\n      } else {\n        onCountUp()\n      }\n    } else {\n      setValue(value)\n    }\n\n    return () => {\n      controlRef.current && controlRef.current.stop()\n      controlRef.current = null\n    }\n  }, [value])\n\n  useImperativeHandle<any, StatisticHandle>(ref, () => ({\n    onCountUp,\n  }))\n\n  const renderValue = useMemo<string | number | Dayjs>(() => {\n    if (format) {\n      return dayjs(currentValue).format(format)\n    }\n    let temp: number | string = Number(currentValue)\n    if (!isFinite(temp)) {\n      return currentValue\n    }\n    if (precision !== void 0) {\n      temp = temp.toFixed(precision)\n    }\n    let [int, decimal] = String(temp).split(\".\")\n    int = int.replace(/\\B(?=(\\d{3})+(?!\\d))/g, groupSeparator)\n\n    return decimal !== void 0 ? int + decimalSeparator + decimal : int\n  }, [format, value, groupSeparator, decimalSeparator, precision, currentValue])\n\n  return (\n    <div\n      css={[statisticStyle, applyBoxStyle(props)]}\n      {...deleteCssProps(restProps)}\n    >\n      {title && <div css={statisticTitleStyle}>{title}</div>}\n      <div>\n        <Skeleton\n          animation\n          visible={!!loading}\n          text={{ rows: 1, width: \"100%\" }}\n        >\n          <div css={statisticContentStyle}>\n            {prefix && (\n              <span css={applyStatisticDecoratorStyle(true, !isObject(prefix))}>\n                {prefix}\n              </span>\n            )}\n            <span css={statisticValueStyle}>{renderValue.toString()}</span>\n            {suffix && (\n              <span\n                css={applyStatisticDecoratorStyle(false, !isObject(suffix))}\n              >\n                {suffix}\n              </span>\n            )}\n          </div>\n        </Skeleton>\n        {extra && <div css={statisticExtraStyle}>{extra}</div>}\n      </div>\n    </div>\n  )\n})\n\nStatistic.displayName = \"Statistic\"\n"],"names":["resolveElements","elements","scope","selectorCache","_a","root","invariant","observeTimeline","update","timeline","prevProgress","onFrame","currentTime","progress","frame","cancelFrame","supportsScrollTimeline","memo","GroupPlaybackControls","animations","onResolve","onReject","propName","newValue","i","cancelAll","animation","cancelTimeline","time","speed","max","methodName","controls","isDOMKeyframes","keyframes","createVisualElement","element","options","node","isSVGElement","SVGVisualElement","HTMLVisualElement","visualElementStore","createGeneratorEasing","scale","generator","spring","duration","calcGeneratorDuration","maxGeneratorDuration","millisecondsToSeconds","calcNextTime","current","next","prev","labels","wrap","min","v","rangeSize","getEasingForSegment","easing","isEasingArray","eraseKeyframes","sequence","startTime","endTime","keyframe","removeItem","addKeyframes","offset","mix","compareByTime","a","b","defaultSegmentEasing","createAnimationsFromSequence","defaultTransition","sequenceTransition","defaultDuration","animationDefinitions","sequences","elementCache","timeLabels","prevTime","totalDuration","segment","subject","transition","maxDuration","resolveValueSequence","valueKeyframes","valueTransition","valueSequence","elementIndex","numElements","valueKeyframesAsList","keyframesAsList","delay","times","defaultOffset","type","remainingTransition","ease","calculatedDelay","numKeyframes","absoluteDelta","isNumberKeyframesArray","delta","springTransition","secondsToMilliseconds","springEasing","targetTime","remainder","fillOffset","isMotionValue","subjectSequence","getSubjectSequence","getValueSequence","key","getValueTransition","valueSequences","valueOffset","valueEasing","at","value","definition","name","isNumber","animateElements","elementOrSelector","visualElement","animateTarget","isSequence","animateSequence","animateSingleValue","createScopedAnimate","scopedAnimate","valueOrElementOrSequence","animate","Statistic","forwardRef","props","ref","title","decimalSeparator","format","groupSeparator","loading","precision","suffix","prefix","extra","countUp","countFrom","countDuration","restProps","currentValue","setValue","useState","controlRef","useRef","onCountUp","from","to","latest","useEffect","useImperativeHandle","renderValue","useMemo","dayjs","temp","int","decimal","jsxs","statisticStyle","applyBoxStyle","deleteCssProps","jsx","statisticTitleStyle","Skeleton","statisticContentStyle","applyStatisticDecoratorStyle","isObject","statisticValueStyle","statisticExtraStyle"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]}